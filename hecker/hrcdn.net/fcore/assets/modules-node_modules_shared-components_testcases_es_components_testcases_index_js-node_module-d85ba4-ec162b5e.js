"use strict";
(self.webpackChunkhackerrank_lib = self.webpackChunkhackerrank_lib || []).push([
    ["modules-node_modules_shared-components_testcases_es_components_testcases_index_js-node_module-d85ba4"], {
        RXSW: (e, t, a) => {
            a.d(t, {
                Z: () => ne
            });
            var s = a("+9dH"),
                n = a("PRvr"),
                r = a("DTvD"),
                l = a.n(r),
                c = a("QeER"),
                i = (a("ioFf"), a("Z2Ku"), a("a1Th"), a("yt8O"), a("rGqo"), a("Vd3H"), a("KKXr"), a("L5+t")),
                o = a("Wwog"),
                d = [62, 152, 24, 30],
                m = {
                    STDIN: "stdIn",
                    STDOUT: "stdOut",
                    EXPECTED_OUTPUT: "expectedOutput",
                    COMPILER_COMMAND: "compileCommand",
                    COMPILER_MESSAGE: "compilerMessage",
                    CUSTOM_CHECKER_MESSAGE: "customCheckerMessage",
                    STDOUT_DEBUG: "stdOutDebug",
                    STDERR: "stdErr",
                    LEXICAL_PENALTY: "lexicalPenalty",
                    SCORE: "score"
                },
                u = {
                    [m.STDIN]: "stdin",
                    [m.STDOUT]: "stdout",
                    [m.EXPECTED_OUTPUT]: "expected-output",
                    [m.COMPILER_COMMAND]: "compile-command",
                    [m.COMPILER_MESSAGE]: "compile-message",
                    [m.CUSTOM_CHECKER_MESSAGE]: "custom-checker-message",
                    [m.STDOUT_DEBUG]: "debug-output",
                    [m.STDERR]: "stderr",
                    [m.LEXICAL_PENALTY]: "lexical-penalty",
                    [m.SCORE]: "score"
                },
                p = {
                    [m.STDIN]: "Input (stdin)",
                    [m.STDOUT]: "Your Output (stdout)",
                    [m.EXPECTED_OUTPUT]: "Expected Output",
                    [m.COMPILER_COMMAND]: "Compilation command",
                    [m.COMPILER_MESSAGE]: "Compiler Message",
                    [m.CUSTOM_CHECKER_MESSAGE]: "Custom Checker Error Message",
                    [m.STDOUT_DEBUG]: "Debug output",
                    [m.STDERR]: "Error (stderr)",
                    [m.LEXICAL_PENALTY]: "Restricted Keywords Used",
                    [m.SCORE]: "Score",
                    RUN_AS_CUSTOM_INPUT: "Run as Custom Input",
                    EXECUTION_TIME_LIMIT: "Allowed time limit",
                    ALL_TESTCASES_COMPILED: "All test cases compiled",
                    LOADING: "Loading",
                    TESTCASE_PASSED: "Passed",
                    TESTCASE_FAILED: "Failed",
                    TESTCASE_TLE: "Time limit exceeded",
                    DOWNLOAD: "Download",
                    HIDDEN_TEST_CASE: "Hidden Test Case",
                    TEST_CASE_TITLE: "Test case",
                    SAMPLE_TEST_CASE_TITLE: "Sample Test case"
                },
                E = {
                    [m.STDOUT]: "Output hidden",
                    [m.COMPILER_MESSAGE]: {
                        TLE: "Your code did not execute within the time limits"
                    }
                },
                T = "Use print or log statements to debug why your hidden test cases are failing. ".concat("Hidden test cases are used to evaluate if your code can handle different scenarios, including corner cases", "."),
                h = "Hidden test case",
                v = a("TP7S"),
                g = a.n(v),
                C = a("6qam"),
                S = a.n(C);

            function b(e, t) {
                var a = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var s = Object.getOwnPropertySymbols(e);
                    t && (s = s.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), a.push.apply(a, s)
                }
                return a
            }

            function _(e, t) {
                var a = "",
                    s = "";
                return 1 === e ? (a = "check-circle", s = "success") : -1 === e ? (a = "loading", s = "info") : (s = "error", arguments.length > 2 && void 0 !== arguments[2] && !arguments[2] ? (a = "loading", s = "info") : a = d.includes(t) ? "time" : "cross"), {
                    statusIcon: a,
                    statusClass: s
                }
            }

            function f(e, t, a) {
                var {
                    stdIn: s,
                    stdOut: n,
                    expectedOutput: r,
                    compilerMessage: l,
                    customCheckerMessage: c,
                    stdOutDebug: i,
                    stdErr: o,
                    lexicalPenalty: p,
                    score: T = "",
                    signal: h,
                    showInputDownloadLink: v = !0,
                    showOutputDownloadLink: g = !0,
                    showStdoutDownloadLink: C = !1,
                    showStdoutDebugDownloadLink: S = !1,
                    showStderrDownloadLink: b = !1
                } = t, _ = d.includes(h) ? E[m.COMPILER_MESSAGE].TLE : l, f = {
                    [m.STDIN]: [s, !1, v],
                    [m.STDOUT]: [n, !n, C],
                    [m.EXPECTED_OUTPUT]: [r, !r, g],
                    [m.COMPILER_MESSAGE]: [_, !1, !1],
                    [m.CUSTOM_CHECKER_MESSAGE]: [c, !1, !1],
                    [m.STDOUT_DEBUG]: [i, !1, S],
                    [m.STDERR]: [o, !1, b],
                    [m.LEXICAL_PENALTY]: [p, !1, !1],
                    [m.SCORE]: [T.toString(), !1, !1]
                }, [N, D, O] = f[e];
                return {
                    className: u[e],
                    label: k(e, a),
                    value: N,
                    noResponse: D,
                    showDownloadLink: O
                }
            }
            var N = (0, o.Z)(((e, t, a) => function(e, t, a) {
                return e.map(((e, s) => function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var a = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? b(Object(a), !0).forEach((function(t) {
                            (0, i.Z)(e, t, a[t])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : b(Object(a)).forEach((function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t))
                        }))
                    }
                    return e
                }({}, e, {
                    originalIndex: D(e, s),
                    title: O(e, s, t, a)
                })))
            }(e, t, a).sort(((e, t) => e.status === t.status ? e.originalIndex - t.originalIndex : e.status - t.status))));

            function D(e, t) {
                return e.hasOwnProperty("id") && e.id >= 0 ? e.id : t
            }

            function O(e, t, a, s) {
                return e.hasOwnProperty("id") && e.id >= 0 ? "".concat(s, " ").concat(t) : "".concat(a, " ").concat(t)
            }

            function L(e) {
                return "submit" === e ? "SubmitCode" : "RunCode"
            }

            function k(e, t) {
                return p[e] ? t ? t("shared-components.testcases.".concat(e), p[e]) : p[e] : ""
            }
            const w = e => {
                var {
                    progress: t,
                    maxLimit: a,
                    liveMessage: s,
                    parentId: n
                } = e, r = function(e, t) {
                    return e / t * 100
                }(t, a), i = n ? "".concat(n, "-progressbar") : void 0;
                return l().createElement("div", {
                    className: "tc-progress-wrapper"
                }, l().createElement("span", {
                    className: "status-progress"
                }, s), l().createElement(c.Z, {
                    value: r,
                    shine: !0,
                    role: "progressbar",
                    id: i,
                    "aria-valuenow": t,
                    "aria-valuemin": 0,
                    "aria-valuemax": a,
                    "aria-valuetext": "".concat(t, "/").concat(a, " testcases run")
                }))
            };
            var M = a("urCt"),
                P = a("NbpS"),
                I = a("WSXz"),
                x = a("RmCZ"),
                y = a("BJsi"),
                A = a("VQj3"),
                R = a("+XdK"),
                Z = a("WLt8"),
                U = {
                    "check-circle": {
                        Component: M.Z,
                        label: p.TESTCASE_PASSED
                    },
                    loading: {
                        Component: P.Z,
                        label: p.LOADING
                    },
                    time: {
                        Component: I.Z,
                        label: p.TESTCASE_TLE
                    },
                    cross: {
                        Component: x.Z,
                        label: p.TESTCASE_FAILED
                    }
                },
                H = e => {
                    var {
                        isLiveStatus: t,
                        statusClass: a,
                        statusIcon: r,
                        title: c,
                        isSample: i,
                        hiddenTestCaseTooltip: o,
                        isSelected: d,
                        layout: m
                    } = e, u = (0, n.Z)(e, ["isLiveStatus", "statusClass", "statusIcon", "title", "isSample", "hiddenTestCaseTooltip", "isSelected", "layout"]), p = "loading" === r, E = U[r];
                    return l().createElement("div", (0, s.Z)({
                        className: "d-flex testcase-tab-item tab-item-color-".concat(a, " testcase-item")
                    }, u), t && p ? l().createElement(A.Z, {
                        diameter: 20
                    }) : E && l().createElement(E.Component, {
                        className: "tab-item__status-icon",
                        role: "img",
                        "aria-label": E.label
                    }), l().createElement("span", {
                        className: "ui-icon-label tab-item-label"
                    }, c), !p && !i && l().createElement(R.ZP, {
                        content: o,
                        align: m === Z._.HORIZONTAL ? "bottom" : "right"
                    }, l().createElement(y.Z, {
                        role: "img",
                        "aria-label": o,
                        tabIndex: d ? "0" : void 0,
                        "data-automation": "tab-item-lock-icon"
                    })))
                };
            H.defaultProps = {
                isSample: !1,
                hiddenTestCaseTooltip: h
            };
            const B = H,
                j = e => {
                    var {
                        testcaseStatus: t,
                        signal: a,
                        progress: s,
                        maxLimit: n,
                        totalCount: c,
                        liveMessage: i,
                        isCustomTestcase: o,
                        parentId: d,
                        testcasesTitle: m
                    } = e;
                    return l().createElement(r.Fragment, null, l().createElement(w, {
                        progress: s,
                        maxLimit: n,
                        className: "tc-progress",
                        liveMessage: i,
                        parentId: d
                    }), !o && ((e, t, a, s) => {
                        for (var n = [], r = 0; r < a; r++) {
                            var c = e && e.length ? e[r] : -1,
                                i = t && t.length ? t[r] : 0,
                                {
                                    statusClass: o,
                                    statusIcon: d
                                } = _(c, i),
                                m = "".concat(s, " ").concat(r);
                            n.push(l().createElement(B, {
                                isLiveStatus: !0,
                                statusClass: o,
                                statusIcon: d,
                                title: m,
                                key: r
                            }))
                        }
                        return l().createElement("div", {
                            className: "tc-live-status d-flex flex-column flex-wrap align-content-start"
                        }, n)
                    })(t, a, c, m))
                };
            var G = a("TSYQ"),
                F = a.n(G),
                V = a("vN+2"),
                X = a.n(V),
                z = a("CmRW");
            a("FDph"), a("sUjY");
            const Y = function(e) {
                var {
                    value: t,
                    className: a,
                    executionTimeLimit: s,
                    timeLimitExceeded: n
                } = e;
                return l().createElement("div", {
                    className: F()("d-flex compiler-message", a)
                }, l().createElement("div", {
                    className: "compiler-message__message-wrapper"
                }, l().createElement("pre", {
                    className: "compiler-message__value"
                }, l().createElement("code", null, t))), n && l().createElement("div", {
                    className: "d-flex flex-column compiler-message__tle"
                }, l().createElement("div", {
                    className: "d-flex justify-content-between compiler-message__tle-header"
                }, l().createElement("div", {
                    className: "compiler-message__tle-header__message"
                }, p.TESTCASE_TLE), s && l().createElement("div", {
                    className: "compiler-message__tle-header__time"
                }, p.EXECUTION_TIME_LIMIT, ":", l().createElement("span", {
                    className: "compiler-message__tle-header__time-content"
                }, s, " secs"))), l().createElement("div", {
                    className: "compiler-message__tle-content"
                }, "Your code did not execute within the time limits. Please optimize your code. For more information on execution time limits, refer to the", " ", l().createElement("a", {
                    className: "compiler-message__tle-content-link",
                    href: "https://support.hackerrank.com/hc/en-us/articles/1500002392722-Execution-Environment",
                    target: "_blank"
                }, "environment"), " ", "page")))
            };

            function K(e) {
                var {
                    label: t,
                    value: a,
                    className: s
                } = e;
                return l().createElement("div", {
                    className: "d-flex flex-column flex-wrap compile-error__item"
                }, l().createElement("div", {
                    className: F()(s, "compile-error__message")
                }, l().createElement("span", {
                    className: "d-flex compile-error__label"
                }, t), l().createElement("div", {
                    className: "compile-error__value"
                }, l().createElement(Y, {
                    value: a
                }))))
            }
            const W = function(e) {
                    var {
                        compileCommand: t,
                        compileMessage: a
                    } = e, n = [{
                        key: m.COMPILER_COMMAND,
                        value: t,
                        label: p[m.COMPILER_COMMAND],
                        className: u[m.COMPILER_COMMAND]
                    }, {
                        key: m.COMPILER_MESSAGE,
                        value: a,
                        label: p[m.COMPILER_MESSAGE],
                        className: u[m.COMPILER_MESSAGE]
                    }];
                    return l().createElement("div", {
                        className: "d-flex flex-column compile-error",
                        role: "alert"
                    }, n.map((e => e.value && l().createElement(K, (0, s.Z)({
                        key: e.key
                    }, e)))))
                },
                Q = e => {
                    var {
                        content: t,
                        ariaLabel: a,
                        renderFooter: s
                    } = e;
                    return l().createElement("ul", {
                        className: "lines-container",
                        "aria-label": a
                    }, function(e) {
                        return e.endsWith("\n") && (e = e.substring(0, e.length - 1)), e.split("\n").map(((e, t) => l().createElement("li", {
                            className: "d-flex lines-container__line",
                            key: t
                        }, l().createElement("span", {
                            className: "lines-container__content-wrapper"
                        }, l().createElement("pre", {
                            className: "lines-container__content"
                        }, e)))))
                    }(t), "function" == typeof s && s())
                };
            var J = a("tfeB");
            const q = () => {
                var [e, t] = (0, r.useState)(!0), a = e => {
                    var {
                        bottom: a
                    } = null == e ? void 0 : e.getBoundingClientRect();
                    Math.floor(a) > window.innerHeight + 50 ? t(!0) : t(!1)
                }, s = () => {
                    var e = document.getElementById("testcases-result__id");
                    e && a(e)
                };
                return (0, r.useEffect)((() => {
                    var e = document.getElementById("testcases-result__id");
                    return null == e || e.parentElement.addEventListener("scroll", s), e && a(e), () => {
                        var t;
                        return null == e || null === (t = e.parentElement) || void 0 === t ? void 0 : t.removeEventListener("scroll", s)
                    }
                }), []), !1 === e ? null : l().createElement("button", {
                    className: "scroll-to-bottom",
                    onClick: () => {
                        var e, t = document.getElementById("testcases-result__id");
                        t && (null == t || null === (e = t.parentElement) || void 0 === e ? void 0 : e.lastChild).scrollIntoView({
                            behavior: "smooth",
                            block: "end"
                        })
                    },
                    id: "scroll-to-bottom",
                    "aria-label": "click to scroll to bottom of output"
                }, l().createElement(J.Z, {
                    className: "scroll-to-bottom__icon"
                }))
            };

            function $(e, t) {
                var a = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var s = Object.getOwnPropertySymbols(e);
                    t && (s = s.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), a.push.apply(a, s)
                }
                return a
            }

            function ee(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var a = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? $(Object(a), !0).forEach((function(t) {
                        (0, i.Z)(e, t, a[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : $(Object(a)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t))
                    }))
                }
                return e
            }
            class te extends r.Component {
                constructor() {
                    super(...arguments), (0, i.Z)(this, "state", {
                        activeTab: 0,
                        testcases: []
                    }), (0, i.Z)(this, "getActiveTestcase", (() => {
                        var {
                            testcases: e,
                            activeTab: t
                        } = this.state;
                        return e[t]
                    })), (0, i.Z)(this, "renderDownloadLink", (e => {
                        var {
                            handleDownload: t,
                            showLineNumbers: a
                        } = this.props, {
                            isDataTruncated: n,
                            showDownload: c,
                            downloadLinkDownAttrs: i,
                            className: o,
                            testcaseIndex: d
                        } = e;
                        return l().createElement(r.Fragment, null, n && c && (a ? l().createElement("li", {
                            className: "d-flex lines-container__line full-testcase",
                            key: "download_fulltestcase"
                        }, l().createElement(z.Dr, (0, s.Z)({}, i, {
                            className: "d-flex align-items-center justify-content-end lines-container__link full-testcase__link text-link cursor-pointer",
                            onClick: t.bind(this, o, d)
                        }), "Download to view the full testcase")) : l().createElement(z.Dr, (0, s.Z)({}, i, {
                            className: "d-flex align-items-center justify-content-start text-link cursor-pointer download_link",
                            onClick: t.bind(this, o, d)
                        }), "Download to view the full testcase")))
                    })), (0, i.Z)(this, "onTabClick", (e => {
                        var {
                            fetchTestcase: t
                        } = this.props;
                        this.setState({
                            activeTab: e
                        }, (() => {
                            var {
                                originalIndex: e
                            } = this.getActiveTestcase();
                            "function" == typeof t && t(e)
                        }))
                    })), (0, i.Z)(this, "renderTabItem", ((e, t) => {
                        var {
                            type: a,
                            layout: n,
                            isCustomTestcase: r,
                            analyticsAttributes: c,
                            hiddenTestCaseTooltip: i
                        } = this.props, {
                            activeTab: o
                        } = this.state;
                        if ("compile" !== a || !r) {
                            var {
                                testcases: d
                            } = this.state, {
                                originalIndex: m
                            } = this.getActiveTestcase(), u = ee({}, c, {
                                "data-analytics": "TestCaseResultsTab",
                                "data-attr1": L(a),
                                "data-attr5": m
                            }), p = function(e, t) {
                                var a = t[e],
                                    {
                                        status: s,
                                        signal: n,
                                        checkerProcessed: r
                                    } = a;
                                return _(s, n, r)
                            }(t, d), {
                                statusClass: E,
                                statusIcon: T
                            } = p, {
                                title: h
                            } = d[t], v = d[t].isSample;
                            return l().createElement(B, (0, s.Z)({
                                statusClass: E,
                                statusIcon: T,
                                title: h,
                                isSelected: o === t
                            }, u, {
                                isSample: v,
                                hiddenTestCaseTooltip: i,
                                layout: n
                            }))
                        }
                    }))
                }
                static getDerivedStateFromProps(e) {
                    var {
                        testcases: t,
                        testcasesTitle: a,
                        t: s
                    } = e, n = k("SAMPLE_TEST_CASE_TITLE", s);
                    return {
                        testcases: N(t, a, n)
                    }
                }
                componentDidMount() {
                    var {
                        shouldUnlockHiddenTestcase: e,
                        getHiddenTestcases: t,
                        fetchTestcase: a,
                        type: s
                    } = this.props;
                    if (e && "function" == typeof t && t(), "submit" === s && "function" == typeof a) {
                        var {
                            originalIndex: n
                        } = this.getActiveTestcase();
                        a(n)
                    }
                }
                getRunTestCaseButtonText(e, t) {
                    var a = k("RUN_AS_CUSTOM_INPUT", t),
                        {
                            isCustomTestcase: s
                        } = this.props;
                    return s || e !== m.STDIN ? null : a
                }
                renderLabel(e, t) {
                    var a = function(e) {
                            var t = e.split("-").map((e => e.charAt(0).toUpperCase() + e.slice(1))),
                                a = t.join("");
                            return "render".concat(a, "Label")
                        }(t),
                        {
                            [a]: s
                        } = this.getActiveTestcase();
                    return "function" == typeof s ? s() : e
                }
                renderCompilerMessage(e, t, a) {
                    var {
                        executionTimeLimit: s,
                        showLineNumbers: n,
                        t: c
                    } = this.props, i = t === k(m.STDOUT, c) && e === E[m.STDOUT];
                    return t === k(m.COMPILER_MESSAGE, c) ? e !== E[m.COMPILER_MESSAGE].TLE ? l().createElement(Y, {
                        value: e
                    }) : l().createElement(Y, {
                        timeLimitExceeded: !0,
                        executionTimeLimit: s
                    }) : l().createElement(r.Fragment, null, n && !i ? l().createElement(Q, {
                        ariaLabel: t,
                        content: e,
                        renderFooter: this.renderDownloadLink.bind(this, a)
                    }) : l().createElement(r.Fragment, null, l().createElement(Y, {
                        value: e
                    }), this.renderDownloadLink(a)))
                }
                renderCompileFieldLabelLinks(e, t, a, n, c) {
                    var {
                        showRunTestCaseButton: i,
                        handleDownload: o,
                        handleRunTestCase: d,
                        isCustomTestcase: m,
                        t: u
                    } = this.props, p = ee({}, a, {
                        "data-attr6": "right",
                        "aria-label": "Download ".concat(k(e, u))
                    }), E = this.getRunTestCaseButtonText(e, u), T = k("DOWNLOAD", u), {
                        originalIndex: h
                    } = this.getActiveTestcase(), v = !n && i && E;
                    return l().createElement("span", {
                        className: "compile-field-label__links"
                    }, v && l().createElement(r.Fragment, null, l().createElement(z.Dr, {
                        className: "text-link cursor-pointer",
                        onClick: d.bind(this, h),
                        "data-automation": "compile-field-label-run-test"
                    }, E), !m && l().createElement("span", {
                        className: "divider"
                    }, "|")), c && l().createElement(z.Dr, (0, s.Z)({}, p, {
                        className: "text-link cursor-pointer",
                        onClick: o.bind(this, t, h),
                        "data-automation": "compile-field-label-download"
                    }), T))
                }
                renderRunTimeSingleMessage(e, t) {
                    var {
                        analyticsAttributes: a,
                        type: s,
                        defaultTextForOutput: n,
                        showLineNumbers: r
                    } = this.props, {
                        className: c,
                        label: i,
                        value: o = "",
                        noResponse: d,
                        showDownloadLink: m
                    } = e, {
                        originalIndex: u
                    } = this.getActiveTestcase(), p = o.includes("{-truncated-}"), E = ee({}, a, {
                        "data-analytics": "DownloadTestcase",
                        "data-attr1": L(s),
                        "data-attr4": c,
                        "data-attr7": u
                    }), T = {
                        isDataTruncated: p,
                        showDownload: m,
                        downloadLinkDownAttrs: ee({}, E, {
                            "data-attr6": "down"
                        }),
                        className: c,
                        testcaseIndex: u
                    };
                    return l().createElement("div", {
                        key: i,
                        className: F()(c, "run-time-message flex-display", {
                            "run-time-message__line-numbers": r
                        })
                    }, l().createElement("div", {
                        className: "d-flex compile-field-label"
                    }, this.renderLabel(i, c), this.renderCompileFieldLabelLinks(t, c, E, p, m), " "), o && l().createElement("div", {
                        className: "compile-output-message"
                    }, this.renderCompilerMessage(o, i, T)), d && l().createElement("pre", {
                        className: "compile-output-message no-response"
                    }, l().createElement("code", {
                        className: "bold"
                    }, n)))
                }
                renderRunTimeMessages() {
                    var {
                        showScrollToBottomBtn: e
                    } = this.props, t = this.getActiveTestcase(), a = [m.COMPILER_MESSAGE, m.STDERR, m.STDIN, m.STDOUT, m.EXPECTED_OUTPUT, m.CUSTOM_CHECKER_MESSAGE, m.STDOUT_DEBUG, m.LEXICAL_PENALTY, m.SCORE], {
                        t: s
                    } = this.props, n = a.map((e => {
                        if (n = e, r = t[e], l = [m.STDOUT, m.EXPECTED_OUTPUT], !g()(r) && !S()(r) && (l.includes(n) && "string" == typeof r || r)) {
                            var a = f(e, t, s);
                            return this.renderRunTimeSingleMessage(a, e)
                        }
                        var n, r, l;
                        return null
                    }));
                    return l().createElement("div", {
                        id: "testcases-result__id",
                        className: "d-flex flex-column flex-wrap compilation-time-response"
                    }, n, e ? l().createElement(q, null) : null)
                }
                renderTestcaseContent() {
                    return l().createElement("div", {
                        className: F()("tab-pane-content")
                    }, this.renderRunTimeMessages())
                }
                renderLoadingContent() {
                    return l().createElement("div", {
                        className: "bold loading-testcase text-align-center align-self-center"
                    }, "Loading testcase ...")
                }
                renderUnlockMessageContent() {
                    var {
                        unlockTestcaseMessage: e,
                        handleUnlock: t,
                        analyticsAttributes: a,
                        unlockButtonText: n,
                        t: r
                    } = this.props, c = this.getActiveTestcase(), {
                        originalIndex: i,
                        unlockingTestCase: o,
                        unlockError: d
                    } = c, m = ee({}, a, {
                        "data-analytics": "UnlockTestCase",
                        "data-attr1": "SubmitCode",
                        "data-attr5": i
                    }), u = k("HIDDEN_TEST_CASE", r);
                    return l().createElement("div", {
                        className: "unlock-block"
                    }, l().createElement("div", {
                        className: "unlock-heading"
                    }, l().createElement(y.Z, null), l().createElement("span", {
                        className: "ui-icon-label"
                    }, u)), l().createElement("div", {
                        className: d ? "unlock-error" : "unlock-cost"
                    }, d || e), l().createElement(z.ZP, (0, s.Z)({}, m, {
                        className: "ui-btn-line hovered",
                        loading: !!o,
                        onClick: t.bind(this, i)
                    }), n))
                }
                renderUnlockMessage() {
                    var {
                        t: e
                    } = this.props, t = this.getActiveTestcase(), a = [
                        [f(m.COMPILER_MESSAGE, t, e), m.COMPILER_MESSAGE],
                        [f(m.STDOUT_DEBUG, t, e), m.STDOUT_DEBUG],
                        [f(m.STDOUT, t, e), m.STDOUT]
                    ];
                    return l().createElement("div", {
                        className: "unlock-wrapper"
                    }, a.map((e => {
                        var [t, a] = e;
                        return t.value && this.renderRunTimeSingleMessage(t, a)
                    })), this.renderUnlockMessageContent())
                }
                renderHiddenTestcaseContent() {
                    var {
                        hiddenTestCaseHelpText: e,
                        t
                    } = this.props, a = k("HIDDEN_TEST_CASE", t);
                    return l().createElement("section", {
                        className: "hidden-testcase-wrapper"
                    }, this.renderRunTimeMessages(), l().createElement("div", {
                        className: "hidden-testcase-wrapper__content"
                    }, l().createElement(y.Z, null), l().createElement("header", {
                        className: "ui-icon-label"
                    }, a), l().createElement("p", {
                        className: "hidden-testcase-wrapper__content__help-text"
                    }, e)))
                }
                renderTabsContent() {
                    var {
                        type: e,
                        shouldUnlockHiddenTestcase: t
                    } = this.props, a = this.getActiveTestcase(), s = "";
                    return "compile" === e ? s = this.renderTestcaseContent() : "submit" === e && (s = a.purchased ? a.loadData ? this.renderLoadingContent() : a.isSample ? this.renderTestcaseContent() : this.renderHiddenTestcaseContent() : t ? this.renderUnlockMessage() : this.renderHiddenTestcaseContent()), l().createElement(Z.ZP.Content, {
                        className: "tab-content d-flex"
                    }, s)
                }
                render() {
                    var {
                        tabListProps: e,
                        compileCommand: t,
                        compileMessage: a,
                        result: s,
                        tabTitle: n,
                        layout: r
                    } = this.props;
                    if (function(e) {
                            return 0 !== e
                        }(s)) return l().createElement("section", {
                        className: "theme-m testcases-result-wrapper"
                    }, l().createElement(W, {
                        compileCommand: t,
                        compileMessage: a
                    }));
                    if (!this.getActiveTestcase()) return null;
                    var {
                        activeTab: c,
                        testcases: i
                    } = this.state, o = "".concat(i.length, " Testcases"), d = ee({
                        tabList: i,
                        renderItem: this.renderTabItem,
                        dropdownTitle: o,
                        title: n
                    }, e);
                    return l().createElement(Z.ZP, {
                        layout: r,
                        className: "testcases-result-wrapper theme-m",
                        activeTab: c,
                        onTabClick: this.onTabClick
                    }, l().createElement(Z.ZP.List, d), this.renderTabsContent())
                }
            }(0, i.Z)(te, "defaultProps", {
                result: 0,
                handleDownload: X(),
                shouldUnlockHiddenTestcase: !1,
                handleUnlock: X(),
                unlockTestcaseMessage: "Unlock this testcase for 5 hackos",
                defaultTextForOutput: "~ no response on stdout ~",
                unlockButtonText: "Unlock",
                showRunTestCaseButton: !1,
                hiddenTestCaseHelpText: T,
                hiddenTestCaseTooltip: h,
                layout: Z._.VERTICAL,
                showScrollToBottomBtn: !1
            });
            const ae = te;
            var se = e => {
                var {
                    liveStatus: t,
                    statusCode: a,
                    analyticsAttributes: r,
                    bingChallenge: c,
                    isCustomTestcase: i,
                    fetchTestcase: o,
                    testcases: d,
                    getHiddenTestcases: m,
                    handleDownload: u,
                    handleUnlock: p,
                    unlockTestcaseMessage: E,
                    shouldUnlockHiddenTestcase: T,
                    type: h,
                    id: v,
                    allTestCasesCompiledTitle: g,
                    tabTitle: C,
                    t: S
                } = e, b = (0, n.Z)(e, ["liveStatus", "statusCode", "analyticsAttributes", "bingChallenge", "isCustomTestcase", "fetchTestcase", "testcases", "getHiddenTestcases", "handleDownload", "handleUnlock", "unlockTestcaseMessage", "shouldUnlockHiddenTestcase", "type", "id", "allTestCasesCompiledTitle", "tabTitle", "t"]), _ = k("TEST_CASE_TITLE", S), f = 1 === a, N = {
                    id: v,
                    "aria-describedby": v && !f ? "".concat(v, "-progressbar") : void 0,
                    "aria-busy": !f || void 0
                };
                return l().createElement("div", (0, s.Z)({
                    className: "testcase-wrapper theme-m"
                }, N), !f && l().createElement("span", {
                    role: "alert",
                    className: "sr-only",
                    "aria-label": !f && t ? t.liveMessage : g
                }), 1 === a ? l().createElement(l().Fragment, null, l().createElement(ae, (0, s.Z)({
                    analyticsAttributes: r,
                    bingChallenge: c,
                    isCustomTestcase: i,
                    fetchTestcase: o,
                    layout: "vertical",
                    testcases: d,
                    getHiddenTestcases: m,
                    handleDownload: u,
                    handleUnlock: p,
                    unlockTestcaseMessage: E,
                    shouldUnlockHiddenTestcase: T,
                    type: h,
                    t: S,
                    tabTitle: C,
                    testcasesTitle: _
                }, b))) : l().createElement("div", {
                    className: "tc-live-status-wrapper"
                }, l().createElement(j, (0, s.Z)({}, t, {
                    isCustomTestcase: i,
                    parentId: v,
                    testcasesTitle: _
                }))))
            };
            se.defaultProps = {
                statusCode: 0,
                allTestCasesCompiledTitle: p.ALL_TESTCASES_COMPILED
            };
            const ne = se
        },
        ZScv: (e, t, a) => {
            a.d(t, {
                Z: () => u
            });
            var s = a("+9dH"),
                n = a("PRvr"),
                r = a("L5+t"),
                l = a("DTvD"),
                c = a.n(l),
                i = a("17x9"),
                o = a.n(i),
                d = ["className", "children", "multiple", "accept", "onChange", "disabled"];
            class m extends l.Component {
                constructor() {
                    super(...arguments), (0, r.Z)(this, "onClick", (() => {
                        this.fileInput.value = null, this.fileInput.click()
                    })), (0, r.Z)(this, "fileInputRefCallback", (e => {
                        this.fileInput = e
                    })), (0, r.Z)(this, "click", (() => {
                        this.onClick()
                    }))
                }
                render() {
                    var e = this.props,
                        {
                            className: t,
                            children: a,
                            multiple: r,
                            accept: l,
                            onChange: i,
                            disabled: o
                        } = e,
                        m = (0, n.Z)(e, d);
                    return c().createElement("div", {
                        className: t,
                        onClick: this.onClick
                    }, a, c().createElement("input", (0, s.Z)({
                        className: "d-none",
                        type: "file",
                        ref: this.fileInputRefCallback,
                        multiple: r,
                        accept: l,
                        onChange: i,
                        disabled: o
                    }, m)))
                }
            }(0, r.Z)(m, "propTypes", {
                accept: o().string,
                multiple: o().bool,
                onChange: o().func.isRequired,
                className: o().string,
                children: o().element,
                disabled: o().bool
            }), (0, r.Z)(m, "defaultProps", {
                accept: "",
                multiple: !1,
                className: ""
            });
            const u = m
        },
        "iN+d": (e, t, a) => {
            a.d(t, {
                L: () => i
            });
            var s, n, r = a("M39V"),
                l = a.n(r),
                c = {
                    chrome: ">=94",
                    firefox: ">=93",
                    safari: ">=16.4",
                    edge: ">=94"
                },
                i = function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : c,
                        t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null === (s = window) || void 0 === s || null === (n = s.navigator) || void 0 === n ? void 0 : n.userAgent,
                        a = l().getParser(t),
                        r = a.getBrowserName(),
                        i = a.satisfies(e);
                    return {
                        browserName: r,
                        browserVersion: a.getBrowserVersion(),
                        isBrowserSupported: i
                    }
                }
        },
        "6zQX": (e, t, a) => {
            var s, n;
            a.d(t, {
                IY: () => l,
                wS: () => c
            });
            try {
                s = localStorage, n = sessionStorage
            } catch (e) {
                s = {}, n = {}
            }

            function r(e) {
                var t = {
                    set: function(t, a, s) {
                        var n = Date.now() / 1e3,
                            r = {
                                updatedTime: n,
                                data: a
                            };
                        s && (r.expireOn = n + s), e[t] = JSON.stringify(r)
                    },
                    get: function(a, s) {
                        var n = e[a];
                        try {
                            n = JSON.parse(n)
                        } catch (e) {
                            n = {
                                data: n
                            }
                        }
                        if (!(n.expireOn && n.expireOn < Date.now() / 1e3)) return s || !("data" in n) ? n : n.data;
                        t.delete(a)
                    },
                    delete: function(t) {
                        e[t] && delete e[t]
                    }
                };
                return t
            }
            var l = r(s),
                c = r(n)
        },
        tfeB: (e, t, a) => {
            a.d(t, {
                Z: () => i
            });
            var s = a("+9dH"),
                n = a("gSVb"),
                r = a("PRvr"),
                l = a("DTvD"),
                c = a.n(l);
            a("kRiR");
            const i = e => {
                var {
                    className: t = ""
                } = e, a = (0, r.Z)(e, ["className"]);
                return a = (0, n.Z)({}, a, {
                    className: "".concat(t, " ui-svg-icon")
                }), c().createElement("svg", (0, s.Z)({
                    viewBox: "0 0 24 24",
                    width: "1em",
                    height: "1em"
                }, a, {
                    fill: "currentColor"
                }), c().createElement("path", {
                    d: "M19.9 12.4c.1-.2.1-.5 0-.8-.1-.1-.1-.2-.2-.3l-7-7c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l5.3 5.3H5c-.6 0-1 .4-1 1s.4 1 1 1h11.6l-5.3 5.3c-.4.4-.4 1 0 1.4.2.2.5.3.7.3s.5-.1.7-.3l7-7c.1-.1.2-.2.2-.3z"
                }))
            }
        },
        urCt: (e, t, a) => {
            a.d(t, {
                Z: () => i
            });
            var s = a("+9dH"),
                n = a("gSVb"),
                r = a("PRvr"),
                l = a("DTvD"),
                c = a.n(l);
            a("kRiR");
            const i = e => {
                var {
                    className: t = ""
                } = e, a = (0, r.Z)(e, ["className"]);
                return a = (0, n.Z)({}, a, {
                    className: "".concat(t, " ui-svg-icon")
                }), c().createElement("svg", (0, s.Z)({
                    viewBox: "0 0 24 24",
                    width: "1em",
                    height: "1em"
                }, a, {
                    fill: "currentColor"
                }), c().createElement("path", {
                    d: "M12 23C5.9 23 1 18.1 1 12c0-3 1.1-5.7 3.2-7.8C6.3 2.1 9.1 1 12 1c1.6 0 3.1.3 4.5 1 .5.2.7.8.5 1.3-.2.5-.8.7-1.3.5-1.2-.5-2.4-.8-3.7-.8-5 0-9 4-9 9s4 9 9 9 9-4 9-9v-.9c0-.6.4-1 1-1s1 .4 1 1v.9c0 6.1-4.9 11-11 11z"
                }), c().createElement("path", {
                    d: "M12 15c-.3 0-.5-.1-.7-.3l-3-3c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l2.3 2.3L22.3 2.3c.4-.4 1-.4 1.4 0s.4 1 0 1.4l-11 11c-.2.2-.4.3-.7.3z"
                }))
            }
        },
        NbpS: (e, t, a) => {
            a.d(t, {
                Z: () => i
            });
            var s = a("+9dH"),
                n = a("gSVb"),
                r = a("PRvr"),
                l = a("DTvD"),
                c = a.n(l);
            a("kRiR");
            const i = e => {
                var {
                    className: t = ""
                } = e, a = (0, r.Z)(e, ["className"]);
                return a = (0, n.Z)({}, a, {
                    className: "".concat(t, " ui-svg-icon")
                }), c().createElement("svg", (0, s.Z)({
                    viewBox: "0 0 100 100",
                    width: "1em",
                    height: "1em"
                }, a, {
                    fill: "currentColor"
                }), c().createElement("path", {
                    d: "M25.885 65.414a19.77 19.77 0 00-5.791 13.98v7.675H14.15V95h71.7v-7.931h-5.944v-7.675a19.77 19.77 0 00-5.79-13.98L60.741 52.041a2.887 2.887 0 010-4.082l13.373-13.373a19.77 19.77 0 005.791-13.98v-7.675h5.944V5h-71.7v7.931h5.944v7.675a19.77 19.77 0 005.79 13.98L39.259 47.96a2.887 2.887 0 010 4.082L25.885 65.414zM44.18 43.037L30.807 29.664a12.725 12.725 0 01-3.752-9.058v-8.645h45.89v8.645c0 3.422-1.332 6.639-3.752 9.058L55.82 43.037A9.783 9.783 0 0052.936 50a9.783 9.783 0 002.885 6.963l13.372 13.374c1.572 1.571 2.63 3.5 3.216 5.582C69.474 73.637 54.443 62.124 50 62.124c-4.444 0-19.474 11.513-22.41 13.795.588-2.083 1.645-4.01 3.217-5.583L44.18 56.963c3.839-3.839 3.84-10.086 0-13.926z"
                }))
            }
        },
        BJsi: (e, t, a) => {
            a.d(t, {
                Z: () => i
            });
            var s = a("+9dH"),
                n = a("gSVb"),
                r = a("PRvr"),
                l = a("DTvD"),
                c = a.n(l);
            a("kRiR");
            const i = e => {
                var {
                    className: t = ""
                } = e, a = (0, r.Z)(e, ["className"]);
                return a = (0, n.Z)({}, a, {
                    className: "".concat(t, " ui-svg-icon")
                }), c().createElement("svg", (0, s.Z)({
                    viewBox: "0 0 24 24",
                    width: "1em",
                    height: "1em"
                }, a, {
                    fill: "currentColor"
                }), c().createElement("path", {
                    d: "M19 10h-1V7c0-3.3-2.7-6-6-6S6 3.7 6 7v3H5c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zM8 7c0-2.2 1.8-4 4-4s4 1.8 4 4v3H8V7zm12 13c0 .6-.4 1-1 1H5c-.6 0-1-.4-1-1v-7c0-.6.4-1 1-1h14c.6 0 1 .4 1 1v7z"
                }))
            }
        },
        WSXz: (e, t, a) => {
            a.d(t, {
                Z: () => i
            });
            var s = a("+9dH"),
                n = a("gSVb"),
                r = a("PRvr"),
                l = a("DTvD"),
                c = a.n(l);
            a("kRiR");
            const i = e => {
                var {
                    className: t = ""
                } = e, a = (0, r.Z)(e, ["className"]);
                return a = (0, n.Z)({}, a, {
                    className: "".concat(t, " ui-svg-icon")
                }), c().createElement("svg", (0, s.Z)({
                    viewBox: "0 0 24 24",
                    width: "1em",
                    height: "1em"
                }, a, {
                    fill: "currentColor"
                }), c().createElement("path", {
                    d: "M12 23C5.9 23 1 18.1 1 12S5.9 1 12 1s11 4.9 11 11-4.9 11-11 11zm0-20c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9z"
                }), c().createElement("path", {
                    d: "M16 15c-.2 0-.3 0-.4-.1l-4-2c-.4-.2-.6-.5-.6-.9V6c0-.6.4-1 1-1s1 .4 1 1v5.4l3.4 1.7c.5.2.7.8.4 1.3-.1.4-.4.6-.8.6z"
                }))
            }
        },
        "6wV0": (e, t, a) => {
            a.d(t, {
                Z: () => m
            });
            var s = a("+9dH"),
                n = a("PRvr"),
                r = a("DTvD"),
                l = a.n(r),
                c = a("TSYQ"),
                i = a.n(c),
                o = ["title", "layer", "active", "className", "children", "headingLevel"];

            function d(e) {
                var {
                    title: t,
                    layer: a,
                    active: r,
                    className: c,
                    children: d,
                    headingLevel: m
                } = e, u = (0, n.Z)(e, o), p = "h".concat(m);
                return l().createElement("div", (0, s.Z)({
                    className: i()(c, "ui-card", "ui-layer-".concat(a), {
                        "active-card": r
                    })
                }, u), t && l().createElement(p, {
                    className: "ui-title text-sec-headline-xs"
                }, t), l().createElement("div", {
                    className: "card-content"
                }, d))
            }
            d.defaultProps = {
                title: "",
                layer: 2,
                active: !1,
                headingLevel: 2
            };
            const m = d
        },
        PClM: (e, t, a) => {
            a.d(t, {
                Z: () => u
            });
            var s = a("+9dH"),
                n = a("PRvr"),
                r = a("DTvD"),
                l = a("TSYQ"),
                c = a.n(l),
                i = a("TBNV"),
                o = a("CmRW"),
                d = ["confirmText", "cancelText", "onConfirm", "onCancel", "inProgress", "children", "dialogClass", "cancelBtnProps", "confirmBtnProps"];

            function m(e) {
                var {
                    confirmText: t,
                    cancelText: a,
                    onConfirm: l,
                    onCancel: m,
                    inProgress: u,
                    children: p,
                    dialogClass: E,
                    cancelBtnProps: T,
                    confirmBtnProps: h
                } = e, v = (0, n.Z)(e, d), {
                    theme: g
                } = v, C = "theme-m" === g ? "ui-btn-secondary" : "ui-btn-default";
                return r.createElement(i.Z, (0, s.Z)({
                    modalClass: c()("confirm-dialog", E)
                }, v), p, r.createElement("div", {
                    className: "confirm-button-group"
                }, a && r.createElement(o.ZP, (0, s.Z)({
                    className: c()("cancel-button", C),
                    disabled: !!u,
                    loading: "cancel" === u,
                    onClick: m
                }, T), a), t && r.createElement(o.ZP, (0, s.Z)({
                    className: "ui-btn-primary confirm-button",
                    disabled: !!u,
                    loading: !0 === u || "confirm" === u
                }, h, {
                    onClick: l
                }), t)))
            }
            m.defaultProps = {
                theme: "theme-m",
                confirmText: "Yes",
                cancelText: "No",
                cancelBtnProps: {},
                confirmBtnProps: {}
            };
            const u = m
        }
    }
]);
//# sourceMappingURL=https://hrcdn.net/fcore/assets/sourcemaps/modules-node_modules_shared-components_testcases_es_components_testcases_index_js-node_module-d85ba4-ec162b5e.js.map