"use strict";
(self.webpackChunkhackerrank_lib = self.webpackChunkhackerrank_lib || []).push([
    ["modules-node_modules_ui-kit_es_components_tab_tab_js"], {
        WLt8: (e, t, a) => {
            a.d(t, {
                _: () => k,
                ZP: () => V
            }), a("Z2Ku");
            var n = a("L5+t"),
                i = a("+9dH"),
                r = a("PRvr"),
                s = a("DTvD"),
                o = a.n(s),
                c = a("66t9"),
                l = a("4zxa"),
                d = a("9vzT"),
                b = a("TSYQ"),
                u = a.n(b),
                T = a("POct"),
                h = a("t0az"),
                m = a("vxMJ"),
                p = a("5F93"),
                v = ["index", "id", "as", "isActive", "isOnlyForScreenReader", "to", "onClick", "onKeyDown", "children", "panelId", "className"],
                I = ["visibleTabCount", "className", "tabContext", "tabList", "renderItem", "tabItemProps", "dropdownTitle", "excludeVisibleTabs"],
                C = ["children", "className", "tabContext"],
                x = ["children", "className", "layout", "activeTab", "id", "as", "onTabClick"],
                k = {
                    HORIZONTAL: "horizontal",
                    VERTICAL: "vertical"
                },
                A = {
                    NAV: "nav",
                    TAB: "tab"
                },
                {
                    Provider: y,
                    Consumer: f
                } = (0, s.createContext)({
                    activeTab: 0,
                    layout: k.HORIZONTAL,
                    id: "",
                    onTabClick: p.ZT,
                    as: A.TAB
                }),
                Z = (0, T.UZ)(f, (e => {
                    if (!e) throw new Error("Tab.Content and Tab.List can be only used inside Tab scope.");
                    return {
                        tabContext: e
                    }
                }));

            function w(e, t) {
                return "".concat(e, "-item-").concat(t)
            }

            function N(e, t) {
                return "".concat(e, "-content-").concat(t)
            }

            function g(e) {
                var {
                    index: t,
                    id: a,
                    as: n,
                    isActive: s,
                    isOnlyForScreenReader: l,
                    to: d,
                    onClick: b,
                    onKeyDown: T,
                    children: h,
                    panelId: m,
                    className: p
                } = e, I = (0, r.Z)(e, v), C = o().useCallback((() => {
                    b(t)
                }), [b]), x = n === A.NAV ? c.Link : "button", k = n === A.NAV ? {
                    to: d,
                    tabIndex: l ? -1 : void 0
                } : {
                    onClick: C,
                    role: "tab",
                    tabIndex: s ? 0 : -1,
                    onKeyDown: T,
                    "aria-selected": s,
                    "aria-controls": s ? m : void 0
                };
                return o().createElement(x, (0, i.Z)({}, I, {
                    id: a,
                    className: u()(p, "tab-item", {
                        "sr-only": l,
                        active: s
                    })
                }, k), h)
            }
            class L extends s.PureComponent {
                constructor() {
                    var e;
                    super(...arguments), e = this, (0, n.Z)(this, "focusTabItem", !1), (0, n.Z)(this, "handleKeyDown", (e => {
                        if (!(e.altKey || e.ctrlKey || e.metaKey || e.shiftKey)) {
                            var {
                                tabContext: {
                                    layout: t,
                                    activeTab: a
                                },
                                tabList: n
                            } = this.props, i = t === k.HORIZONTAL, r = 0 === a ? n.length - 1 : a - 1, s = a === n.length - 1 ? 0 : a + 1;
                            switch (e.key) {
                                case m.n.Home:
                                case m.n.PageUp:
                                    this.clickAndFocus(0, e);
                                    break;
                                case m.n.End:
                                case m.n.PageDown:
                                    this.clickAndFocus(n.length - 1, e);
                                    break;
                                case m.n.ArrowUp:
                                    i || this.clickAndFocus(r, e);
                                    break;
                                case m.n.ArrowLeft:
                                    i && this.clickAndFocus(r, e);
                                    break;
                                case m.n.ArrowDown:
                                    i || this.clickAndFocus(s, e);
                                    break;
                                case m.n.ArrowRight:
                                    i && this.clickAndFocus(s, e)
                            }
                        }
                    })), (0, n.Z)(this, "handleDropdownSelect", (e => {
                        var {
                            tabContext: {
                                as: t
                            }
                        } = this.props;
                        if (t === A.NAV) {
                            var a = document.getElementById(this.getTabItemId(e));
                            if (a) return void a.click()
                        }
                        this.clickAndFocus(e)
                    })), (0, n.Z)(this, "handleTabItemClick", (e => {
                        var {
                            tabContext: {
                                onTabClick: t
                            }
                        } = this.props;
                        t(e), this.focusTabItem = !1
                    })), (0, n.Z)(this, "renderTabItem", (function(t, a) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                            {
                                renderItem: r,
                                tabContext: {
                                    activeTab: s,
                                    as: c,
                                    id: l
                                },
                                tabItemProps: d
                            } = e.props,
                            {
                                idx: b,
                                tab: u
                            } = t,
                            T = !("number" != typeof a || !n.length || n.includes(a)),
                            h = b === s,
                            m = "function" == typeof d ? d(u, b) : d;
                        return o().createElement(g, (0, i.Z)({}, m, {
                            key: b,
                            index: b,
                            id: e.getTabItemId(b),
                            isActive: h,
                            onClick: e.handleTabItemClick,
                            onKeyDown: e.handleKeyDown,
                            isOnlyForScreenReader: T,
                            as: c,
                            to: u.to,
                            panelId: N(l, b)
                        }), r(u, b))
                    }))
                }
                componentDidUpdate(e) {
                    var {
                        tabContext: {
                            activeTab: t
                        }
                    } = e, {
                        tabContext: {
                            activeTab: a
                        }
                    } = this.props;
                    if (t !== a && this.focusTabItem) {
                        this.focusTabItem = !1;
                        var n = document.getElementById(this.getTabItemId(a));
                        if (!n) return;
                        n.focus()
                    }
                }
                clickAndFocus(e, t) {
                    t && t.preventDefault();
                    var {
                        tabContext: {
                            onTabClick: a
                        }
                    } = this.props;
                    a(e), this.focusTabItem = !0
                }
                getTabsWithIndex() {
                    var {
                        tabList: e
                    } = this.props;
                    return e.map(((e, t) => ({
                        idx: t,
                        tab: e
                    })))
                }
                getTabA11yAttr() {
                    var {
                        tabContext: {
                            layout: e,
                            as: t
                        },
                        title: a
                    } = this.props, n = t === A.NAV;
                    return {
                        role: n ? "navigation" : "tablist",
                        "aria-orientation": n ? void 0 : e,
                        "aria-label": a
                    }
                }
                getTabItemId(e) {
                    var {
                        tabContext: t
                    } = this.props;
                    return w(t.id, e)
                }
                renderTabs() {
                    var {
                        visibleTabCount: e,
                        tabContext: t
                    } = this.props, {
                        layout: a,
                        activeTab: n
                    } = t, i = this.getTabsWithIndex();
                    if (a === k.VERTICAL) return i.map((e => this.renderTabItem(e)));
                    var r = i.slice(0, e).map(((e, t) => t));
                    return void 0 !== e && n >= e && (r[r.length - 1] = n), i.map(((e, t) => this.renderTabItem(e, t, r)))
                }
                renderTabDropdown() {
                    var {
                        dropdownTitle: e,
                        tabList: t,
                        visibleTabCount: a,
                        excludeVisibleTabs: n,
                        tabContext: {
                            activeTab: i
                        }
                    } = this.props;
                    if (!(t.length <= +a)) {
                        var r = this.getTabsWithIndex(),
                            s = [...r];
                        if (n && +a > 0 && (s = r.slice(a), i >= +a)) {
                            var c = r[+a - 1];
                            (s = s.filter((e => +i !== e.idx))).unshift(c)
                        }
                        return o().createElement(h.Z, {
                            className: "tab__dropdown",
                            selectedValue: i,
                            onSelect: this.handleDropdownSelect,
                            title: o().createElement(o().Fragment, null, e, o().createElement(d.Z, null)),
                            tabIndex: 0
                        }, s.map((e => o().createElement(h.Z.Item, {
                            key: e.idx,
                            value: e.idx
                        }, this.props.renderItem(e.tab, e.idx)))))
                    }
                }
                render() {
                    var e = this.props,
                        {
                            visibleTabCount: t,
                            className: a,
                            tabContext: {
                                layout: n
                            },
                            tabList: s,
                            renderItem: c,
                            tabItemProps: l,
                            dropdownTitle: d,
                            excludeVisibleTabs: b
                        } = e,
                        T = (0, r.Z)(e, I),
                        h = n === k.HORIZONTAL && t;
                    return o().createElement("div", (0, i.Z)({
                        className: u()("render-list clearfix", a)
                    }, T), o().createElement("div", (0, i.Z)({
                        className: "tab-header"
                    }, this.getTabA11yAttr()), this.renderTabs()), h && this.renderTabDropdown())
                }
            }

            function E(e) {
                var {
                    children: t,
                    className: a,
                    layout: n,
                    activeTab: s,
                    id: c,
                    as: l,
                    onTabClick: d
                } = e, b = (0, r.Z)(e, x), T = o().useMemo((() => ({
                    layout: n || k.HORIZONTAL,
                    id: c,
                    activeTab: s,
                    onTabClick: d,
                    as: l
                })), [n, c, s, d, l]);
                return o().createElement(y, {
                    value: T
                }, o().createElement("div", (0, i.Z)({
                    className: u()("ui-tabs-wrap", a, {
                        "vertical-layout": n === k.VERTICAL
                    })
                }, b), t))
            }(0, n.Z)(L, "defaultProps", {
                tabItemProps: {},
                dropdownTitle: "More",
                renderItem: e => e,
                excludeVisibleTabs: !1
            }), E.defaultProps = {
                layout: k.HORIZONTAL,
                as: A.TAB,
                onTabClick: p.ZT
            };
            var D = Z(L),
                O = Z((function(e) {
                    var {
                        children: t,
                        className: a,
                        tabContext: {
                            id: n,
                            activeTab: s,
                            as: c
                        }
                    } = e, l = (0, r.Z)(e, C), d = c === A.NAV ? {} : {
                        role: "tabpanel",
                        tabIndex: 0
                    };
                    return o().createElement("div", (0, i.Z)({
                        className: u()("tab-list-content", a)
                    }, l, d, {
                        id: N(n, s),
                        "aria-labelledby": w(n, s)
                    }), t)
                }));
            E.List = D, E.Content = O;
            var R = (0, l.xD)("tab")(E);
            R.List = D, R.Content = O, R.LAYOUT = k, R.AS = A;
            const V = R
        }
    }
]);
//# sourceMappingURL=https://hrcdn.net/fcore/assets/sourcemaps/modules-node_modules_ui-kit_es_components_tab_tab_js-c92fa900.js.map