"use strict";
(self.webpackChunkhackerrank_lib = self.webpackChunkhackerrank_lib || []).push([
    ["defaultVendors-node_modules_vscode_vscode_src_vs_base_common_cancellation_js-node_modules_vsc-370a27"], {
        iDmX: (e, t, n) => {
            function r(e, t, n = ((e, t) => e === t)) {
                if (e === t) return !0;
                if (!e || !t) return !1;
                if (e.length !== t.length) return !1;
                for (let r = 0, i = e.length; r < i; r++)
                    if (!n(e[r], t[r])) return !1;
                return !0
            }

            function* i(e, t) {
                let n, r;
                for (const i of e) void 0 !== r && t(r, i) ? n.push(i) : (n && (yield n), n = [i]), r = i;
                n && (yield n)
            }

            function s(e, t) {
                for (let n = 0; n <= e.length; n++) t(0 === n ? void 0 : e[n - 1], n === e.length ? void 0 : e[n])
            }

            function o(e, t) {
                for (let n = 0; n < e.length; n++) t(0 === n ? void 0 : e[n - 1], e[n], n + 1 === e.length ? void 0 : e[n + 1])
            }

            function a(e, t) {
                for (const n of t) e.push(n)
            }
            var l;

            function u(e, t) {
                return (n, r) => t(e(n), e(r))
            }
            n.d(t, {
                    BV: () => c,
                    KO: () => o,
                    fS: () => r,
                    fv: () => h,
                    mw: () => i,
                    tT: () => u,
                    vA: () => a,
                    zy: () => s
                }),
                function(e) {
                    e.isLessThan = function(e) {
                        return e < 0
                    }, e.isLessThanOrEqual = function(e) {
                        return e <= 0
                    }, e.isGreaterThan = function(e) {
                        return e > 0
                    }, e.isNeitherLessOrGreaterThan = function(e) {
                        return 0 === e
                    }, e.greaterThan = 1, e.lessThan = -1, e.neitherLessOrGreaterThan = 0
                }(l || (l = {}));
            const h = (e, t) => e - t;

            function c(e) {
                return (t, n) => -e(t, n)
            }
            class d {
                static {
                    this.empty = new d((e => {}))
                }
                constructor(e) {
                    this.iterate = e
                }
                forEach(e) {
                    this.iterate((t => (e(t), !0)))
                }
                toArray() {
                    const e = [];
                    return this.iterate((t => (e.push(t), !0))), e
                }
                filter(e) {
                    return new d((t => this.iterate((n => !e(n) || t(n)))))
                }
                map(e) {
                    return new d((t => this.iterate((n => t(e(n))))))
                }
                some(e) {
                    let t = !1;
                    return this.iterate((n => (t = e(n), !t))), t
                }
                findFirst(e) {
                    let t;
                    return this.iterate((n => !e(n) || (t = n, !1))), t
                }
                findLast(e) {
                    let t;
                    return this.iterate((n => (e(n) && (t = n), !0))), t
                }
                findLastMaxBy(e) {
                    let t, n = !0;
                    return this.iterate((r => ((n || l.isGreaterThan(e(r, t))) && (n = !1, t = r), !0))), t
                }
            }
        },
        W8Fm: (e, t, n) => {
            function r(e, t) {
                const n = i(e, t);
                return -1 === n ? void 0 : e[n]
            }

            function i(e, t, n = 0, r = e.length) {
                let i = n,
                    s = r;
                for (; i < s;) {
                    const n = Math.floor((i + s) / 2);
                    t(e[n]) ? i = n + 1 : s = n
                }
                return i - 1
            }

            function s(e, t) {
                const n = o(e, t);
                return n === e.length ? void 0 : e[n]
            }

            function o(e, t, n = 0, r = e.length) {
                let i = n,
                    s = r;
                for (; i < s;) {
                    const n = Math.floor((i + s) / 2);
                    t(e[n]) ? s = n : i = n + 1
                }
                return i
            }
            n.d(t, {
                J_: () => o,
                Jw: () => i,
                b1: () => a,
                cn: () => s,
                ti: () => r
            });
            class a {
                static {
                    this.assertInvariants = !1
                }
                constructor(e) {
                    this._array = e, this._findLastMonotonousLastIdx = 0
                }
                findLastMonotonous(e) {
                    if (a.assertInvariants) {
                        if (this._prevFindLastPredicate)
                            for (const t of this._array)
                                if (this._prevFindLastPredicate(t) && !e(t)) throw new Error("MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.");
                        this._prevFindLastPredicate = e
                    }
                    const t = i(this._array, e, this._findLastMonotonousLastIdx);
                    return this._findLastMonotonousLastIdx = t + 1, -1 === t ? void 0 : this._array[t]
                }
            }
        },
        "/hu5": (e, t, n) => {
            n.d(t, {
                DM: () => o,
                eZ: () => s,
                vE: () => i
            });
            var r = n("PUdK");

            function i(e, t = "Unreachable") {
                throw new Error(t)
            }

            function s(e) {
                e() || (e(), (0, r.dL)(new r.he("Assertion Failed")))
            }

            function o(e, t) {
                let n = 0;
                for (; n < e.length - 1;) {
                    if (!t(e[n], e[n + 1])) return !1;
                    n++
                }
                return !0
            }
        },
        rJtg: (e, t, n) => {
            n.d(t, {
                AU: () => a
            });
            var r = n("7icl");
            const i = Object.freeze((function(e, t) {
                const n = setTimeout(e.bind(t), 0);
                return {
                    dispose() {
                        clearTimeout(n)
                    }
                }
            }));
            var s;
            ! function(e) {
                e.isCancellationToken = function(t) {
                    return t === e.None || t === e.Cancelled || t instanceof o || !(!t || "object" != typeof t) && "boolean" == typeof t.isCancellationRequested && "function" == typeof t.onCancellationRequested
                }, e.None = Object.freeze({
                    isCancellationRequested: !1,
                    onCancellationRequested: r.ju.None
                }), e.Cancelled = Object.freeze({
                    isCancellationRequested: !0,
                    onCancellationRequested: i
                })
            }(s || (s = {}));
            class o {
                constructor() {
                    this._isCancelled = !1, this._emitter = null
                }
                cancel() {
                    this._isCancelled || (this._isCancelled = !0, this._emitter && (this._emitter.fire(void 0), this.dispose()))
                }
                get isCancellationRequested() {
                    return this._isCancelled
                }
                get onCancellationRequested() {
                    return this._isCancelled ? i : (this._emitter || (this._emitter = new r.Q5), this._emitter.event)
                }
                dispose() {
                    this._emitter && (this._emitter.dispose(), this._emitter = null)
                }
            }
            class a {
                constructor(e) {
                    this._token = void 0, this._parentListener = void 0, this._parentListener = e && e.onCancellationRequested(this.cancel, this)
                }
                get token() {
                    return this._token || (this._token = new o), this._token
                }
                cancel() {
                    this._token ? this._token instanceof o && this._token.cancel() : this._token = s.Cancelled
                }
                dispose(e = !1) {
                    e && this.cancel(), this._parentListener ? .dispose(), this._token ? this._token instanceof o && this._token.dispose() : this._token = s.None
                }
            }
        },
        mYXM: (e, t, n) => {
            n.d(t, {
                z: () => s
            });
            var r = n("K30K");
            const i = Object.create(null);

            function s(e, t) {
                if ((0, r.HD)(t)) {
                    const n = i[t];
                    if (void 0 === n) throw new Error(`${e} references an unknown codicon: ${t}`);
                    t = n
                }
                return i[e] = t, {
                    id: e
                }
            }
        },
        t1yw: (e, t, n) => {
            class r {
                static {
                    Symbol.toStringTag
                }
                constructor(e, t) {
                    this.toKey = t, this._map = new Map, this[_a] = "SetWithKey";
                    for (const t of e) this.add(t)
                }
                get size() {
                    return this._map.size
                }
                add(e) {
                    const t = this.toKey(e);
                    return this._map.set(t, e), this
                }
                delete(e) {
                    return this._map.delete(this.toKey(e))
                }
                has(e) {
                    return this._map.has(this.toKey(e))
                }* entries() {
                    for (const e of this._map.values()) yield [e, e]
                }
                keys() {
                    return this.values()
                }* values() {
                    for (const e of this._map.values()) yield e
                }
                clear() {
                    this._map.clear()
                }
                forEach(e, t) {
                    this._map.forEach((n => e.call(t, n, n, this)))
                }[Symbol.iterator]() {
                    return this.values()
                }
            }
        },
        KFZf: (e, t, n) => {
            n.d(t, {
                Il: () => l,
                Oz: () => o
            });
            var r = n("U7Xe");

            function i(e, t) {
                const n = Math.pow(10, t);
                return Math.round(e * n) / n
            }
            class s {
                constructor(e, t, n, r = 1) {
                    this._rgbaBrand = void 0, this.r = 0 | Math.min(255, Math.max(0, e)), this.g = 0 | Math.min(255, Math.max(0, t)), this.b = 0 | Math.min(255, Math.max(0, n)), this.a = i(Math.max(Math.min(1, r), 0), 3)
                }
                static equals(e, t) {
                    return e.r === t.r && e.g === t.g && e.b === t.b && e.a === t.a
                }
            }
            class o {
                constructor(e, t, n, r) {
                    this._hslaBrand = void 0, this.h = 0 | Math.max(Math.min(360, e), 0), this.s = i(Math.max(Math.min(1, t), 0), 3), this.l = i(Math.max(Math.min(1, n), 0), 3), this.a = i(Math.max(Math.min(1, r), 0), 3)
                }
                static equals(e, t) {
                    return e.h === t.h && e.s === t.s && e.l === t.l && e.a === t.a
                }
                static fromRGBA(e) {
                    const t = e.r / 255,
                        n = e.g / 255,
                        r = e.b / 255,
                        i = e.a,
                        s = Math.max(t, n, r),
                        a = Math.min(t, n, r);
                    let l = 0,
                        u = 0;
                    const h = (a + s) / 2,
                        c = s - a;
                    if (c > 0) {
                        switch (u = Math.min(h <= .5 ? c / (2 * h) : c / (2 - 2 * h), 1), s) {
                            case t:
                                l = (n - r) / c + (n < r ? 6 : 0);
                                break;
                            case n:
                                l = (r - t) / c + 2;
                                break;
                            case r:
                                l = (t - n) / c + 4
                        }
                        l *= 60, l = Math.round(l)
                    }
                    return new o(l, u, h, i)
                }
                static _hue2rgb(e, t, n) {
                    return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e
                }
                static toRGBA(e) {
                    const t = e.h / 360,
                        {
                            s: n,
                            l: r,
                            a: i
                        } = e;
                    let a, l, u;
                    if (0 === n) a = l = u = r;
                    else {
                        const e = r < .5 ? r * (1 + n) : r + n - r * n,
                            i = 2 * r - e;
                        a = o._hue2rgb(i, e, t + 1 / 3), l = o._hue2rgb(i, e, t), u = o._hue2rgb(i, e, t - 1 / 3)
                    }
                    return new s(Math.round(255 * a), Math.round(255 * l), Math.round(255 * u), i)
                }
            }
            class a {
                constructor(e, t, n, r) {
                    this._hsvaBrand = void 0, this.h = 0 | Math.max(Math.min(360, e), 0), this.s = i(Math.max(Math.min(1, t), 0), 3), this.v = i(Math.max(Math.min(1, n), 0), 3), this.a = i(Math.max(Math.min(1, r), 0), 3)
                }
                static equals(e, t) {
                    return e.h === t.h && e.s === t.s && e.v === t.v && e.a === t.a
                }
                static fromRGBA(e) {
                    const t = e.r / 255,
                        n = e.g / 255,
                        r = e.b / 255,
                        i = Math.max(t, n, r),
                        s = i - Math.min(t, n, r),
                        o = 0 === i ? 0 : s / i;
                    let l;
                    return l = 0 === s ? 0 : i === t ? ((n - r) / s % 6 + 6) % 6 : i === n ? (r - t) / s + 2 : (t - n) / s + 4, new a(Math.round(60 * l), o, i, e.a)
                }
                static toRGBA(e) {
                    const {
                        h: t,
                        s: n,
                        v: r,
                        a: i
                    } = e, o = r * n, a = o * (1 - Math.abs(t / 60 % 2 - 1)), l = r - o;
                    let [u, h, c] = [0, 0, 0];
                    return t < 60 ? (u = o, h = a) : t < 120 ? (u = a, h = o) : t < 180 ? (h = o, c = a) : t < 240 ? (h = a, c = o) : t < 300 ? (u = a, c = o) : t <= 360 && (u = o, c = a), u = Math.round(255 * (u + l)), h = Math.round(255 * (h + l)), c = Math.round(255 * (c + l)), new s(u, h, c, i)
                }
            }
            class l {
                static fromHex(e) {
                    return l.Format.CSS.parseHex(e) || l.red
                }
                static equals(e, t) {
                    return !e && !t || !(!e || !t) && e.equals(t)
                }
                get hsla() {
                    return this._hsla ? this._hsla : o.fromRGBA(this.rgba)
                }
                get hsva() {
                    return this._hsva ? this._hsva : a.fromRGBA(this.rgba)
                }
                constructor(e) {
                    if (!e) throw new Error("Color needs a value");
                    if (e instanceof s) this.rgba = e;
                    else if (e instanceof o) this._hsla = e, this.rgba = o.toRGBA(e);
                    else {
                        if (!(e instanceof a)) throw new Error("Invalid color ctor argument");
                        this._hsva = e, this.rgba = a.toRGBA(e)
                    }
                }
                equals(e) {
                    return !!e && s.equals(this.rgba, e.rgba) && o.equals(this.hsla, e.hsla) && a.equals(this.hsva, e.hsva)
                }
                getRelativeLuminance() {
                    return i(.2126 * l._relativeLuminanceForComponent(this.rgba.r) + .7152 * l._relativeLuminanceForComponent(this.rgba.g) + .0722 * l._relativeLuminanceForComponent(this.rgba.b), 4)
                }
                static _relativeLuminanceForComponent(e) {
                    const t = e / 255;
                    return t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
                }
                getContrastRatio(e) {
                    const t = this.getRelativeLuminance(),
                        n = e.getRelativeLuminance();
                    return t > n ? (t + .05) / (n + .05) : (n + .05) / (t + .05)
                }
                isDarker() {
                    return (299 * this.rgba.r + 587 * this.rgba.g + 114 * this.rgba.b) / 1e3 < 128
                }
                isLighter() {
                    return (299 * this.rgba.r + 587 * this.rgba.g + 114 * this.rgba.b) / 1e3 >= 128
                }
                isLighterThan(e) {
                    return this.getRelativeLuminance() > e.getRelativeLuminance()
                }
                isDarkerThan(e) {
                    return this.getRelativeLuminance() < e.getRelativeLuminance()
                }
                lighten(e) {
                    return new l(new o(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * e, this.hsla.a))
                }
                darken(e) {
                    return new l(new o(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * e, this.hsla.a))
                }
                transparent(e) {
                    const {
                        r: t,
                        g: n,
                        b: r,
                        a: i
                    } = this.rgba;
                    return new l(new s(t, n, r, i * e))
                }
                isTransparent() {
                    return 0 === this.rgba.a
                }
                isOpaque() {
                    return 1 === this.rgba.a
                }
                opposite() {
                    return new l(new s(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a))
                }
                blend(e) {
                    const t = e.rgba,
                        n = this.rgba.a,
                        r = t.a,
                        i = n + r * (1 - n);
                    if (i < 1e-6) return l.transparent;
                    const o = this.rgba.r * n / i + t.r * r * (1 - n) / i,
                        a = this.rgba.g * n / i + t.g * r * (1 - n) / i,
                        u = this.rgba.b * n / i + t.b * r * (1 - n) / i;
                    return new l(new s(o, a, u, i))
                }
                makeOpaque(e) {
                    if (this.isOpaque() || 1 !== e.rgba.a) return this;
                    const {
                        r: t,
                        g: n,
                        b: r,
                        a: i
                    } = this.rgba;
                    return new l(new s(e.rgba.r - i * (e.rgba.r - t), e.rgba.g - i * (e.rgba.g - n), e.rgba.b - i * (e.rgba.b - r), 1))
                }
                flatten(...e) {
                    const t = e.reduceRight(((e, t) => l._flatten(t, e)));
                    return l._flatten(this, t)
                }
                static _flatten(e, t) {
                    const n = 1 - e.rgba.a;
                    return new l(new s(n * t.rgba.r + e.rgba.a * e.rgba.r, n * t.rgba.g + e.rgba.a * e.rgba.g, n * t.rgba.b + e.rgba.a * e.rgba.b))
                }
                toString() {
                    return this._toString || (this._toString = l.Format.CSS.format(this)), this._toString
                }
                static getLighterColor(e, t, n) {
                    if (e.isLighterThan(t)) return e;
                    n = n || .5;
                    const r = e.getRelativeLuminance(),
                        i = t.getRelativeLuminance();
                    return n = n * (i - r) / i, e.lighten(n)
                }
                static getDarkerColor(e, t, n) {
                    if (e.isDarkerThan(t)) return e;
                    n = n || .5;
                    const r = e.getRelativeLuminance();
                    return n = n * (r - t.getRelativeLuminance()) / r, e.darken(n)
                }
                static {
                    this.white = new l(new s(255, 255, 255, 1))
                }
                static {
                    this.black = new l(new s(0, 0, 0, 1))
                }
                static {
                    this.red = new l(new s(255, 0, 0, 1))
                }
                static {
                    this.blue = new l(new s(0, 0, 255, 1))
                }
                static {
                    this.green = new l(new s(0, 255, 0, 1))
                }
                static {
                    this.cyan = new l(new s(0, 255, 255, 1))
                }
                static {
                    this.lightgrey = new l(new s(211, 211, 211, 1))
                }
                static {
                    this.transparent = new l(new s(0, 0, 0, 0))
                }
            }! function(e) {
                var t;
                ! function(t) {
                    function n(e) {
                        const t = e.toString(16);
                        return 2 !== t.length ? "0" + t : t
                    }

                    function i(e) {
                        switch (e) {
                            case r.m.Digit0:
                                return 0;
                            case r.m.Digit1:
                                return 1;
                            case r.m.Digit2:
                                return 2;
                            case r.m.Digit3:
                                return 3;
                            case r.m.Digit4:
                                return 4;
                            case r.m.Digit5:
                                return 5;
                            case r.m.Digit6:
                                return 6;
                            case r.m.Digit7:
                                return 7;
                            case r.m.Digit8:
                                return 8;
                            case r.m.Digit9:
                                return 9;
                            case r.m.a:
                            case r.m.A:
                                return 10;
                            case r.m.b:
                            case r.m.B:
                                return 11;
                            case r.m.c:
                            case r.m.C:
                                return 12;
                            case r.m.d:
                            case r.m.D:
                                return 13;
                            case r.m.e:
                            case r.m.E:
                                return 14;
                            case r.m.f:
                            case r.m.F:
                                return 15
                        }
                        return 0
                    }
                    t.formatRGB = function(t) {
                        return 1 === t.rgba.a ? `rgb(${t.rgba.r}, ${t.rgba.g}, ${t.rgba.b})` : e.Format.CSS.formatRGBA(t)
                    }, t.formatRGBA = function(e) {
                        return `rgba(${e.rgba.r}, ${e.rgba.g}, ${e.rgba.b}, ${+e.rgba.a.toFixed(2)})`
                    }, t.formatHSL = function(t) {
                        return 1 === t.hsla.a ? `hsl(${t.hsla.h}, ${(100*t.hsla.s).toFixed(2)}%, ${(100*t.hsla.l).toFixed(2)}%)` : e.Format.CSS.formatHSLA(t)
                    }, t.formatHSLA = function(e) {
                        return `hsla(${e.hsla.h}, ${(100*e.hsla.s).toFixed(2)}%, ${(100*e.hsla.l).toFixed(2)}%, ${e.hsla.a.toFixed(2)})`
                    }, t.formatHex = function(e) {
                        return `#${n(e.rgba.r)}${n(e.rgba.g)}${n(e.rgba.b)}`
                    }, t.formatHexA = function(t, r = !1) {
                        return r && 1 === t.rgba.a ? e.Format.CSS.formatHex(t) : `#${n(t.rgba.r)}${n(t.rgba.g)}${n(t.rgba.b)}${n(Math.round(255*t.rgba.a))}`
                    }, t.format = function(t) {
                        return t.isOpaque() ? e.Format.CSS.formatHex(t) : e.Format.CSS.formatRGBA(t)
                    }, t.parseHex = function(t) {
                        const n = t.length;
                        if (0 === n) return null;
                        if (t.charCodeAt(0) !== r.m.Hash) return null;
                        if (7 === n) {
                            const n = 16 * i(t.charCodeAt(1)) + i(t.charCodeAt(2)),
                                r = 16 * i(t.charCodeAt(3)) + i(t.charCodeAt(4)),
                                o = 16 * i(t.charCodeAt(5)) + i(t.charCodeAt(6));
                            return new e(new s(n, r, o, 1))
                        }
                        if (9 === n) {
                            const n = 16 * i(t.charCodeAt(1)) + i(t.charCodeAt(2)),
                                r = 16 * i(t.charCodeAt(3)) + i(t.charCodeAt(4)),
                                o = 16 * i(t.charCodeAt(5)) + i(t.charCodeAt(6)),
                                a = 16 * i(t.charCodeAt(7)) + i(t.charCodeAt(8));
                            return new e(new s(n, r, o, a / 255))
                        }
                        if (4 === n) {
                            const n = i(t.charCodeAt(1)),
                                r = i(t.charCodeAt(2)),
                                o = i(t.charCodeAt(3));
                            return new e(new s(16 * n + n, 16 * r + r, 16 * o + o))
                        }
                        if (5 === n) {
                            const n = i(t.charCodeAt(1)),
                                r = i(t.charCodeAt(2)),
                                o = i(t.charCodeAt(3)),
                                a = i(t.charCodeAt(4));
                            return new e(new s(16 * n + n, 16 * r + r, 16 * o + o, (16 * a + a) / 255))
                        }
                        return null
                    }
                }((t = e.Format || (e.Format = {})).CSS || (t.CSS = {}))
            }(l || (l = {}))
        },
        "8sQX": (e, t, n) => {
            n.d(t, {
                Hs: () => d,
                a$: () => l
            });
            var r, i = n("0+aF"),
                s = n("6tPK"),
                o = n("MM2S");
            class a {
                constructor(e) {
                    this.source = e
                }
                getElements() {
                    const e = this.source,
                        t = new Int32Array(e.length);
                    for (let n = 0, r = e.length; n < r; n++) t[n] = e.charCodeAt(n);
                    return t
                }
            }

            function l(e, t, n) {
                return new d(new a(e), new a(t)).ComputeDiff(n).changes
            }
            class u {
                static Assert(e, t) {
                    if (!e) throw new Error(t)
                }
            }
            class h {
                static Copy(e, t, n, r, i) {
                    for (let s = 0; s < i; s++) n[r + s] = e[t + s]
                }
                static Copy2(e, t, n, r, i) {
                    for (let s = 0; s < i; s++) n[r + s] = e[t + s]
                }
            }! function(e) {
                e[e.MaxDifferencesHistory = 1447] = "MaxDifferencesHistory"
            }(r || (r = {}));
            class c {
                constructor() {
                    this.m_changes = [], this.m_originalStart = o.gT.MAX_SAFE_SMALL_INTEGER, this.m_modifiedStart = o.gT.MAX_SAFE_SMALL_INTEGER, this.m_originalCount = 0, this.m_modifiedCount = 0
                }
                MarkNextChange() {
                    (this.m_originalCount > 0 || this.m_modifiedCount > 0) && this.m_changes.push(new i.J(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount)), this.m_originalCount = 0, this.m_modifiedCount = 0, this.m_originalStart = o.gT.MAX_SAFE_SMALL_INTEGER, this.m_modifiedStart = o.gT.MAX_SAFE_SMALL_INTEGER
                }
                AddOriginalElement(e, t) {
                    this.m_originalStart = Math.min(this.m_originalStart, e), this.m_modifiedStart = Math.min(this.m_modifiedStart, t), this.m_originalCount++
                }
                AddModifiedElement(e, t) {
                    this.m_originalStart = Math.min(this.m_originalStart, e), this.m_modifiedStart = Math.min(this.m_modifiedStart, t), this.m_modifiedCount++
                }
                getChanges() {
                    return (this.m_originalCount > 0 || this.m_modifiedCount > 0) && this.MarkNextChange(), this.m_changes
                }
                getReverseChanges() {
                    return (this.m_originalCount > 0 || this.m_modifiedCount > 0) && this.MarkNextChange(), this.m_changes.reverse(), this.m_changes
                }
            }
            class d {
                constructor(e, t, n = null) {
                    this.ContinueProcessingPredicate = n, this._originalSequence = e, this._modifiedSequence = t;
                    const [r, i, s] = d._getElements(e), [o, a, l] = d._getElements(t);
                    this._hasStrings = s && l, this._originalStringElements = r, this._originalElementsOrHash = i, this._modifiedStringElements = o, this._modifiedElementsOrHash = a, this.m_forwardHistory = [], this.m_reverseHistory = []
                }
                static _isStringArray(e) {
                    return e.length > 0 && "string" == typeof e[0]
                }
                static _getElements(e) {
                    const t = e.getElements();
                    if (d._isStringArray(t)) {
                        const e = new Int32Array(t.length);
                        for (let n = 0, r = t.length; n < r; n++) e[n] = (0, s.Cv)(t[n], 0);
                        return [t, e, !0]
                    }
                    return t instanceof Int32Array ? [
                        [], t, !1
                    ] : [
                        [], new Int32Array(t), !1
                    ]
                }
                ElementsAreEqual(e, t) {
                    return this._originalElementsOrHash[e] === this._modifiedElementsOrHash[t] && (!this._hasStrings || this._originalStringElements[e] === this._modifiedStringElements[t])
                }
                ElementsAreStrictEqual(e, t) {
                    return !!this.ElementsAreEqual(e, t) && d._getStrictElement(this._originalSequence, e) === d._getStrictElement(this._modifiedSequence, t)
                }
                static _getStrictElement(e, t) {
                    return "function" == typeof e.getStrictElement ? e.getStrictElement(t) : null
                }
                OriginalElementsAreEqual(e, t) {
                    return this._originalElementsOrHash[e] === this._originalElementsOrHash[t] && (!this._hasStrings || this._originalStringElements[e] === this._originalStringElements[t])
                }
                ModifiedElementsAreEqual(e, t) {
                    return this._modifiedElementsOrHash[e] === this._modifiedElementsOrHash[t] && (!this._hasStrings || this._modifiedStringElements[e] === this._modifiedStringElements[t])
                }
                ComputeDiff(e) {
                    return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, e)
                }
                _ComputeDiff(e, t, n, r, i) {
                    const s = [!1];
                    let o = this.ComputeDiffRecursive(e, t, n, r, s);
                    return i && (o = this.PrettifyChanges(o)), {
                        quitEarly: s[0],
                        changes: o
                    }
                }
                ComputeDiffRecursive(e, t, n, r, s) {
                    for (s[0] = !1; e <= t && n <= r && this.ElementsAreEqual(e, n);) e++, n++;
                    for (; t >= e && r >= n && this.ElementsAreEqual(t, r);) t--, r--;
                    if (e > t || n > r) {
                        let s;
                        return n <= r ? (u.Assert(e === t + 1, "originalStart should only be one more than originalEnd"), s = [new i.J(e, 0, n, r - n + 1)]) : e <= t ? (u.Assert(n === r + 1, "modifiedStart should only be one more than modifiedEnd"), s = [new i.J(e, t - e + 1, n, 0)]) : (u.Assert(e === t + 1, "originalStart should only be one more than originalEnd"), u.Assert(n === r + 1, "modifiedStart should only be one more than modifiedEnd"), s = []), s
                    }
                    const o = [0],
                        a = [0],
                        l = this.ComputeRecursionPoint(e, t, n, r, o, a, s),
                        h = o[0],
                        c = a[0];
                    if (null !== l) return l;
                    if (!s[0]) {
                        const o = this.ComputeDiffRecursive(e, h, n, c, s);
                        let a = [];
                        return a = s[0] ? [new i.J(h + 1, t - (h + 1) + 1, c + 1, r - (c + 1) + 1)] : this.ComputeDiffRecursive(h + 1, t, c + 1, r, s), this.ConcatenateChanges(o, a)
                    }
                    return [new i.J(e, t - e + 1, n, r - n + 1)]
                }
                WALKTRACE(e, t, n, r, s, a, l, u, h, d, m, f, g, p, _, C, y, A) {
                    let E = null,
                        S = null,
                        w = new c,
                        N = t,
                        v = n,
                        L = g[0] - C[0] - r,
                        b = o.gT.MIN_SAFE_SMALL_INTEGER,
                        M = this.m_forwardHistory.length - 1;
                    do {
                        const t = L + e;
                        t === N || t < v && h[t - 1] < h[t + 1] ? (p = (m = h[t + 1]) - L - r, m < b && w.MarkNextChange(), b = m, w.AddModifiedElement(m + 1, p), L = t + 1 - e) : (p = (m = h[t - 1] + 1) - L - r, m < b && w.MarkNextChange(), b = m - 1, w.AddOriginalElement(m, p + 1), L = t - 1 - e), M >= 0 && (e = (h = this.m_forwardHistory[M])[0], N = 1, v = h.length - 1)
                    } while (--M >= -1);
                    if (E = w.getReverseChanges(), A[0]) {
                        let e = g[0] + 1,
                            t = C[0] + 1;
                        if (null !== E && E.length > 0) {
                            const n = E[E.length - 1];
                            e = Math.max(e, n.getOriginalEnd()), t = Math.max(t, n.getModifiedEnd())
                        }
                        S = [new i.J(e, f - e + 1, t, _ - t + 1)]
                    } else {
                        w = new c, N = a, v = l, L = g[0] - C[0] - u, b = o.gT.MAX_SAFE_SMALL_INTEGER, M = y ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;
                        do {
                            const e = L + s;
                            e === N || e < v && d[e - 1] >= d[e + 1] ? (p = (m = d[e + 1] - 1) - L - u, m > b && w.MarkNextChange(), b = m + 1, w.AddOriginalElement(m + 1, p + 1), L = e + 1 - s) : (p = (m = d[e - 1]) - L - u, m > b && w.MarkNextChange(), b = m, w.AddModifiedElement(m + 1, p + 1), L = e - 1 - s), M >= 0 && (s = (d = this.m_reverseHistory[M])[0], N = 1, v = d.length - 1)
                        } while (--M >= -1);
                        S = w.getChanges()
                    }
                    return this.ConcatenateChanges(E, S)
                }
                ComputeRecursionPoint(e, t, n, s, o, a, l) {
                    let u = 0,
                        c = 0,
                        d = 0,
                        m = 0,
                        f = 0,
                        g = 0;
                    e--, n--, o[0] = 0, a[0] = 0, this.m_forwardHistory = [], this.m_reverseHistory = [];
                    const p = t - e + (s - n),
                        _ = p + 1,
                        C = new Int32Array(_),
                        y = new Int32Array(_),
                        A = s - n,
                        E = t - e,
                        S = e - n,
                        w = t - s,
                        N = (E - A) % 2 == 0;
                    C[A] = e, y[E] = t, l[0] = !1;
                    for (let v = 1; v <= p / 2 + 1; v++) {
                        let p = 0,
                            L = 0;
                        d = this.ClipDiagonalBound(A - v, v, A, _), m = this.ClipDiagonalBound(A + v, v, A, _);
                        for (let e = d; e <= m; e += 2) {
                            u = e === d || e < m && C[e - 1] < C[e + 1] ? C[e + 1] : C[e - 1] + 1, c = u - (e - A) - S;
                            const n = u;
                            for (; u < t && c < s && this.ElementsAreEqual(u + 1, c + 1);) u++, c++;
                            if (C[e] = u, u + c > p + L && (p = u, L = c), !N && Math.abs(e - E) <= v - 1 && u >= y[e]) return o[0] = u, a[0] = c, n <= y[e] && r.MaxDifferencesHistory > 0 && v <= r.MaxDifferencesHistory + 1 ? this.WALKTRACE(A, d, m, S, E, f, g, w, C, y, u, t, o, c, s, a, N, l) : null
                        }
                        const b = (p - e + (L - n) - v) / 2;
                        if (null !== this.ContinueProcessingPredicate && !this.ContinueProcessingPredicate(p, b)) return l[0] = !0, o[0] = p, a[0] = L, b > 0 && r.MaxDifferencesHistory > 0 && v <= r.MaxDifferencesHistory + 1 ? this.WALKTRACE(A, d, m, S, E, f, g, w, C, y, u, t, o, c, s, a, N, l) : (e++, n++, [new i.J(e, t - e + 1, n, s - n + 1)]);
                        f = this.ClipDiagonalBound(E - v, v, E, _), g = this.ClipDiagonalBound(E + v, v, E, _);
                        for (let i = f; i <= g; i += 2) {
                            u = i === f || i < g && y[i - 1] >= y[i + 1] ? y[i + 1] - 1 : y[i - 1], c = u - (i - E) - w;
                            const h = u;
                            for (; u > e && c > n && this.ElementsAreEqual(u, c);) u--, c--;
                            if (y[i] = u, N && Math.abs(i - A) <= v && u <= C[i]) return o[0] = u, a[0] = c, h >= C[i] && r.MaxDifferencesHistory > 0 && v <= r.MaxDifferencesHistory + 1 ? this.WALKTRACE(A, d, m, S, E, f, g, w, C, y, u, t, o, c, s, a, N, l) : null
                        }
                        if (v <= r.MaxDifferencesHistory) {
                            let e = new Int32Array(m - d + 2);
                            e[0] = A - d + 1, h.Copy2(C, d, e, 1, m - d + 1), this.m_forwardHistory.push(e), e = new Int32Array(g - f + 2), e[0] = E - f + 1, h.Copy2(y, f, e, 1, g - f + 1), this.m_reverseHistory.push(e)
                        }
                    }
                    return this.WALKTRACE(A, d, m, S, E, f, g, w, C, y, u, t, o, c, s, a, N, l)
                }
                PrettifyChanges(e) {
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t],
                            r = t < e.length - 1 ? e[t + 1].originalStart : this._originalElementsOrHash.length,
                            i = t < e.length - 1 ? e[t + 1].modifiedStart : this._modifiedElementsOrHash.length,
                            s = n.originalLength > 0,
                            o = n.modifiedLength > 0;
                        for (; n.originalStart + n.originalLength < r && n.modifiedStart + n.modifiedLength < i && (!s || this.OriginalElementsAreEqual(n.originalStart, n.originalStart + n.originalLength)) && (!o || this.ModifiedElementsAreEqual(n.modifiedStart, n.modifiedStart + n.modifiedLength));) {
                            const e = this.ElementsAreStrictEqual(n.originalStart, n.modifiedStart);
                            if (this.ElementsAreStrictEqual(n.originalStart + n.originalLength, n.modifiedStart + n.modifiedLength) && !e) break;
                            n.originalStart++, n.modifiedStart++
                        }
                        const a = [null];
                        t < e.length - 1 && this.ChangesOverlap(e[t], e[t + 1], a) && (e[t] = a[0], e.splice(t + 1, 1), t--)
                    }
                    for (let t = e.length - 1; t >= 0; t--) {
                        const n = e[t];
                        let r = 0,
                            i = 0;
                        if (t > 0) {
                            const n = e[t - 1];
                            r = n.originalStart + n.originalLength, i = n.modifiedStart + n.modifiedLength
                        }
                        const s = n.originalLength > 0,
                            o = n.modifiedLength > 0;
                        let a = 0,
                            l = this._boundaryScore(n.originalStart, n.originalLength, n.modifiedStart, n.modifiedLength);
                        for (let e = 1;; e++) {
                            const t = n.originalStart - e,
                                u = n.modifiedStart - e;
                            if (t < r || u < i) break;
                            if (s && !this.OriginalElementsAreEqual(t, t + n.originalLength)) break;
                            if (o && !this.ModifiedElementsAreEqual(u, u + n.modifiedLength)) break;
                            const h = (t === r && u === i ? 5 : 0) + this._boundaryScore(t, n.originalLength, u, n.modifiedLength);
                            h > l && (l = h, a = e)
                        }
                        n.originalStart -= a, n.modifiedStart -= a;
                        const u = [null];
                        t > 0 && this.ChangesOverlap(e[t - 1], e[t], u) && (e[t - 1] = u[0], e.splice(t, 1), t++)
                    }
                    if (this._hasStrings)
                        for (let t = 1, n = e.length; t < n; t++) {
                            const n = e[t - 1],
                                r = e[t],
                                i = r.originalStart - n.originalStart - n.originalLength,
                                s = n.originalStart,
                                o = r.originalStart + r.originalLength,
                                a = o - s,
                                l = n.modifiedStart,
                                u = r.modifiedStart + r.modifiedLength,
                                h = u - l;
                            if (i < 5 && a < 20 && h < 20) {
                                const e = this._findBetterContiguousSequence(s, a, l, h, i);
                                if (e) {
                                    const [t, s] = e;
                                    t === n.originalStart + n.originalLength && s === n.modifiedStart + n.modifiedLength || (n.originalLength = t - n.originalStart, n.modifiedLength = s - n.modifiedStart, r.originalStart = t + i, r.modifiedStart = s + i, r.originalLength = o - r.originalStart, r.modifiedLength = u - r.modifiedStart)
                                }
                            }
                        }
                    return e
                }
                _findBetterContiguousSequence(e, t, n, r, i) {
                    if (t < i || r < i) return null;
                    const s = e + t - i + 1,
                        o = n + r - i + 1;
                    let a = 0,
                        l = 0,
                        u = 0;
                    for (let t = e; t < s; t++)
                        for (let e = n; e < o; e++) {
                            const n = this._contiguousSequenceScore(t, e, i);
                            n > 0 && n > a && (a = n, l = t, u = e)
                        }
                    return a > 0 ? [l, u] : null
                }
                _contiguousSequenceScore(e, t, n) {
                    let r = 0;
                    for (let i = 0; i < n; i++) {
                        if (!this.ElementsAreEqual(e + i, t + i)) return 0;
                        r += this._originalStringElements[e + i].length
                    }
                    return r
                }
                _OriginalIsBoundary(e) {
                    return e <= 0 || e >= this._originalElementsOrHash.length - 1 || this._hasStrings && /^\s*$/.test(this._originalStringElements[e])
                }
                _OriginalRegionIsBoundary(e, t) {
                    if (this._OriginalIsBoundary(e) || this._OriginalIsBoundary(e - 1)) return !0;
                    if (t > 0) {
                        const n = e + t;
                        if (this._OriginalIsBoundary(n - 1) || this._OriginalIsBoundary(n)) return !0
                    }
                    return !1
                }
                _ModifiedIsBoundary(e) {
                    return e <= 0 || e >= this._modifiedElementsOrHash.length - 1 || this._hasStrings && /^\s*$/.test(this._modifiedStringElements[e])
                }
                _ModifiedRegionIsBoundary(e, t) {
                    if (this._ModifiedIsBoundary(e) || this._ModifiedIsBoundary(e - 1)) return !0;
                    if (t > 0) {
                        const n = e + t;
                        if (this._ModifiedIsBoundary(n - 1) || this._ModifiedIsBoundary(n)) return !0
                    }
                    return !1
                }
                _boundaryScore(e, t, n, r) {
                    return (this._OriginalRegionIsBoundary(e, t) ? 1 : 0) + (this._ModifiedRegionIsBoundary(n, r) ? 1 : 0)
                }
                ConcatenateChanges(e, t) {
                    const n = [];
                    if (0 === e.length || 0 === t.length) return t.length > 0 ? t : e;
                    if (this.ChangesOverlap(e[e.length - 1], t[0], n)) {
                        const r = new Array(e.length + t.length - 1);
                        return h.Copy(e, 0, r, 0, e.length - 1), r[e.length - 1] = n[0], h.Copy(t, 1, r, e.length, t.length - 1), r
                    } {
                        const n = new Array(e.length + t.length);
                        return h.Copy(e, 0, n, 0, e.length), h.Copy(t, 0, n, e.length, t.length), n
                    }
                }
                ChangesOverlap(e, t, n) {
                    if (u.Assert(e.originalStart <= t.originalStart, "Left change is not less than or equal to right change"), u.Assert(e.modifiedStart <= t.modifiedStart, "Left change is not less than or equal to right change"), e.originalStart + e.originalLength >= t.originalStart || e.modifiedStart + e.modifiedLength >= t.modifiedStart) {
                        const r = e.originalStart;
                        let s = e.originalLength;
                        const o = e.modifiedStart;
                        let a = e.modifiedLength;
                        return e.originalStart + e.originalLength >= t.originalStart && (s = t.originalStart + t.originalLength - e.originalStart), e.modifiedStart + e.modifiedLength >= t.modifiedStart && (a = t.modifiedStart + t.modifiedLength - e.modifiedStart), n[0] = new i.J(r, s, o, a), !0
                    }
                    return n[0] = null, !1
                }
                ClipDiagonalBound(e, t, n, r) {
                    if (e >= 0 && e < r) return e;
                    const i = t % 2 == 0;
                    return e < 0 ? i === (n % 2 == 0) ? 0 : 1 : i === ((r - n - 1) % 2 == 0) ? r - 1 : r - 2
                }
            }
        },
        PUdK: (e, t, n) => {
            n.d(t, {
                dL: () => i,
                he: () => d,
                ri: () => s
            });
            const r = new class {
                constructor() {
                    this.listeners = [], this.unexpectedErrorHandler = function(e) {
                        setTimeout((() => {
                            if (e.stack) {
                                if (c.isErrorNoTelemetry(e)) throw new c(e.message + "\n\n" + e.stack);
                                throw new Error(e.message + "\n\n" + e.stack)
                            }
                            throw e
                        }), 0)
                    }
                }
                addListener(e) {
                    return this.listeners.push(e), () => {
                        this._removeListener(e)
                    }
                }
                emit(e) {
                    this.listeners.forEach((t => {
                        t(e)
                    }))
                }
                _removeListener(e) {
                    this.listeners.splice(this.listeners.indexOf(e), 1)
                }
                setUnexpectedErrorHandler(e) {
                    this.unexpectedErrorHandler = e
                }
                getUnexpectedErrorHandler() {
                    return this.unexpectedErrorHandler
                }
                onUnexpectedError(e) {
                    this.unexpectedErrorHandler(e), this.emit(e)
                }
                onUnexpectedExternalError(e) {
                    this.unexpectedErrorHandler(e)
                }
            };

            function i(e) {
                var t;
                (t = e) instanceof a || t instanceof Error && t.name === o && t.message === o || r.onUnexpectedError(e)
            }

            function s(e) {
                if (e instanceof Error) {
                    const {
                        name: t,
                        message: n
                    } = e;
                    return {
                        $isError: !0,
                        name: t,
                        message: n,
                        stack: e.stacktrace || e.stack,
                        noTelemetry: c.isErrorNoTelemetry(e)
                    }
                }
                return e
            }
            const o = "Canceled";
            class a extends Error {
                constructor() {
                    super(o), this.name = this.message
                }
            }
            class l extends TypeError {
                constructor(e) {
                    super(e ? `${e} is read-only and cannot be changed` : "Cannot change read-only property")
                }
            }
            class u extends Error {
                constructor(e) {
                    super("NotImplemented"), e && (this.message = e)
                }
            }
            class h extends Error {
                constructor(e) {
                    super("NotSupported"), e && (this.message = e)
                }
            }
            class c extends Error {
                constructor(e) {
                    super(e), this.name = "CodeExpectedError"
                }
                static fromError(e) {
                    if (e instanceof c) return e;
                    const t = new c;
                    return t.message = e.message, t.stack = e.stack, t
                }
                static isErrorNoTelemetry(e) {
                    return "CodeExpectedError" === e.name
                }
            }
            class d extends Error {
                constructor(e) {
                    super(e || "An unexpected bug occurred."), Object.setPrototypeOf(this, d.prototype)
                }
            }
        },
        "7icl": (e, t, n) => {
            n.d(t, {
                Q5: () => g,
                ju: () => r
            });
            var r, i = n("PUdK"),
                s = n("RVdl"),
                o = (n("U+Fb"), n("V2Gl")),
                a = n("ziTh");
            ! function(e) {
                function t(e) {
                    return (t, n = null, r) => {
                        let i, s = !1;
                        return i = e((e => {
                            if (!s) return i ? i.dispose() : s = !0, t.call(n, e)
                        }), null, r), s && i.dispose(), i
                    }
                }

                function n(e, t, n) {
                    return i(((n, r = null, i) => e((e => n.call(r, t(e))), null, i)), n)
                }

                function r(e, t, n) {
                    return i(((n, r = null, i) => e((e => t(e) && n.call(r, e)), null, i)), n)
                }

                function i(e, t) {
                    let n;
                    const r = new g({
                        onWillAddFirstListener() {
                            n = e(r.fire, r)
                        },
                        onDidRemoveLastListener() {
                            n ? .dispose()
                        }
                    });
                    return t ? .add(r), r.event
                }

                function o(e, t, n = 100, r = !1, i = !1, s, o) {
                    let a, l, u, h, c = 0;
                    const d = new g({
                        leakWarningThreshold: s,
                        onWillAddFirstListener() {
                            a = e((e => {
                                c++, l = t(l, e), r && !u && (d.fire(l), l = void 0), h = () => {
                                    const e = l;
                                    l = void 0, u = void 0, (!r || c > 1) && d.fire(e), c = 0
                                }, "number" == typeof n ? (clearTimeout(u), u = setTimeout(h, n)) : void 0 === u && (u = 0, queueMicrotask(h))
                            }))
                        },
                        onWillRemoveListener() {
                            i && c > 0 && h ? .()
                        },
                        onDidRemoveLastListener() {
                            h = void 0, a.dispose()
                        }
                    });
                    return o ? .add(d), d.event
                }
                e.None = () => s.JT.None, e.defer = function(e, t) {
                    return o(e, (() => {}), 0, void 0, !0, void 0, t)
                }, e.once = t, e.map = n, e.forEach = function(e, t, n) {
                    return i(((n, r = null, i) => e((e => {
                        t(e), n.call(r, e)
                    }), null, i)), n)
                }, e.filter = r, e.signal = function(e) {
                    return e
                }, e.any = function(...e) {
                    return (t, n = null, r) => {
                        return i = (0, s.F8)(...e.map((e => e((e => t.call(n, e)))))), (o = r) instanceof Array ? o.push(i) : o && o.add(i), i;
                        var i, o
                    }
                }, e.reduce = function(e, t, r, i) {
                    let s = r;
                    return n(e, (e => (s = t(s, e), s)), i)
                }, e.debounce = o, e.accumulate = function(t, n = 0, r) {
                    return e.debounce(t, ((e, t) => e ? (e.push(t), e) : [t]), n, void 0, !0, void 0, r)
                }, e.latch = function(e, t = ((e, t) => e === t), n) {
                    let i, s = !0;
                    return r(e, (e => {
                        const n = s || !t(e, i);
                        return s = !1, i = e, n
                    }), n)
                }, e.split = function(t, n, r) {
                    return [e.filter(t, n, r), e.filter(t, (e => !n(e)), r)]
                }, e.buffer = function(e, t = !1, n = [], r) {
                    let i = n.slice(),
                        s = e((e => {
                            i ? i.push(e) : a.fire(e)
                        }));
                    r && r.add(s);
                    const o = () => {
                            i ? .forEach((e => a.fire(e))), i = null
                        },
                        a = new g({
                            onWillAddFirstListener() {
                                s || (s = e((e => a.fire(e))), r && r.add(s))
                            },
                            onDidAddFirstListener() {
                                i && (t ? setTimeout(o) : o())
                            },
                            onDidRemoveLastListener() {
                                s && s.dispose(), s = null
                            }
                        });
                    return r && r.add(a), a.event
                }, e.chain = function(e, t) {
                    return (n, r, i) => {
                        const s = t(new l);
                        return e((function(e) {
                            const t = s.evaluate(e);
                            t !== a && n.call(r, t)
                        }), void 0, i)
                    }
                };
                const a = Symbol("HaltChainable");
                class l {
                    constructor() {
                        this.steps = []
                    }
                    map(e) {
                        return this.steps.push(e), this
                    }
                    forEach(e) {
                        return this.steps.push((t => (e(t), t))), this
                    }
                    filter(e) {
                        return this.steps.push((t => e(t) ? t : a)), this
                    }
                    reduce(e, t) {
                        let n = t;
                        return this.steps.push((t => (n = e(n, t), n))), this
                    }
                    latch(e = ((e, t) => e === t)) {
                        let t, n = !0;
                        return this.steps.push((r => {
                            const i = n || !e(r, t);
                            return n = !1, t = r, i ? r : a
                        })), this
                    }
                    evaluate(e) {
                        for (const t of this.steps)
                            if ((e = t(e)) === a) break;
                        return e
                    }
                }
                e.fromNodeEventEmitter = function(e, t, n = (e => e)) {
                    const r = (...e) => i.fire(n(...e)),
                        i = new g({
                            onWillAddFirstListener: () => e.on(t, r),
                            onDidRemoveLastListener: () => e.removeListener(t, r)
                        });
                    return i.event
                }, e.fromDOMEventEmitter = function(e, t, n = (e => e)) {
                    const r = (...e) => i.fire(n(...e)),
                        i = new g({
                            onWillAddFirstListener: () => e.addEventListener(t, r),
                            onDidRemoveLastListener: () => e.removeEventListener(t, r)
                        });
                    return i.event
                }, e.toPromise = function(e) {
                    return new Promise((n => t(e)(n)))
                }, e.fromPromise = function(e) {
                    const t = new g;
                    return e.then((e => {
                        t.fire(e)
                    }), (() => {
                        t.fire(void 0)
                    })).finally((() => {
                        t.dispose()
                    })), t.event
                }, e.runAndSubscribe = function(e, t, n) {
                    return t(n), e((e => t(e)))
                };
                class u {
                    constructor(e, t) {
                        this._observable = e, this._counter = 0, this._hasChanged = !1;
                        const n = {
                            onWillAddFirstListener: () => {
                                e.addObserver(this)
                            },
                            onDidRemoveLastListener: () => {
                                e.removeObserver(this)
                            }
                        };
                        this.emitter = new g(n), t && t.add(this.emitter)
                    }
                    beginUpdate(e) {
                        this._counter++
                    }
                    handlePossibleChange(e) {}
                    handleChange(e, t) {
                        this._hasChanged = !0
                    }
                    endUpdate(e) {
                        this._counter--, 0 === this._counter && (this._observable.reportChanges(), this._hasChanged && (this._hasChanged = !1, this.emitter.fire(this._observable.get())))
                    }
                }
                e.fromObservable = function(e, t) {
                    return new u(e, t).emitter.event
                }, e.fromObservableLight = function(e) {
                    return (t, n, r) => {
                        let i = 0,
                            o = !1;
                        const a = {
                            beginUpdate() {
                                i++
                            },
                            endUpdate() {
                                i--, 0 === i && (e.reportChanges(), o && (o = !1, t.call(n)))
                            },
                            handlePossibleChange() {},
                            handleChange() {
                                o = !0
                            }
                        };
                        e.addObserver(a), e.reportChanges();
                        const l = {
                            dispose() {
                                e.removeObserver(a)
                            }
                        };
                        return r instanceof s.SL ? r.add(l) : Array.isArray(r) && r.push(l), l
                    }
                }
            }(r || (r = {}));
            class l {
                static {
                    this.all = new Set
                }
                static {
                    this._idPool = 0
                }
                constructor(e) {
                    this.listenerCount = 0, this.invocationCount = 0, this.elapsedOverall = 0, this.durations = [], this.name = `${e}_${l._idPool++}`, l.all.add(this)
                }
                start(e) {
                    this._stopWatch = new o.G, this.listenerCount = e
                }
                stop() {
                    if (this._stopWatch) {
                        const e = this._stopWatch.elapsed();
                        this.durations.push(e), this.elapsedOverall += e, this.invocationCount += 1, this._stopWatch = void 0
                    }
                }
            }
            class u {
                static {
                    this._idPool = 1
                }
                constructor(e, t, n = (u._idPool++).toString(16).padStart(3, "0")) {
                    this._errorHandler = e, this.threshold = t, this.name = n, this._warnCountdown = 0
                }
                dispose() {
                    this._stacks ? .clear()
                }
                check(e, t) {
                    const n = this.threshold;
                    if (n <= 0 || t < n) return;
                    this._stacks || (this._stacks = new Map);
                    const r = this._stacks.get(e.value) || 0;
                    if (this._stacks.set(e.value, r + 1), this._warnCountdown -= 1, this._warnCountdown <= 0) {
                        this._warnCountdown = .5 * n;
                        const [e, r] = this.getMostFrequentStack(), i = `[${this.name}] potential listener LEAK detected, having ${t} listeners already. MOST frequent listener (${r}):`;
                        a.warn(i), a.warn(e);
                        const s = new c(i, e);
                        this._errorHandler(s)
                    }
                    return () => {
                        const t = this._stacks.get(e.value) || 0;
                        this._stacks.set(e.value, t - 1)
                    }
                }
                getMostFrequentStack() {
                    if (!this._stacks) return;
                    let e, t = 0;
                    for (const [n, r] of this._stacks)(!e || t < r) && (e = [n, r], t = r);
                    return e
                }
            }
            class h {
                static create() {
                    const e = new Error;
                    return new h(e.stack ? ? "")
                }
                constructor(e) {
                    this.value = e
                }
                print() {
                    a.warn(this.value.split("\n").slice(2).join("\n"))
                }
            }
            class c extends Error {
                constructor(e, t) {
                    super(e), this.name = "ListenerLeakError", this.stack = t
                }
            }
            class d extends Error {
                constructor(e, t) {
                    super(e), this.name = "ListenerRefusalError", this.stack = t
                }
            }
            let m = 0;
            class f {
                constructor(e) {
                    this.value = e, this.id = m++
                }
            }
            class g {
                constructor(e) {
                    this._size = 0, this._options = e, this._leakageMon = this._options ? .leakWarningThreshold ? new u(e ? .onListenerError ? ? i.dL, this._options ? .leakWarningThreshold ? ? -1) : void 0, this._perfMon = this._options ? ._profName ? new l(this._options._profName) : void 0, this._deliveryQueue = this._options ? .deliveryQueue
                }
                dispose() {
                    this._disposed || (this._disposed = !0, this._deliveryQueue ? .current === this && this._deliveryQueue.reset(), this._listeners && (this._listeners = void 0, this._size = 0), this._options ? .onDidRemoveLastListener ? .(), this._leakageMon ? .dispose())
                }
                get event() {
                    return this._event ? ? = (e, t, n) => {
                        if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {
                            const e = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;
                            a.warn(e);
                            const t = this._leakageMon.getMostFrequentStack() ? ? ["UNKNOWN stack", -1],
                                n = new d(`${e}. HINT: Stack shows most frequent listener (${t[1]}-times)`, t[0]);
                            return (this._options ? .onListenerError || i.dL)(n), s.JT.None
                        }
                        if (this._disposed) return s.JT.None;
                        t && (e = e.bind(t));
                        const r = new f(e);
                        let o;
                        this._leakageMon && this._size >= Math.ceil(.2 * this._leakageMon.threshold) && (r.stack = h.create(), o = this._leakageMon.check(r.stack, this._size + 1)), this._listeners ? this._listeners instanceof f ? (this._deliveryQueue ? ? = new p, this._listeners = [this._listeners, r]) : this._listeners.push(r) : (this._options ? .onWillAddFirstListener ? .(this), this._listeners = r, this._options ? .onDidAddFirstListener ? .(this)), this._size++;
                        const l = (0, s.OF)((() => {
                            o ? .(), this._removeListener(r)
                        }));
                        return n instanceof s.SL ? n.add(l) : Array.isArray(n) && n.push(l), l
                    }, this._event
                }
                _removeListener(e) {
                    if (this._options ? .onWillRemoveListener ? .(this), !this._listeners) return;
                    if (1 === this._size) return this._listeners = void 0, this._options ? .onDidRemoveLastListener ? .(this), void(this._size = 0);
                    const t = this._listeners,
                        n = t.indexOf(e);
                    if (-1 === n) throw a.log("disposed?", this._disposed), a.log("size?", this._size), a.log("arr?", JSON.stringify(this._listeners)), new Error("Attempted to dispose unknown listener");
                    this._size--, t[n] = void 0;
                    const r = this._deliveryQueue.current === this;
                    if (2 * this._size <= t.length) {
                        let e = 0;
                        for (let n = 0; n < t.length; n++) t[n] ? t[e++] = t[n] : r && (this._deliveryQueue.end--, e < this._deliveryQueue.i && this._deliveryQueue.i--);
                        t.length = e
                    }
                }
                _deliver(e, t) {
                    if (!e) return;
                    const n = this._options ? .onListenerError || i.dL;
                    if (n) try {
                        e.value(t)
                    } catch (e) {
                        n(e)
                    } else e.value(t)
                }
                _deliverQueue(e) {
                    const t = e.current._listeners;
                    for (; e.i < e.end;) this._deliver(t[e.i++], e.value);
                    e.reset()
                }
                fire(e) {
                    if (this._deliveryQueue ? .current && (this._deliverQueue(this._deliveryQueue), this._perfMon ? .stop()), this._perfMon ? .start(this._size), this._listeners)
                        if (this._listeners instanceof f) this._deliver(this._listeners, e);
                        else {
                            const t = this._deliveryQueue;
                            t.enqueue(this, e, this._listeners.length), this._deliverQueue(t)
                        }
                    this._perfMon ? .stop()
                }
                hasListeners() {
                    return this._size > 0
                }
            }
            class p {
                constructor() {
                    this.i = -1, this.end = 0
                }
                enqueue(e, t, n) {
                    this.i = 0, this.end = n, this.current = e, this.value = t
                }
                reset() {
                    this.i = this.end, this.current = void 0, this.value = void 0
                }
            }
        },
        "6tPK": (e, t, n) => {
            var r;

            function i(e, t) {
                return (t << 5) - t + e | 0
            }

            function s(e, t) {
                t = i(149417, t);
                for (let n = 0, r = e.length; n < r; n++) t = i(e.charCodeAt(n), t);
                return t
            }
            n.d(t, {
                    Cv: () => s
                }), n("p044"),
                function(e) {
                    e[e.BLOCK_SIZE = 64] = "BLOCK_SIZE", e[e.UNICODE_REPLACEMENT = 65533] = "UNICODE_REPLACEMENT"
                }(r || (r = {}));
            class o {
                static {
                    this._bigBlock32 = new DataView(new ArrayBuffer(320))
                }
                constructor() {
                    this._h0 = 1732584193, this._h1 = 4023233417, this._h2 = 2562383102, this._h3 = 271733878, this._h4 = 3285377520, this._buff = new Uint8Array(r.BLOCK_SIZE + 3), this._buffDV = new DataView(this._buff.buffer), this._buffLen = 0, this._totalLen = 0, this._leftoverHighSurrogate = 0, this._finished = !1
                }
                update(e) {
                    const t = e.length;
                    if (0 === t) return;
                    const n = this._buff;
                    let i, s, o = this._buffLen,
                        a = this._leftoverHighSurrogate;
                    for (0 !== a || e.charCodeAt(0);;) {
                        let a = i;
                        if (isHighSurrogate(i)) {
                            if (!(NaN < t)) break; {
                                const t = e.charCodeAt(NaN);
                                isLowSurrogate(t) ? computeCodePoint(i, t) : r.UNICODE_REPLACEMENT
                            }
                        } else isLowSurrogate(i) && r.UNICODE_REPLACEMENT;
                        if (this._push(n, o, a), !(s < t)) break;
                        e.charCodeAt(s)
                    }
                    this._buffLen = o, this._leftoverHighSurrogate = a
                }
                _push(e, t, n) {
                    return n < 128 ? e[t++] = n : n < 2048 ? (e[t++] = 192 | (1984 & n) >>> 6, e[t++] = 128 | (63 & n) >>> 0) : n < 65536 ? (e[t++] = 224 | (61440 & n) >>> 12, e[t++] = 128 | (4032 & n) >>> 6, e[t++] = 128 | (63 & n) >>> 0) : (e[t++] = 240 | (1835008 & n) >>> 18, e[t++] = 128 | (258048 & n) >>> 12, e[t++] = 128 | (4032 & n) >>> 6, e[t++] = 128 | (63 & n) >>> 0), t >= r.BLOCK_SIZE && (this._step(), r.BLOCK_SIZE, this._totalLen += r.BLOCK_SIZE, e[0] = e[r.BLOCK_SIZE + 0], e[1] = e[r.BLOCK_SIZE + 1], e[2] = e[r.BLOCK_SIZE + 2]), t
                }
                digest() {
                    return this._finished || (this._finished = !0, this._leftoverHighSurrogate && (this._leftoverHighSurrogate = 0, this._buffLen = this._push(this._buff, this._buffLen, r.UNICODE_REPLACEMENT)), this._totalLen += this._buffLen, this._wrapUp()), toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4)
                }
                _wrapUp() {
                    this._buff[this._buffLen++] = 128, fill(this._buff, this._buffLen), this._buffLen > 56 && (this._step(), fill(this._buff));
                    const e = 8 * this._totalLen;
                    this._buffDV.setUint32(56, Math.floor(e / 4294967296), !1), this._buffDV.setUint32(60, e % 4294967296, !1), this._step()
                }
                _step() {
                    const e = o._bigBlock32,
                        t = this._buffDV;
                    for (let n = 0; n < 64; n += 4) e.setUint32(n, t.getUint32(n, !1), !1);
                    for (let t = 64; t < 320; t += 4) e.setUint32(t, leftRotate(e.getUint32(t - 12, !1) ^ e.getUint32(t - 32, !1) ^ e.getUint32(t - 56, !1) ^ e.getUint32(t - 64, !1), 1), !1);
                    let n = this._h0,
                        r = this._h1,
                        i = this._h2,
                        s = this._h3,
                        a = this._h4;
                    for (let t = 0; t < 80; t++) leftRotate(n, 5), e.getUint32(4 * t, !1), leftRotate(r, 30);
                    this._h0 = this._h0 + n & 4294967295, this._h1 = this._h1 + r & 4294967295, this._h2 = this._h2 + i & 4294967295, this._h3 = this._h3 + s & 4294967295, this._h4 = this._h4 + a & 4294967295
                }
            }
        },
        "yc7/": (e, t, n) => {
            var r, i;
            n.d(t, {
                    DC: () => _,
                    gx: () => y
                }),
                function(e) {
                    e[e.DependsOnKbLayout = -1] = "DependsOnKbLayout", e[e.Unknown = 0] = "Unknown", e[e.Backspace = 1] = "Backspace", e[e.Tab = 2] = "Tab", e[e.Enter = 3] = "Enter", e[e.Shift = 4] = "Shift", e[e.Ctrl = 5] = "Ctrl", e[e.Alt = 6] = "Alt", e[e.PauseBreak = 7] = "PauseBreak", e[e.CapsLock = 8] = "CapsLock", e[e.Escape = 9] = "Escape", e[e.Space = 10] = "Space", e[e.PageUp = 11] = "PageUp", e[e.PageDown = 12] = "PageDown", e[e.End = 13] = "End", e[e.Home = 14] = "Home", e[e.LeftArrow = 15] = "LeftArrow", e[e.UpArrow = 16] = "UpArrow", e[e.RightArrow = 17] = "RightArrow", e[e.DownArrow = 18] = "DownArrow", e[e.Insert = 19] = "Insert", e[e.Delete = 20] = "Delete", e[e.Digit0 = 21] = "Digit0", e[e.Digit1 = 22] = "Digit1", e[e.Digit2 = 23] = "Digit2", e[e.Digit3 = 24] = "Digit3", e[e.Digit4 = 25] = "Digit4", e[e.Digit5 = 26] = "Digit5", e[e.Digit6 = 27] = "Digit6", e[e.Digit7 = 28] = "Digit7", e[e.Digit8 = 29] = "Digit8", e[e.Digit9 = 30] = "Digit9", e[e.KeyA = 31] = "KeyA", e[e.KeyB = 32] = "KeyB", e[e.KeyC = 33] = "KeyC", e[e.KeyD = 34] = "KeyD", e[e.KeyE = 35] = "KeyE", e[e.KeyF = 36] = "KeyF", e[e.KeyG = 37] = "KeyG", e[e.KeyH = 38] = "KeyH", e[e.KeyI = 39] = "KeyI", e[e.KeyJ = 40] = "KeyJ", e[e.KeyK = 41] = "KeyK", e[e.KeyL = 42] = "KeyL", e[e.KeyM = 43] = "KeyM", e[e.KeyN = 44] = "KeyN", e[e.KeyO = 45] = "KeyO", e[e.KeyP = 46] = "KeyP", e[e.KeyQ = 47] = "KeyQ", e[e.KeyR = 48] = "KeyR", e[e.KeyS = 49] = "KeyS", e[e.KeyT = 50] = "KeyT", e[e.KeyU = 51] = "KeyU", e[e.KeyV = 52] = "KeyV", e[e.KeyW = 53] = "KeyW", e[e.KeyX = 54] = "KeyX", e[e.KeyY = 55] = "KeyY", e[e.KeyZ = 56] = "KeyZ", e[e.Meta = 57] = "Meta", e[e.ContextMenu = 58] = "ContextMenu", e[e.F1 = 59] = "F1", e[e.F2 = 60] = "F2", e[e.F3 = 61] = "F3", e[e.F4 = 62] = "F4", e[e.F5 = 63] = "F5", e[e.F6 = 64] = "F6", e[e.F7 = 65] = "F7", e[e.F8 = 66] = "F8", e[e.F9 = 67] = "F9", e[e.F10 = 68] = "F10", e[e.F11 = 69] = "F11", e[e.F12 = 70] = "F12", e[e.F13 = 71] = "F13", e[e.F14 = 72] = "F14", e[e.F15 = 73] = "F15", e[e.F16 = 74] = "F16", e[e.F17 = 75] = "F17", e[e.F18 = 76] = "F18", e[e.F19 = 77] = "F19", e[e.F20 = 78] = "F20", e[e.F21 = 79] = "F21", e[e.F22 = 80] = "F22", e[e.F23 = 81] = "F23", e[e.F24 = 82] = "F24", e[e.NumLock = 83] = "NumLock", e[e.ScrollLock = 84] = "ScrollLock", e[e.Semicolon = 85] = "Semicolon", e[e.Equal = 86] = "Equal", e[e.Comma = 87] = "Comma", e[e.Minus = 88] = "Minus", e[e.Period = 89] = "Period", e[e.Slash = 90] = "Slash", e[e.Backquote = 91] = "Backquote", e[e.BracketLeft = 92] = "BracketLeft", e[e.Backslash = 93] = "Backslash", e[e.BracketRight = 94] = "BracketRight", e[e.Quote = 95] = "Quote", e[e.OEM_8 = 96] = "OEM_8", e[e.IntlBackslash = 97] = "IntlBackslash", e[e.Numpad0 = 98] = "Numpad0", e[e.Numpad1 = 99] = "Numpad1", e[e.Numpad2 = 100] = "Numpad2", e[e.Numpad3 = 101] = "Numpad3", e[e.Numpad4 = 102] = "Numpad4", e[e.Numpad5 = 103] = "Numpad5", e[e.Numpad6 = 104] = "Numpad6", e[e.Numpad7 = 105] = "Numpad7", e[e.Numpad8 = 106] = "Numpad8", e[e.Numpad9 = 107] = "Numpad9", e[e.NumpadMultiply = 108] = "NumpadMultiply", e[e.NumpadAdd = 109] = "NumpadAdd", e[e.NUMPAD_SEPARATOR = 110] = "NUMPAD_SEPARATOR", e[e.NumpadSubtract = 111] = "NumpadSubtract", e[e.NumpadDecimal = 112] = "NumpadDecimal", e[e.NumpadDivide = 113] = "NumpadDivide", e[e.KEY_IN_COMPOSITION = 114] = "KEY_IN_COMPOSITION", e[e.ABNT_C1 = 115] = "ABNT_C1", e[e.ABNT_C2 = 116] = "ABNT_C2", e[e.AudioVolumeMute = 117] = "AudioVolumeMute", e[e.AudioVolumeUp = 118] = "AudioVolumeUp", e[e.AudioVolumeDown = 119] = "AudioVolumeDown", e[e.BrowserSearch = 120] = "BrowserSearch", e[e.BrowserHome = 121] = "BrowserHome", e[e.BrowserBack = 122] = "BrowserBack", e[e.BrowserForward = 123] = "BrowserForward", e[e.MediaTrackNext = 124] = "MediaTrackNext", e[e.MediaTrackPrevious = 125] = "MediaTrackPrevious", e[e.MediaStop = 126] = "MediaStop", e[e.MediaPlayPause = 127] = "MediaPlayPause", e[e.LaunchMediaPlayer = 128] = "LaunchMediaPlayer", e[e.LaunchMail = 129] = "LaunchMail", e[e.LaunchApp2 = 130] = "LaunchApp2", e[e.Clear = 131] = "Clear", e[e.MAX_VALUE = 132] = "MAX_VALUE"
                }(r || (r = {})),
                function(e) {
                    e[e.DependsOnKbLayout = -1] = "DependsOnKbLayout", e[e.None = 0] = "None", e[e.Hyper = 1] = "Hyper", e[e.Super = 2] = "Super", e[e.Fn = 3] = "Fn", e[e.FnLock = 4] = "FnLock", e[e.Suspend = 5] = "Suspend", e[e.Resume = 6] = "Resume", e[e.Turbo = 7] = "Turbo", e[e.Sleep = 8] = "Sleep", e[e.WakeUp = 9] = "WakeUp", e[e.KeyA = 10] = "KeyA", e[e.KeyB = 11] = "KeyB", e[e.KeyC = 12] = "KeyC", e[e.KeyD = 13] = "KeyD", e[e.KeyE = 14] = "KeyE", e[e.KeyF = 15] = "KeyF", e[e.KeyG = 16] = "KeyG", e[e.KeyH = 17] = "KeyH", e[e.KeyI = 18] = "KeyI", e[e.KeyJ = 19] = "KeyJ", e[e.KeyK = 20] = "KeyK", e[e.KeyL = 21] = "KeyL", e[e.KeyM = 22] = "KeyM", e[e.KeyN = 23] = "KeyN", e[e.KeyO = 24] = "KeyO", e[e.KeyP = 25] = "KeyP", e[e.KeyQ = 26] = "KeyQ", e[e.KeyR = 27] = "KeyR", e[e.KeyS = 28] = "KeyS", e[e.KeyT = 29] = "KeyT", e[e.KeyU = 30] = "KeyU", e[e.KeyV = 31] = "KeyV", e[e.KeyW = 32] = "KeyW", e[e.KeyX = 33] = "KeyX", e[e.KeyY = 34] = "KeyY", e[e.KeyZ = 35] = "KeyZ", e[e.Digit1 = 36] = "Digit1", e[e.Digit2 = 37] = "Digit2", e[e.Digit3 = 38] = "Digit3", e[e.Digit4 = 39] = "Digit4", e[e.Digit5 = 40] = "Digit5", e[e.Digit6 = 41] = "Digit6", e[e.Digit7 = 42] = "Digit7", e[e.Digit8 = 43] = "Digit8", e[e.Digit9 = 44] = "Digit9", e[e.Digit0 = 45] = "Digit0", e[e.Enter = 46] = "Enter", e[e.Escape = 47] = "Escape", e[e.Backspace = 48] = "Backspace", e[e.Tab = 49] = "Tab", e[e.Space = 50] = "Space", e[e.Minus = 51] = "Minus", e[e.Equal = 52] = "Equal", e[e.BracketLeft = 53] = "BracketLeft", e[e.BracketRight = 54] = "BracketRight", e[e.Backslash = 55] = "Backslash", e[e.IntlHash = 56] = "IntlHash", e[e.Semicolon = 57] = "Semicolon", e[e.Quote = 58] = "Quote", e[e.Backquote = 59] = "Backquote", e[e.Comma = 60] = "Comma", e[e.Period = 61] = "Period", e[e.Slash = 62] = "Slash", e[e.CapsLock = 63] = "CapsLock", e[e.F1 = 64] = "F1", e[e.F2 = 65] = "F2", e[e.F3 = 66] = "F3", e[e.F4 = 67] = "F4", e[e.F5 = 68] = "F5", e[e.F6 = 69] = "F6", e[e.F7 = 70] = "F7", e[e.F8 = 71] = "F8", e[e.F9 = 72] = "F9", e[e.F10 = 73] = "F10", e[e.F11 = 74] = "F11", e[e.F12 = 75] = "F12", e[e.PrintScreen = 76] = "PrintScreen", e[e.ScrollLock = 77] = "ScrollLock", e[e.Pause = 78] = "Pause", e[e.Insert = 79] = "Insert", e[e.Home = 80] = "Home", e[e.PageUp = 81] = "PageUp", e[e.Delete = 82] = "Delete", e[e.End = 83] = "End", e[e.PageDown = 84] = "PageDown", e[e.ArrowRight = 85] = "ArrowRight", e[e.ArrowLeft = 86] = "ArrowLeft", e[e.ArrowDown = 87] = "ArrowDown", e[e.ArrowUp = 88] = "ArrowUp", e[e.NumLock = 89] = "NumLock", e[e.NumpadDivide = 90] = "NumpadDivide", e[e.NumpadMultiply = 91] = "NumpadMultiply", e[e.NumpadSubtract = 92] = "NumpadSubtract", e[e.NumpadAdd = 93] = "NumpadAdd", e[e.NumpadEnter = 94] = "NumpadEnter", e[e.Numpad1 = 95] = "Numpad1", e[e.Numpad2 = 96] = "Numpad2", e[e.Numpad3 = 97] = "Numpad3", e[e.Numpad4 = 98] = "Numpad4", e[e.Numpad5 = 99] = "Numpad5", e[e.Numpad6 = 100] = "Numpad6", e[e.Numpad7 = 101] = "Numpad7", e[e.Numpad8 = 102] = "Numpad8", e[e.Numpad9 = 103] = "Numpad9", e[e.Numpad0 = 104] = "Numpad0", e[e.NumpadDecimal = 105] = "NumpadDecimal", e[e.IntlBackslash = 106] = "IntlBackslash", e[e.ContextMenu = 107] = "ContextMenu", e[e.Power = 108] = "Power", e[e.NumpadEqual = 109] = "NumpadEqual", e[e.F13 = 110] = "F13", e[e.F14 = 111] = "F14", e[e.F15 = 112] = "F15", e[e.F16 = 113] = "F16", e[e.F17 = 114] = "F17", e[e.F18 = 115] = "F18", e[e.F19 = 116] = "F19", e[e.F20 = 117] = "F20", e[e.F21 = 118] = "F21", e[e.F22 = 119] = "F22", e[e.F23 = 120] = "F23", e[e.F24 = 121] = "F24", e[e.Open = 122] = "Open", e[e.Help = 123] = "Help", e[e.Select = 124] = "Select", e[e.Again = 125] = "Again", e[e.Undo = 126] = "Undo", e[e.Cut = 127] = "Cut", e[e.Copy = 128] = "Copy", e[e.Paste = 129] = "Paste", e[e.Find = 130] = "Find", e[e.AudioVolumeMute = 131] = "AudioVolumeMute", e[e.AudioVolumeUp = 132] = "AudioVolumeUp", e[e.AudioVolumeDown = 133] = "AudioVolumeDown", e[e.NumpadComma = 134] = "NumpadComma", e[e.IntlRo = 135] = "IntlRo", e[e.KanaMode = 136] = "KanaMode", e[e.IntlYen = 137] = "IntlYen", e[e.Convert = 138] = "Convert", e[e.NonConvert = 139] = "NonConvert", e[e.Lang1 = 140] = "Lang1", e[e.Lang2 = 141] = "Lang2", e[e.Lang3 = 142] = "Lang3", e[e.Lang4 = 143] = "Lang4", e[e.Lang5 = 144] = "Lang5", e[e.Abort = 145] = "Abort", e[e.Props = 146] = "Props", e[e.NumpadParenLeft = 147] = "NumpadParenLeft", e[e.NumpadParenRight = 148] = "NumpadParenRight", e[e.NumpadBackspace = 149] = "NumpadBackspace", e[e.NumpadMemoryStore = 150] = "NumpadMemoryStore", e[e.NumpadMemoryRecall = 151] = "NumpadMemoryRecall", e[e.NumpadMemoryClear = 152] = "NumpadMemoryClear", e[e.NumpadMemoryAdd = 153] = "NumpadMemoryAdd", e[e.NumpadMemorySubtract = 154] = "NumpadMemorySubtract", e[e.NumpadClear = 155] = "NumpadClear", e[e.NumpadClearEntry = 156] = "NumpadClearEntry", e[e.ControlLeft = 157] = "ControlLeft", e[e.ShiftLeft = 158] = "ShiftLeft", e[e.AltLeft = 159] = "AltLeft", e[e.MetaLeft = 160] = "MetaLeft", e[e.ControlRight = 161] = "ControlRight", e[e.ShiftRight = 162] = "ShiftRight", e[e.AltRight = 163] = "AltRight", e[e.MetaRight = 164] = "MetaRight", e[e.BrightnessUp = 165] = "BrightnessUp", e[e.BrightnessDown = 166] = "BrightnessDown", e[e.MediaPlay = 167] = "MediaPlay", e[e.MediaRecord = 168] = "MediaRecord", e[e.MediaFastForward = 169] = "MediaFastForward", e[e.MediaRewind = 170] = "MediaRewind", e[e.MediaTrackNext = 171] = "MediaTrackNext", e[e.MediaTrackPrevious = 172] = "MediaTrackPrevious", e[e.MediaStop = 173] = "MediaStop", e[e.Eject = 174] = "Eject", e[e.MediaPlayPause = 175] = "MediaPlayPause", e[e.MediaSelect = 176] = "MediaSelect", e[e.LaunchMail = 177] = "LaunchMail", e[e.LaunchApp2 = 178] = "LaunchApp2", e[e.LaunchApp1 = 179] = "LaunchApp1", e[e.SelectTask = 180] = "SelectTask", e[e.LaunchScreenSaver = 181] = "LaunchScreenSaver", e[e.BrowserSearch = 182] = "BrowserSearch", e[e.BrowserHome = 183] = "BrowserHome", e[e.BrowserBack = 184] = "BrowserBack", e[e.BrowserForward = 185] = "BrowserForward", e[e.BrowserStop = 186] = "BrowserStop", e[e.BrowserRefresh = 187] = "BrowserRefresh", e[e.BrowserFavorites = 188] = "BrowserFavorites", e[e.ZoomToggle = 189] = "ZoomToggle", e[e.MailReply = 190] = "MailReply", e[e.MailForward = 191] = "MailForward", e[e.MailSend = 192] = "MailSend", e[e.MAX_VALUE = 193] = "MAX_VALUE"
                }(i || (i = {}));
            class s {
                constructor() {
                    this._keyCodeToStr = [], this._strToKeyCode = Object.create(null)
                }
                define(e, t) {
                    this._keyCodeToStr[e] = t, this._strToKeyCode[t.toLowerCase()] = e
                }
                keyCodeToStr(e) {
                    return this._keyCodeToStr[e]
                }
                strToKeyCode(e) {
                    return this._strToKeyCode[e.toLowerCase()] || r.Unknown
                }
            }
            const o = new s,
                a = new s,
                l = new s,
                u = new Array(230),
                h = {},
                c = [],
                d = Object.create(null),
                m = Object.create(null),
                f = [],
                g = [];
            for (let e = 0; e <= i.MAX_VALUE; e++) f[e] = r.DependsOnKbLayout;
            for (let e = 0; e <= r.MAX_VALUE; e++) g[e] = i.DependsOnKbLayout;
            var p, _, C;

            function y(e, t) {
                return (e | (65535 & t) << 16 >>> 0) >>> 0
            }! function() {
                const e = "",
                    t = [
                        [1, i.None, "None", r.Unknown, "unknown", 0, "VK_UNKNOWN", e, e],
                        [1, i.Hyper, "Hyper", r.Unknown, e, 0, e, e, e],
                        [1, i.Super, "Super", r.Unknown, e, 0, e, e, e],
                        [1, i.Fn, "Fn", r.Unknown, e, 0, e, e, e],
                        [1, i.FnLock, "FnLock", r.Unknown, e, 0, e, e, e],
                        [1, i.Suspend, "Suspend", r.Unknown, e, 0, e, e, e],
                        [1, i.Resume, "Resume", r.Unknown, e, 0, e, e, e],
                        [1, i.Turbo, "Turbo", r.Unknown, e, 0, e, e, e],
                        [1, i.Sleep, "Sleep", r.Unknown, e, 0, "VK_SLEEP", e, e],
                        [1, i.WakeUp, "WakeUp", r.Unknown, e, 0, e, e, e],
                        [0, i.KeyA, "KeyA", r.KeyA, "A", 65, "VK_A", e, e],
                        [0, i.KeyB, "KeyB", r.KeyB, "B", 66, "VK_B", e, e],
                        [0, i.KeyC, "KeyC", r.KeyC, "C", 67, "VK_C", e, e],
                        [0, i.KeyD, "KeyD", r.KeyD, "D", 68, "VK_D", e, e],
                        [0, i.KeyE, "KeyE", r.KeyE, "E", 69, "VK_E", e, e],
                        [0, i.KeyF, "KeyF", r.KeyF, "F", 70, "VK_F", e, e],
                        [0, i.KeyG, "KeyG", r.KeyG, "G", 71, "VK_G", e, e],
                        [0, i.KeyH, "KeyH", r.KeyH, "H", 72, "VK_H", e, e],
                        [0, i.KeyI, "KeyI", r.KeyI, "I", 73, "VK_I", e, e],
                        [0, i.KeyJ, "KeyJ", r.KeyJ, "J", 74, "VK_J", e, e],
                        [0, i.KeyK, "KeyK", r.KeyK, "K", 75, "VK_K", e, e],
                        [0, i.KeyL, "KeyL", r.KeyL, "L", 76, "VK_L", e, e],
                        [0, i.KeyM, "KeyM", r.KeyM, "M", 77, "VK_M", e, e],
                        [0, i.KeyN, "KeyN", r.KeyN, "N", 78, "VK_N", e, e],
                        [0, i.KeyO, "KeyO", r.KeyO, "O", 79, "VK_O", e, e],
                        [0, i.KeyP, "KeyP", r.KeyP, "P", 80, "VK_P", e, e],
                        [0, i.KeyQ, "KeyQ", r.KeyQ, "Q", 81, "VK_Q", e, e],
                        [0, i.KeyR, "KeyR", r.KeyR, "R", 82, "VK_R", e, e],
                        [0, i.KeyS, "KeyS", r.KeyS, "S", 83, "VK_S", e, e],
                        [0, i.KeyT, "KeyT", r.KeyT, "T", 84, "VK_T", e, e],
                        [0, i.KeyU, "KeyU", r.KeyU, "U", 85, "VK_U", e, e],
                        [0, i.KeyV, "KeyV", r.KeyV, "V", 86, "VK_V", e, e],
                        [0, i.KeyW, "KeyW", r.KeyW, "W", 87, "VK_W", e, e],
                        [0, i.KeyX, "KeyX", r.KeyX, "X", 88, "VK_X", e, e],
                        [0, i.KeyY, "KeyY", r.KeyY, "Y", 89, "VK_Y", e, e],
                        [0, i.KeyZ, "KeyZ", r.KeyZ, "Z", 90, "VK_Z", e, e],
                        [0, i.Digit1, "Digit1", r.Digit1, "1", 49, "VK_1", e, e],
                        [0, i.Digit2, "Digit2", r.Digit2, "2", 50, "VK_2", e, e],
                        [0, i.Digit3, "Digit3", r.Digit3, "3", 51, "VK_3", e, e],
                        [0, i.Digit4, "Digit4", r.Digit4, "4", 52, "VK_4", e, e],
                        [0, i.Digit5, "Digit5", r.Digit5, "5", 53, "VK_5", e, e],
                        [0, i.Digit6, "Digit6", r.Digit6, "6", 54, "VK_6", e, e],
                        [0, i.Digit7, "Digit7", r.Digit7, "7", 55, "VK_7", e, e],
                        [0, i.Digit8, "Digit8", r.Digit8, "8", 56, "VK_8", e, e],
                        [0, i.Digit9, "Digit9", r.Digit9, "9", 57, "VK_9", e, e],
                        [0, i.Digit0, "Digit0", r.Digit0, "0", 48, "VK_0", e, e],
                        [1, i.Enter, "Enter", r.Enter, "Enter", 13, "VK_RETURN", e, e],
                        [1, i.Escape, "Escape", r.Escape, "Escape", 27, "VK_ESCAPE", e, e],
                        [1, i.Backspace, "Backspace", r.Backspace, "Backspace", 8, "VK_BACK", e, e],
                        [1, i.Tab, "Tab", r.Tab, "Tab", 9, "VK_TAB", e, e],
                        [1, i.Space, "Space", r.Space, "Space", 32, "VK_SPACE", e, e],
                        [0, i.Minus, "Minus", r.Minus, "-", 189, "VK_OEM_MINUS", "-", "OEM_MINUS"],
                        [0, i.Equal, "Equal", r.Equal, "=", 187, "VK_OEM_PLUS", "=", "OEM_PLUS"],
                        [0, i.BracketLeft, "BracketLeft", r.BracketLeft, "[", 219, "VK_OEM_4", "[", "OEM_4"],
                        [0, i.BracketRight, "BracketRight", r.BracketRight, "]", 221, "VK_OEM_6", "]", "OEM_6"],
                        [0, i.Backslash, "Backslash", r.Backslash, "\\", 220, "VK_OEM_5", "\\", "OEM_5"],
                        [0, i.IntlHash, "IntlHash", r.Unknown, e, 0, e, e, e],
                        [0, i.Semicolon, "Semicolon", r.Semicolon, ";", 186, "VK_OEM_1", ";", "OEM_1"],
                        [0, i.Quote, "Quote", r.Quote, "'", 222, "VK_OEM_7", "'", "OEM_7"],
                        [0, i.Backquote, "Backquote", r.Backquote, "`", 192, "VK_OEM_3", "`", "OEM_3"],
                        [0, i.Comma, "Comma", r.Comma, ",", 188, "VK_OEM_COMMA", ",", "OEM_COMMA"],
                        [0, i.Period, "Period", r.Period, ".", 190, "VK_OEM_PERIOD", ".", "OEM_PERIOD"],
                        [0, i.Slash, "Slash", r.Slash, "/", 191, "VK_OEM_2", "/", "OEM_2"],
                        [1, i.CapsLock, "CapsLock", r.CapsLock, "CapsLock", 20, "VK_CAPITAL", e, e],
                        [1, i.F1, "F1", r.F1, "F1", 112, "VK_F1", e, e],
                        [1, i.F2, "F2", r.F2, "F2", 113, "VK_F2", e, e],
                        [1, i.F3, "F3", r.F3, "F3", 114, "VK_F3", e, e],
                        [1, i.F4, "F4", r.F4, "F4", 115, "VK_F4", e, e],
                        [1, i.F5, "F5", r.F5, "F5", 116, "VK_F5", e, e],
                        [1, i.F6, "F6", r.F6, "F6", 117, "VK_F6", e, e],
                        [1, i.F7, "F7", r.F7, "F7", 118, "VK_F7", e, e],
                        [1, i.F8, "F8", r.F8, "F8", 119, "VK_F8", e, e],
                        [1, i.F9, "F9", r.F9, "F9", 120, "VK_F9", e, e],
                        [1, i.F10, "F10", r.F10, "F10", 121, "VK_F10", e, e],
                        [1, i.F11, "F11", r.F11, "F11", 122, "VK_F11", e, e],
                        [1, i.F12, "F12", r.F12, "F12", 123, "VK_F12", e, e],
                        [1, i.PrintScreen, "PrintScreen", r.Unknown, e, 0, e, e, e],
                        [1, i.ScrollLock, "ScrollLock", r.ScrollLock, "ScrollLock", 145, "VK_SCROLL", e, e],
                        [1, i.Pause, "Pause", r.PauseBreak, "PauseBreak", 19, "VK_PAUSE", e, e],
                        [1, i.Insert, "Insert", r.Insert, "Insert", 45, "VK_INSERT", e, e],
                        [1, i.Home, "Home", r.Home, "Home", 36, "VK_HOME", e, e],
                        [1, i.PageUp, "PageUp", r.PageUp, "PageUp", 33, "VK_PRIOR", e, e],
                        [1, i.Delete, "Delete", r.Delete, "Delete", 46, "VK_DELETE", e, e],
                        [1, i.End, "End", r.End, "End", 35, "VK_END", e, e],
                        [1, i.PageDown, "PageDown", r.PageDown, "PageDown", 34, "VK_NEXT", e, e],
                        [1, i.ArrowRight, "ArrowRight", r.RightArrow, "RightArrow", 39, "VK_RIGHT", "Right", e],
                        [1, i.ArrowLeft, "ArrowLeft", r.LeftArrow, "LeftArrow", 37, "VK_LEFT", "Left", e],
                        [1, i.ArrowDown, "ArrowDown", r.DownArrow, "DownArrow", 40, "VK_DOWN", "Down", e],
                        [1, i.ArrowUp, "ArrowUp", r.UpArrow, "UpArrow", 38, "VK_UP", "Up", e],
                        [1, i.NumLock, "NumLock", r.NumLock, "NumLock", 144, "VK_NUMLOCK", e, e],
                        [1, i.NumpadDivide, "NumpadDivide", r.NumpadDivide, "NumPad_Divide", 111, "VK_DIVIDE", e, e],
                        [1, i.NumpadMultiply, "NumpadMultiply", r.NumpadMultiply, "NumPad_Multiply", 106, "VK_MULTIPLY", e, e],
                        [1, i.NumpadSubtract, "NumpadSubtract", r.NumpadSubtract, "NumPad_Subtract", 109, "VK_SUBTRACT", e, e],
                        [1, i.NumpadAdd, "NumpadAdd", r.NumpadAdd, "NumPad_Add", 107, "VK_ADD", e, e],
                        [1, i.NumpadEnter, "NumpadEnter", r.Enter, e, 0, e, e, e],
                        [1, i.Numpad1, "Numpad1", r.Numpad1, "NumPad1", 97, "VK_NUMPAD1", e, e],
                        [1, i.Numpad2, "Numpad2", r.Numpad2, "NumPad2", 98, "VK_NUMPAD2", e, e],
                        [1, i.Numpad3, "Numpad3", r.Numpad3, "NumPad3", 99, "VK_NUMPAD3", e, e],
                        [1, i.Numpad4, "Numpad4", r.Numpad4, "NumPad4", 100, "VK_NUMPAD4", e, e],
                        [1, i.Numpad5, "Numpad5", r.Numpad5, "NumPad5", 101, "VK_NUMPAD5", e, e],
                        [1, i.Numpad6, "Numpad6", r.Numpad6, "NumPad6", 102, "VK_NUMPAD6", e, e],
                        [1, i.Numpad7, "Numpad7", r.Numpad7, "NumPad7", 103, "VK_NUMPAD7", e, e],
                        [1, i.Numpad8, "Numpad8", r.Numpad8, "NumPad8", 104, "VK_NUMPAD8", e, e],
                        [1, i.Numpad9, "Numpad9", r.Numpad9, "NumPad9", 105, "VK_NUMPAD9", e, e],
                        [1, i.Numpad0, "Numpad0", r.Numpad0, "NumPad0", 96, "VK_NUMPAD0", e, e],
                        [1, i.NumpadDecimal, "NumpadDecimal", r.NumpadDecimal, "NumPad_Decimal", 110, "VK_DECIMAL", e, e],
                        [0, i.IntlBackslash, "IntlBackslash", r.IntlBackslash, "OEM_102", 226, "VK_OEM_102", e, e],
                        [1, i.ContextMenu, "ContextMenu", r.ContextMenu, "ContextMenu", 93, e, e, e],
                        [1, i.Power, "Power", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadEqual, "NumpadEqual", r.Unknown, e, 0, e, e, e],
                        [1, i.F13, "F13", r.F13, "F13", 124, "VK_F13", e, e],
                        [1, i.F14, "F14", r.F14, "F14", 125, "VK_F14", e, e],
                        [1, i.F15, "F15", r.F15, "F15", 126, "VK_F15", e, e],
                        [1, i.F16, "F16", r.F16, "F16", 127, "VK_F16", e, e],
                        [1, i.F17, "F17", r.F17, "F17", 128, "VK_F17", e, e],
                        [1, i.F18, "F18", r.F18, "F18", 129, "VK_F18", e, e],
                        [1, i.F19, "F19", r.F19, "F19", 130, "VK_F19", e, e],
                        [1, i.F20, "F20", r.F20, "F20", 131, "VK_F20", e, e],
                        [1, i.F21, "F21", r.F21, "F21", 132, "VK_F21", e, e],
                        [1, i.F22, "F22", r.F22, "F22", 133, "VK_F22", e, e],
                        [1, i.F23, "F23", r.F23, "F23", 134, "VK_F23", e, e],
                        [1, i.F24, "F24", r.F24, "F24", 135, "VK_F24", e, e],
                        [1, i.Open, "Open", r.Unknown, e, 0, e, e, e],
                        [1, i.Help, "Help", r.Unknown, e, 0, e, e, e],
                        [1, i.Select, "Select", r.Unknown, e, 0, e, e, e],
                        [1, i.Again, "Again", r.Unknown, e, 0, e, e, e],
                        [1, i.Undo, "Undo", r.Unknown, e, 0, e, e, e],
                        [1, i.Cut, "Cut", r.Unknown, e, 0, e, e, e],
                        [1, i.Copy, "Copy", r.Unknown, e, 0, e, e, e],
                        [1, i.Paste, "Paste", r.Unknown, e, 0, e, e, e],
                        [1, i.Find, "Find", r.Unknown, e, 0, e, e, e],
                        [1, i.AudioVolumeMute, "AudioVolumeMute", r.AudioVolumeMute, "AudioVolumeMute", 173, "VK_VOLUME_MUTE", e, e],
                        [1, i.AudioVolumeUp, "AudioVolumeUp", r.AudioVolumeUp, "AudioVolumeUp", 175, "VK_VOLUME_UP", e, e],
                        [1, i.AudioVolumeDown, "AudioVolumeDown", r.AudioVolumeDown, "AudioVolumeDown", 174, "VK_VOLUME_DOWN", e, e],
                        [1, i.NumpadComma, "NumpadComma", r.NUMPAD_SEPARATOR, "NumPad_Separator", 108, "VK_SEPARATOR", e, e],
                        [0, i.IntlRo, "IntlRo", r.ABNT_C1, "ABNT_C1", 193, "VK_ABNT_C1", e, e],
                        [1, i.KanaMode, "KanaMode", r.Unknown, e, 0, e, e, e],
                        [0, i.IntlYen, "IntlYen", r.Unknown, e, 0, e, e, e],
                        [1, i.Convert, "Convert", r.Unknown, e, 0, e, e, e],
                        [1, i.NonConvert, "NonConvert", r.Unknown, e, 0, e, e, e],
                        [1, i.Lang1, "Lang1", r.Unknown, e, 0, e, e, e],
                        [1, i.Lang2, "Lang2", r.Unknown, e, 0, e, e, e],
                        [1, i.Lang3, "Lang3", r.Unknown, e, 0, e, e, e],
                        [1, i.Lang4, "Lang4", r.Unknown, e, 0, e, e, e],
                        [1, i.Lang5, "Lang5", r.Unknown, e, 0, e, e, e],
                        [1, i.Abort, "Abort", r.Unknown, e, 0, e, e, e],
                        [1, i.Props, "Props", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadParenLeft, "NumpadParenLeft", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadParenRight, "NumpadParenRight", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadBackspace, "NumpadBackspace", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadMemoryStore, "NumpadMemoryStore", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadMemoryRecall, "NumpadMemoryRecall", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadMemoryClear, "NumpadMemoryClear", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadMemoryAdd, "NumpadMemoryAdd", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadMemorySubtract, "NumpadMemorySubtract", r.Unknown, e, 0, e, e, e],
                        [1, i.NumpadClear, "NumpadClear", r.Clear, "Clear", 12, "VK_CLEAR", e, e],
                        [1, i.NumpadClearEntry, "NumpadClearEntry", r.Unknown, e, 0, e, e, e],
                        [1, i.None, e, r.Ctrl, "Ctrl", 17, "VK_CONTROL", e, e],
                        [1, i.None, e, r.Shift, "Shift", 16, "VK_SHIFT", e, e],
                        [1, i.None, e, r.Alt, "Alt", 18, "VK_MENU", e, e],
                        [1, i.None, e, r.Meta, "Meta", 91, "VK_COMMAND", e, e],
                        [1, i.ControlLeft, "ControlLeft", r.Ctrl, e, 0, "VK_LCONTROL", e, e],
                        [1, i.ShiftLeft, "ShiftLeft", r.Shift, e, 0, "VK_LSHIFT", e, e],
                        [1, i.AltLeft, "AltLeft", r.Alt, e, 0, "VK_LMENU", e, e],
                        [1, i.MetaLeft, "MetaLeft", r.Meta, e, 0, "VK_LWIN", e, e],
                        [1, i.ControlRight, "ControlRight", r.Ctrl, e, 0, "VK_RCONTROL", e, e],
                        [1, i.ShiftRight, "ShiftRight", r.Shift, e, 0, "VK_RSHIFT", e, e],
                        [1, i.AltRight, "AltRight", r.Alt, e, 0, "VK_RMENU", e, e],
                        [1, i.MetaRight, "MetaRight", r.Meta, e, 0, "VK_RWIN", e, e],
                        [1, i.BrightnessUp, "BrightnessUp", r.Unknown, e, 0, e, e, e],
                        [1, i.BrightnessDown, "BrightnessDown", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaPlay, "MediaPlay", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaRecord, "MediaRecord", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaFastForward, "MediaFastForward", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaRewind, "MediaRewind", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaTrackNext, "MediaTrackNext", r.MediaTrackNext, "MediaTrackNext", 176, "VK_MEDIA_NEXT_TRACK", e, e],
                        [1, i.MediaTrackPrevious, "MediaTrackPrevious", r.MediaTrackPrevious, "MediaTrackPrevious", 177, "VK_MEDIA_PREV_TRACK", e, e],
                        [1, i.MediaStop, "MediaStop", r.MediaStop, "MediaStop", 178, "VK_MEDIA_STOP", e, e],
                        [1, i.Eject, "Eject", r.Unknown, e, 0, e, e, e],
                        [1, i.MediaPlayPause, "MediaPlayPause", r.MediaPlayPause, "MediaPlayPause", 179, "VK_MEDIA_PLAY_PAUSE", e, e],
                        [1, i.MediaSelect, "MediaSelect", r.LaunchMediaPlayer, "LaunchMediaPlayer", 181, "VK_MEDIA_LAUNCH_MEDIA_SELECT", e, e],
                        [1, i.LaunchMail, "LaunchMail", r.LaunchMail, "LaunchMail", 180, "VK_MEDIA_LAUNCH_MAIL", e, e],
                        [1, i.LaunchApp2, "LaunchApp2", r.LaunchApp2, "LaunchApp2", 183, "VK_MEDIA_LAUNCH_APP2", e, e],
                        [1, i.LaunchApp1, "LaunchApp1", r.Unknown, e, 0, "VK_MEDIA_LAUNCH_APP1", e, e],
                        [1, i.SelectTask, "SelectTask", r.Unknown, e, 0, e, e, e],
                        [1, i.LaunchScreenSaver, "LaunchScreenSaver", r.Unknown, e, 0, e, e, e],
                        [1, i.BrowserSearch, "BrowserSearch", r.BrowserSearch, "BrowserSearch", 170, "VK_BROWSER_SEARCH", e, e],
                        [1, i.BrowserHome, "BrowserHome", r.BrowserHome, "BrowserHome", 172, "VK_BROWSER_HOME", e, e],
                        [1, i.BrowserBack, "BrowserBack", r.BrowserBack, "BrowserBack", 166, "VK_BROWSER_BACK", e, e],
                        [1, i.BrowserForward, "BrowserForward", r.BrowserForward, "BrowserForward", 167, "VK_BROWSER_FORWARD", e, e],
                        [1, i.BrowserStop, "BrowserStop", r.Unknown, e, 0, "VK_BROWSER_STOP", e, e],
                        [1, i.BrowserRefresh, "BrowserRefresh", r.Unknown, e, 0, "VK_BROWSER_REFRESH", e, e],
                        [1, i.BrowserFavorites, "BrowserFavorites", r.Unknown, e, 0, "VK_BROWSER_FAVORITES", e, e],
                        [1, i.ZoomToggle, "ZoomToggle", r.Unknown, e, 0, e, e, e],
                        [1, i.MailReply, "MailReply", r.Unknown, e, 0, e, e, e],
                        [1, i.MailForward, "MailForward", r.Unknown, e, 0, e, e, e],
                        [1, i.MailSend, "MailSend", r.Unknown, e, 0, e, e, e],
                        [1, i.None, e, r.KEY_IN_COMPOSITION, "KeyInComposition", 229, e, e, e],
                        [1, i.None, e, r.ABNT_C2, "ABNT_C2", 194, "VK_ABNT_C2", e, e],
                        [1, i.None, e, r.OEM_8, "OEM_8", 223, "VK_OEM_8", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_KANA", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_HANGUL", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_JUNJA", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_FINAL", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_HANJA", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_KANJI", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_CONVERT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_NONCONVERT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_ACCEPT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_MODECHANGE", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_SELECT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_PRINT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_EXECUTE", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_SNAPSHOT", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_HELP", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_APPS", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_PROCESSKEY", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_PACKET", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_DBE_SBCSCHAR", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_DBE_DBCSCHAR", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_ATTN", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_CRSEL", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_EXSEL", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_EREOF", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_PLAY", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_ZOOM", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_NONAME", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_PA1", e, e],
                        [1, i.None, e, r.Unknown, e, 0, "VK_OEM_CLEAR", e, e]
                    ],
                    n = [],
                    s = [];
                for (const e of t) {
                    const [t, i, p, _, C, y, A, E, S] = e;
                    if (s[i] || (s[i] = !0, c[i] = p, d[p] = i, m[p.toLowerCase()] = i, t && (f[i] = _, _ !== r.Unknown && _ !== r.Enter && _ !== r.Ctrl && _ !== r.Shift && _ !== r.Alt && _ !== r.Meta && (g[_] = i))), !n[_]) {
                        if (n[_] = !0, !C) throw new Error(`String representation missing for key code ${_} around scan code ${p}`);
                        o.define(_, C), a.define(_, E || C), l.define(_, S || E || C)
                    }
                    y && (u[y] = _), A && (h[A] = _)
                }
                g[r.Enter] = i.Enter
            }(),
            function(e) {
                e.toString = function(e) {
                    return o.keyCodeToStr(e)
                }, e.fromString = function(e) {
                    return o.strToKeyCode(e)
                }, e.toUserSettingsUS = function(e) {
                    return a.keyCodeToStr(e)
                }, e.toUserSettingsGeneral = function(e) {
                    return l.keyCodeToStr(e)
                }, e.fromUserSettings = function(e) {
                    return a.strToKeyCode(e) || l.strToKeyCode(e)
                }, e.toElectronAccelerator = function(e) {
                    if (e >= r.Numpad0 && e <= r.NumpadDivide) return null;
                    switch (e) {
                        case r.UpArrow:
                            return "Up";
                        case r.DownArrow:
                            return "Down";
                        case r.LeftArrow:
                            return "Left";
                        case r.RightArrow:
                            return "Right"
                    }
                    return o.keyCodeToStr(e)
                }
            }(p || (p = {})), (C = _ || (_ = {}))[C.CtrlCmd = 2048] = "CtrlCmd", C[C.Shift = 1024] = "Shift", C[C.Alt = 512] = "Alt", C[C.WinCtrl = 256] = "WinCtrl"
        },
        RVdl: (e, t, n) => {
            n.d(t, {
                F8: () => d,
                JT: () => g,
                OF: () => m,
                SL: () => f
            }), n("iDmX"), n("t1yw"), n("Ef4y");
            var r = n("G9Uv"),
                i = n("wBFb"),
                s = n("ziTh");
            let o = null;
            class a {
                constructor() {
                    this.livingDisposables = new Map
                }
                static {
                    this.idx = 0
                }
                getDisposableData(e) {
                    let t = this.livingDisposables.get(e);
                    return t || (a.idx++, this.livingDisposables.set(e, t)), t
                }
                trackDisposable(e) {
                    const t = this.getDisposableData(e);
                    t.source || (t.source = (new Error).stack)
                }
                setParent(e, t) {
                    this.getDisposableData(e).parent = t
                }
                markAsDisposed(e) {
                    this.livingDisposables.delete(e)
                }
                markAsSingleton(e) {
                    this.getDisposableData(e).isSingleton = !0
                }
                getRootParent(e, t) {
                    const n = t.get(e);
                    if (n) return n;
                    const r = e.parent ? this.getRootParent(this.getDisposableData(e.parent), t) : e;
                    return t.set(e, r), r
                }
                getTrackedDisposables() {
                    const e = new Map;
                    return [...this.livingDisposables.entries()].filter((([, t]) => null !== t.source && !this.getRootParent(t, e).isSingleton)).flatMap((([e]) => e))
                }
                computeLeakingDisposables(e = 10, t) {
                    let n;
                    if (t);
                    else {
                        const e = new Map,
                            t = [...this.livingDisposables.values()].filter((t => null !== t.source && !this.getRootParent(t, e).isSingleton));
                        if (0 === t.length) return;
                        const r = new Set(t.map((e => e.value)));
                        if (t.filter((e => !(e.parent && r.has(e.parent)))), 0 === n.length) throw new Error("There are cyclic diposable chains!")
                    }
                    return void 0
                }
            }

            function l(e) {
                return o ? .trackDisposable(e), e
            }

            function u(e) {
                o ? .markAsDisposed(e)
            }

            function h(e, t) {
                o ? .setParent(e, t)
            }

            function c(e) {
                if (i.$.is(e)) {
                    const t = [];
                    for (const n of e)
                        if (n) try {
                            n.dispose()
                        } catch (e) {
                            t.push(e)
                        }
                    if (1 === t.length) throw t[0];
                    if (t.length > 1) throw new AggregateError(t, "Encountered errors while disposing of store");
                    return Array.isArray(e) ? [] : e
                }
                if (e) return e.dispose(), e
            }

            function d(...e) {
                const t = m((() => c(e)));
                return function(e, t) {
                    if (o)
                        for (const n of e) o.setParent(n, t)
                }(e, t), t
            }

            function m(e) {
                const t = l({
                    dispose: (0, r.M)((() => {
                        u(t), e()
                    }))
                });
                return t
            }
            class f {
                static {
                    this.DISABLE_DISPOSED_WARNING = !1
                }
                constructor() {
                    this._toDispose = new Set, this._isDisposed = !1, l(this)
                }
                dispose() {
                    this._isDisposed || (u(this), this._isDisposed = !0, this.clear())
                }
                get isDisposed() {
                    return this._isDisposed
                }
                clear() {
                    if (0 !== this._toDispose.size) try {
                        c(this._toDispose)
                    } finally {
                        this._toDispose.clear()
                    }
                }
                add(e) {
                    if (!e) return e;
                    if (e === this) throw new Error("Cannot register a disposable on itself!");
                    return h(e, this), this._isDisposed ? f.DISABLE_DISPOSED_WARNING || s.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack) : this._toDispose.add(e), e
                }
                delete(e) {
                    if (e) {
                        if (e === this) throw new Error("Cannot dispose a disposable on itself!");
                        this._toDispose.delete(e), e.dispose()
                    }
                }
                deleteAndLeak(e) {
                    e && this._toDispose.has(e) && (this._toDispose.delete(e), h(e, null))
                }
            }
            class g {
                static {
                    this.None = Object.freeze({
                        dispose() {}
                    })
                }
                constructor() {
                    this._store = new f, l(this), h(this._store, this)
                }
                dispose() {
                    u(this), this._store.dispose()
                }
                _register(e) {
                    if (e === this) throw new Error("Cannot register a disposable on itself!");
                    return this._store.add(e)
                }
            }
            class p {
                constructor() {
                    this._store = new Map, this._isDisposed = !1, l(this)
                }
                dispose() {
                    u(this), this._isDisposed = !0, this.clearAndDisposeAll()
                }
                clearAndDisposeAll() {
                    if (this._store.size) try {
                        c(this._store.values())
                    } finally {
                        this._store.clear()
                    }
                }
                has(e) {
                    return this._store.has(e)
                }
                get size() {
                    return this._store.size
                }
                get(e) {
                    return this._store.get(e)
                }
                set(e, t, n = !1) {
                    this._isDisposed && s.warn(new Error("Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!").stack), n || this._store.get(e) ? .dispose(), this._store.set(e, t)
                }
                deleteAndDispose(e) {
                    this._store.get(e) ? .dispose(), this._store.delete(e)
                }
                deleteAndLeak(e) {
                    const t = this._store.get(e);
                    return this._store.delete(e), t
                }
                keys() {
                    return this._store.keys()
                }
                values() {
                    return this._store.values()
                }[Symbol.iterator]() {
                    return this._store[Symbol.iterator]()
                }
            }
        },
        Ef4y: (e, t, n) => {
            var r, i;
            n.d(t, {
                ri: () => h,
                z6: () => u
            });
            class s {
                static {
                    this.defaultToKey = e => e.toString()
                }
                constructor(e, t) {
                    if (this[_a] = "ResourceMap", e instanceof s) this.map = new Map(e.map), this.toKey = t ? ? s.defaultToKey;
                    else if (function(e) {
                            return Array.isArray(e)
                        }(e)) {
                        this.map = new Map, this.toKey = t ? ? s.defaultToKey;
                        for (const [t, n] of e) this.set(t, n)
                    } else this.map = new Map, this.toKey = e ? ? s.defaultToKey
                }
                set(e, t) {
                    return this.map.set(this.toKey(e), new ResourceMapEntry(e, t)), this
                }
                get(e) {
                    return this.map.get(this.toKey(e)) ? .value
                }
                has(e) {
                    return this.map.has(this.toKey(e))
                }
                get size() {
                    return this.map.size
                }
                clear() {
                    this.map.clear()
                }
                delete(e) {
                    return this.map.delete(this.toKey(e))
                }
                forEach(e, t) {
                    void 0 !== t && e.bind(t);
                    for (const [t, n] of this.map) e(n.value, n.uri, this)
                }* values() {
                    for (const e of this.map.values()) yield e.value
                }* keys() {
                    for (const e of this.map.values()) yield e.uri
                }* entries() {
                    for (const e of this.map.values()) yield [e.uri, e.value]
                }*[(Symbol.toStringTag, Symbol.iterator)]() {
                    for (const [, e] of this.map) yield [e.uri, e.value]
                }
            }
            class o {
                constructor(e, t) {
                    this[_b] = "ResourceSet", e && "function" != typeof e ? (this._map = new s(t), e.forEach(this.add, this)) : this._map = new s(e)
                }
                get size() {
                    return this._map.size
                }
                add(e) {
                    return this._map.set(e, e), this
                }
                clear() {
                    this._map.clear()
                }
                delete(e) {
                    return this._map.delete(e)
                }
                forEach(e, t) {
                    this._map.forEach(((n, r) => e.call(t, r, r, this)))
                }
                has(e) {
                    return this._map.has(e)
                }
                entries() {
                    return this._map.entries()
                }
                keys() {
                    return this._map.keys()
                }
                values() {
                    return this._map.keys()
                }[(Symbol.toStringTag, Symbol.iterator)]() {
                    return this.keys()
                }
            }! function(e) {
                e[e.None = 0] = "None", e[e.AsOld = 1] = "AsOld", e[e.AsNew = 2] = "AsNew"
            }(i || (i = {}));
            class a {
                constructor() {
                    this[r] = "LinkedMap", this._map = new Map, this._head = void 0, this._tail = void 0, this._size = 0, this._state = 0
                }
                clear() {
                    this._map.clear(), this._head = void 0, this._tail = void 0, this._size = 0, this._state++
                }
                isEmpty() {
                    return !this._head && !this._tail
                }
                get size() {
                    return this._size
                }
                get first() {
                    return this._head ? .value
                }
                get last() {
                    return this._tail ? .value
                }
                has(e) {
                    return this._map.has(e)
                }
                get(e, t = i.None) {
                    const n = this._map.get(e);
                    if (n) return t !== i.None && this.touch(n, t), n.value
                }
                set(e, t, n = i.None) {
                    let r = this._map.get(e);
                    if (r) r.value = t, n !== i.None && this.touch(r, n);
                    else {
                        switch (r = {
                            key: e,
                            value: t,
                            next: void 0,
                            previous: void 0
                        }, n) {
                            case i.None:
                                this.addItemLast(r);
                                break;
                            case i.AsOld:
                                this.addItemFirst(r);
                                break;
                            case i.AsNew:
                            default:
                                this.addItemLast(r)
                        }
                        this._map.set(e, r), this._size++
                    }
                    return this
                }
                delete(e) {
                    return !!this.remove(e)
                }
                remove(e) {
                    const t = this._map.get(e);
                    if (t) return this._map.delete(e), this.removeItem(t), this._size--, t.value
                }
                shift() {
                    if (!this._head && !this._tail) return;
                    if (!this._head || !this._tail) throw new Error("Invalid list");
                    const e = this._head;
                    return this._map.delete(e.key), this.removeItem(e), this._size--, e.value
                }
                forEach(e, t) {
                    const n = this._state;
                    let r = this._head;
                    for (; r;) {
                        if (t ? e.bind(t)(r.value, r.key, this) : e(r.value, r.key, this), this._state !== n) throw new Error("LinkedMap got modified during iteration.");
                        r = r.next
                    }
                }
                keys() {
                    const e = this,
                        t = this._state;
                    let n = this._head;
                    const r = {
                        [Symbol.iterator]: () => r,
                        next() {
                            if (e._state !== t) throw new Error("LinkedMap got modified during iteration.");
                            if (n) {
                                const e = {
                                    value: n.key,
                                    done: !1
                                };
                                return n = n.next, e
                            }
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                    };
                    return r
                }
                values() {
                    const e = this,
                        t = this._state;
                    let n = this._head;
                    const r = {
                        [Symbol.iterator]: () => r,
                        next() {
                            if (e._state !== t) throw new Error("LinkedMap got modified during iteration.");
                            if (n) {
                                const e = {
                                    value: n.value,
                                    done: !1
                                };
                                return n = n.next, e
                            }
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                    };
                    return r
                }
                entries() {
                    const e = this,
                        t = this._state;
                    let n = this._head;
                    const r = {
                        [Symbol.iterator]: () => r,
                        next() {
                            if (e._state !== t) throw new Error("LinkedMap got modified during iteration.");
                            if (n) {
                                const e = {
                                    value: [n.key, n.value],
                                    done: !1
                                };
                                return n = n.next, e
                            }
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                    };
                    return r
                }[(r = Symbol.toStringTag, Symbol.iterator)]() {
                    return this.entries()
                }
                trimOld(e) {
                    if (e >= this.size) return;
                    if (0 === e) return void this.clear();
                    let t = this._head,
                        n = this.size;
                    for (; t && n > e;) this._map.delete(t.key), t = t.next, n--;
                    this._head = t, this._size = n, t && (t.previous = void 0), this._state++
                }
                trimNew(e) {
                    if (e >= this.size) return;
                    if (0 === e) return void this.clear();
                    let t = this._tail,
                        n = this.size;
                    for (; t && n > e;) this._map.delete(t.key), t = t.previous, n--;
                    this._tail = t, this._size = n, t && (t.next = void 0), this._state++
                }
                addItemFirst(e) {
                    if (this._head || this._tail) {
                        if (!this._head) throw new Error("Invalid list");
                        e.next = this._head, this._head.previous = e
                    } else this._tail = e;
                    this._head = e, this._state++
                }
                addItemLast(e) {
                    if (this._head || this._tail) {
                        if (!this._tail) throw new Error("Invalid list");
                        e.previous = this._tail, this._tail.next = e
                    } else this._head = e;
                    this._tail = e, this._state++
                }
                removeItem(e) {
                    if (e === this._head && e === this._tail) this._head = void 0, this._tail = void 0;
                    else if (e === this._head) {
                        if (!e.next) throw new Error("Invalid list");
                        e.next.previous = void 0, this._head = e.next
                    } else if (e === this._tail) {
                        if (!e.previous) throw new Error("Invalid list");
                        e.previous.next = void 0, this._tail = e.previous
                    } else {
                        const t = e.next,
                            n = e.previous;
                        if (!t || !n) throw new Error("Invalid list");
                        t.previous = n, n.next = t
                    }
                    e.next = void 0, e.previous = void 0, this._state++
                }
                touch(e, t) {
                    if (!this._head || !this._tail) throw new Error("Invalid list");
                    if (t === i.AsOld || t === i.AsNew)
                        if (t === i.AsOld) {
                            if (e === this._head) return;
                            const t = e.next,
                                n = e.previous;
                            e === this._tail ? (n.next = void 0, this._tail = n) : (t.previous = n, n.next = t), e.previous = void 0, e.next = this._head, this._head.previous = e, this._head = e, this._state++
                        } else if (t === i.AsNew) {
                        if (e === this._tail) return;
                        const t = e.next,
                            n = e.previous;
                        e === this._head ? (t.previous = void 0, this._head = t) : (t.previous = n, n.next = t), e.next = void 0, e.previous = this._tail, this._tail.next = e, this._tail = e, this._state++
                    }
                }
                toJSON() {
                    const e = [];
                    return this.forEach(((t, n) => {
                        e.push([n, t])
                    })), e
                }
                fromJSON(e) {
                    this.clear();
                    for (const [t, n] of e) this.set(t, n)
                }
            }
            class l extends a {
                constructor(e, t = 1) {
                    super(), this._limit = e, this._ratio = Math.min(Math.max(0, t), 1)
                }
                get limit() {
                    return this._limit
                }
                set limit(e) {
                    this._limit = e, this.checkTrim()
                }
                get ratio() {
                    return this._ratio
                }
                set ratio(e) {
                    this._ratio = Math.min(Math.max(0, e), 1), this.checkTrim()
                }
                get(e, t = i.AsNew) {
                    return super.get(e, t)
                }
                peek(e) {
                    return super.get(e, i.None)
                }
                set(e, t) {
                    return super.set(e, t, i.AsNew), this
                }
                checkTrim() {
                    this.size > this._limit && this.trim(Math.round(this._limit * this._ratio))
                }
            }
            class u extends l {
                constructor(e, t = 1) {
                    super(e, t)
                }
                trim(e) {
                    this.trimOld(e)
                }
                set(e, t) {
                    return super.set(e, t), this.checkTrim(), this
                }
            }
            class h {
                constructor() {
                    this.map = new Map
                }
                add(e, t) {
                    let n = this.map.get(e);
                    n || (n = new Set, this.map.set(e, n)), n.add(t)
                }
                delete(e, t) {
                    const n = this.map.get(e);
                    n && (n.delete(t), 0 === n.size && this.map.delete(e))
                }
                forEach(e, t) {
                    const n = this.map.get(e);
                    n && n.forEach(t)
                }
                get(e) {
                    return this.map.get(e) || new Set
                }
            }
        },
        "9HFd": (e, t, n) => {
            var r;
            n.d(t, {
                    m: () => r
                }),
                function(e) {
                    e[e.Uri = 1] = "Uri", e[e.Regexp = 2] = "Regexp", e[e.ScmResource = 3] = "ScmResource", e[e.ScmResourceGroup = 4] = "ScmResourceGroup", e[e.ScmProvider = 5] = "ScmProvider", e[e.CommentController = 6] = "CommentController", e[e.CommentThread = 7] = "CommentThread", e[e.CommentThreadInstance = 8] = "CommentThreadInstance", e[e.CommentThreadReply = 9] = "CommentThreadReply", e[e.CommentNode = 10] = "CommentNode", e[e.CommentThreadNode = 11] = "CommentThreadNode", e[e.TimelineActionContext = 12] = "TimelineActionContext", e[e.NotebookCellActionContext = 13] = "NotebookCellActionContext", e[e.NotebookActionContext = 14] = "NotebookActionContext", e[e.TerminalContext = 15] = "TerminalContext", e[e.TestItemContext = 16] = "TestItemContext", e[e.Date = 17] = "Date", e[e.TestMessageMenuArgs = 18] = "TestMessageMenuArgs"
                }(r || (r = {}))
        },
        "7eUP": (e, t, n) => {
            function r(e) {
                const t = [];
                for (const n of function(e) {
                        let t = [];
                        for (; Object.prototype !== e;) t = t.concat(Object.getOwnPropertyNames(e)), e = Object.getPrototypeOf(e);
                        return t
                    }(e)) "function" == typeof e[n] && t.push(n);
                return t
            }

            function i(e, t) {
                const n = e => function() {
                        const n = Array.prototype.slice.call(arguments, 0);
                        return t(e, n)
                    },
                    r = {};
                for (const t of e) r[t] = n(t);
                return r
            }
            n.d(t, {
                $E: () => r,
                IU: () => i
            }), n("K30K"), Object.prototype.hasOwnProperty
        },
        RRaN: (e, t, n) => {
            n.d(t, {
                KR: () => C,
                Ku: () => p
            });
            var r = n("67cB");
            const i = 46,
                s = 47,
                o = 92,
                a = 58;
            class l extends Error {
                constructor(e, t, n) {
                    let r;
                    "string" == typeof t && 0 === t.indexOf("not ") ? (r = "must not be", t = t.replace(/^not /, "")) : r = "must be";
                    const i = -1 !== e.indexOf(".") ? "property" : "argument";
                    let s = `The "${e}" ${i} ${r} of type ${t}`;
                    s += ". Received type " + typeof n, super(s), this.code = "ERR_INVALID_ARG_TYPE"
                }
            }

            function u(e, t) {
                if ("string" != typeof e) throw new l(t, "string", e)
            }
            const h = "win32" === r.Jv;

            function c(e) {
                return e === s || e === o
            }

            function d(e) {
                return e === s
            }

            function m(e) {
                return e >= 65 && e <= 90 || e >= 97 && e <= 122
            }

            function f(e, t, n, r) {
                let o = "",
                    a = 0,
                    l = -1,
                    u = 0,
                    h = 0;
                for (let c = 0; c <= e.length; ++c) {
                    if (c < e.length) h = e.charCodeAt(c);
                    else {
                        if (r(h)) break;
                        h = s
                    }
                    if (r(h)) {
                        if (l === c - 1 || 1 === u);
                        else if (2 === u) {
                            if (o.length < 2 || 2 !== a || o.charCodeAt(o.length - 1) !== i || o.charCodeAt(o.length - 2) !== i) {
                                if (o.length > 2) {
                                    const e = o.lastIndexOf(n); - 1 === e ? (o = "", a = 0) : (o = o.slice(0, e), a = o.length - 1 - o.lastIndexOf(n)), l = c, u = 0;
                                    continue
                                }
                                if (0 !== o.length) {
                                    o = "", a = 0, l = c, u = 0;
                                    continue
                                }
                            }
                            t && (o += o.length > 0 ? `${n}..` : "..", a = 2)
                        } else o.length > 0 ? o += `${n}${e.slice(l+1,c)}` : o = e.slice(l + 1, c), a = c - l - 1;
                        l = c, u = 0
                    } else h === i && -1 !== u ? ++u : u = -1
                }
                return o
            }

            function g(e, t) {
                ! function(e, t) {
                    if (null === e || "object" != typeof e) throw new l("pathObject", "Object", e)
                }(t);
                const n = t.dir || t.root,
                    r = t.base || `${t.name||""}${t.ext||""}`;
                return n ? n === t.root ? `${n}${r}` : `${n}${e}${r}` : r
            }
            const p = {
                    resolve(...e) {
                        let t = "",
                            n = "",
                            i = !1;
                        for (let s = e.length - 1; s >= -1; s--) {
                            let l;
                            if (s >= 0) {
                                if (l = e[s], u(l, "path"), 0 === l.length) continue
                            } else 0 === t.length ? l = (0, r.Vj)() : (l = r.OB[`=${t}`] || (0, r.Vj)(), (void 0 === l || l.slice(0, 2).toLowerCase() !== t.toLowerCase() && l.charCodeAt(2) === o) && (l = `${t}\\`));
                            const h = l.length;
                            let d = 0,
                                f = "",
                                g = !1;
                            const p = l.charCodeAt(0);
                            if (1 === h) c(p) && (d = 1, g = !0);
                            else if (c(p))
                                if (g = !0, c(l.charCodeAt(1))) {
                                    let e = 2,
                                        t = e;
                                    for (; e < h && !c(l.charCodeAt(e));) e++;
                                    if (e < h && e !== t) {
                                        const n = l.slice(t, e);
                                        for (t = e; e < h && c(l.charCodeAt(e));) e++;
                                        if (e < h && e !== t) {
                                            for (t = e; e < h && !c(l.charCodeAt(e));) e++;
                                            e !== h && e === t || (f = `\\\\${n}\\${l.slice(t,e)}`, d = e)
                                        }
                                    }
                                } else d = 1;
                            else m(p) && l.charCodeAt(1) === a && (f = l.slice(0, 2), d = 2, h > 2 && c(l.charCodeAt(2)) && (g = !0, d = 3));
                            if (f.length > 0)
                                if (t.length > 0) {
                                    if (f.toLowerCase() !== t.toLowerCase()) continue
                                } else t = f;
                            if (i) {
                                if (t.length > 0) break
                            } else if (n = `${l.slice(d)}\\${n}`, i = g, g && t.length > 0) break
                        }
                        return n = f(n, !i, "\\", c), i ? `${t}\\${n}` : `${t}${n}` || "."
                    },
                    normalize(e) {
                        u(e, "path");
                        const t = e.length;
                        if (0 === t) return ".";
                        let n, r = 0,
                            i = !1;
                        const s = e.charCodeAt(0);
                        if (1 === t) return d(s) ? "\\" : e;
                        if (c(s))
                            if (i = !0, c(e.charCodeAt(1))) {
                                let i = 2,
                                    s = i;
                                for (; i < t && !c(e.charCodeAt(i));) i++;
                                if (i < t && i !== s) {
                                    const o = e.slice(s, i);
                                    for (s = i; i < t && c(e.charCodeAt(i));) i++;
                                    if (i < t && i !== s) {
                                        for (s = i; i < t && !c(e.charCodeAt(i));) i++;
                                        if (i === t) return `\\\\${o}\\${e.slice(s)}\\`;
                                        i !== s && (n = `\\\\${o}\\${e.slice(s,i)}`, r = i)
                                    }
                                }
                            } else r = 1;
                        else m(s) && e.charCodeAt(1) === a && (n = e.slice(0, 2), r = 2, t > 2 && c(e.charCodeAt(2)) && (i = !0, r = 3));
                        let o = r < t ? f(e.slice(r), !i, "\\", c) : "";
                        return 0 !== o.length || i || (o = "."), o.length > 0 && c(e.charCodeAt(t - 1)) && (o += "\\"), void 0 === n ? i ? `\\${o}` : o : i ? `${n}\\${o}` : `${n}${o}`
                    },
                    isAbsolute(e) {
                        u(e, "path");
                        const t = e.length;
                        if (0 === t) return !1;
                        const n = e.charCodeAt(0);
                        return c(n) || t > 2 && m(n) && e.charCodeAt(1) === a && c(e.charCodeAt(2))
                    },
                    join(...e) {
                        if (0 === e.length) return ".";
                        let t, n;
                        for (let r = 0; r < e.length; ++r) {
                            const i = e[r];
                            u(i, "path"), i.length > 0 && (void 0 === t ? t = n = i : t += `\\${i}`)
                        }
                        if (void 0 === t) return ".";
                        let r = !0,
                            i = 0;
                        if ("string" == typeof n && c(n.charCodeAt(0))) {
                            ++i;
                            const e = n.length;
                            e > 1 && c(n.charCodeAt(1)) && (++i, e > 2 && (c(n.charCodeAt(2)) ? ++i : r = !1))
                        }
                        if (r) {
                            for (; i < t.length && c(t.charCodeAt(i));) i++;
                            i >= 2 && (t = `\\${t.slice(i)}`)
                        }
                        return p.normalize(t)
                    },
                    relative(e, t) {
                        if (u(e, "from"), u(t, "to"), e === t) return "";
                        const n = p.resolve(e),
                            r = p.resolve(t);
                        if (n === r) return "";
                        if ((e = n.toLowerCase()) === (t = r.toLowerCase())) return "";
                        let i = 0;
                        for (; i < e.length && e.charCodeAt(i) === o;) i++;
                        let s = e.length;
                        for (; s - 1 > i && e.charCodeAt(s - 1) === o;) s--;
                        const a = s - i;
                        let l = 0;
                        for (; l < t.length && t.charCodeAt(l) === o;) l++;
                        let h = t.length;
                        for (; h - 1 > l && t.charCodeAt(h - 1) === o;) h--;
                        const c = h - l,
                            d = a < c ? a : c;
                        let m = -1,
                            f = 0;
                        for (; f < d; f++) {
                            const n = e.charCodeAt(i + f);
                            if (n !== t.charCodeAt(l + f)) break;
                            n === o && (m = f)
                        }
                        if (f !== d) {
                            if (-1 === m) return r
                        } else {
                            if (c > d) {
                                if (t.charCodeAt(l + f) === o) return r.slice(l + f + 1);
                                if (2 === f) return r.slice(l + f)
                            }
                            a > d && (e.charCodeAt(i + f) === o ? m = f : 2 === f && (m = 3)), -1 === m && (m = 0)
                        }
                        let g = "";
                        for (f = i + m + 1; f <= s; ++f) f !== s && e.charCodeAt(f) !== o || (g += 0 === g.length ? ".." : "\\..");
                        return l += m, g.length > 0 ? `${g}${r.slice(l,h)}` : (r.charCodeAt(l) === o && ++l, r.slice(l, h))
                    },
                    toNamespacedPath(e) {
                        if ("string" != typeof e || 0 === e.length) return e;
                        const t = p.resolve(e);
                        if (t.length <= 2) return e;
                        if (t.charCodeAt(0) === o) {
                            if (t.charCodeAt(1) === o) {
                                const e = t.charCodeAt(2);
                                if (63 !== e && e !== i) return `\\\\?\\UNC\\${t.slice(2)}`
                            }
                        } else if (m(t.charCodeAt(0)) && t.charCodeAt(1) === a && t.charCodeAt(2) === o) return `\\\\?\\${t}`;
                        return e
                    },
                    dirname(e) {
                        u(e, "path");
                        const t = e.length;
                        if (0 === t) return ".";
                        let n = -1,
                            r = 0;
                        const i = e.charCodeAt(0);
                        if (1 === t) return c(i) ? e : ".";
                        if (c(i)) {
                            if (n = r = 1, c(e.charCodeAt(1))) {
                                let i = 2,
                                    s = i;
                                for (; i < t && !c(e.charCodeAt(i));) i++;
                                if (i < t && i !== s) {
                                    for (s = i; i < t && c(e.charCodeAt(i));) i++;
                                    if (i < t && i !== s) {
                                        for (s = i; i < t && !c(e.charCodeAt(i));) i++;
                                        if (i === t) return e;
                                        i !== s && (n = r = i + 1)
                                    }
                                }
                            }
                        } else m(i) && e.charCodeAt(1) === a && (n = t > 2 && c(e.charCodeAt(2)) ? 3 : 2, r = n);
                        let s = -1,
                            o = !0;
                        for (let n = t - 1; n >= r; --n)
                            if (c(e.charCodeAt(n))) {
                                if (!o) {
                                    s = n;
                                    break
                                }
                            } else o = !1;
                        if (-1 === s) {
                            if (-1 === n) return ".";
                            s = n
                        }
                        return e.slice(0, s)
                    },
                    basename(e, t) {
                        void 0 !== t && u(t, "ext"), u(e, "path");
                        let n, r = 0,
                            i = -1,
                            s = !0;
                        if (e.length >= 2 && m(e.charCodeAt(0)) && e.charCodeAt(1) === a && (r = 2), void 0 !== t && t.length > 0 && t.length <= e.length) {
                            if (t === e) return "";
                            let o = t.length - 1,
                                a = -1;
                            for (n = e.length - 1; n >= r; --n) {
                                const l = e.charCodeAt(n);
                                if (c(l)) {
                                    if (!s) {
                                        r = n + 1;
                                        break
                                    }
                                } else -1 === a && (s = !1, a = n + 1), o >= 0 && (l === t.charCodeAt(o) ? -1 == --o && (i = n) : (o = -1, i = a))
                            }
                            return r === i ? i = a : -1 === i && (i = e.length), e.slice(r, i)
                        }
                        for (n = e.length - 1; n >= r; --n)
                            if (c(e.charCodeAt(n))) {
                                if (!s) {
                                    r = n + 1;
                                    break
                                }
                            } else -1 === i && (s = !1, i = n + 1);
                        return -1 === i ? "" : e.slice(r, i)
                    },
                    extname(e) {
                        u(e, "path");
                        let t = 0,
                            n = -1,
                            r = 0,
                            s = -1,
                            o = !0,
                            l = 0;
                        e.length >= 2 && e.charCodeAt(1) === a && m(e.charCodeAt(0)) && (t = r = 2);
                        for (let a = e.length - 1; a >= t; --a) {
                            const t = e.charCodeAt(a);
                            if (c(t)) {
                                if (!o) {
                                    r = a + 1;
                                    break
                                }
                            } else -1 === s && (o = !1, s = a + 1), t === i ? -1 === n ? n = a : 1 !== l && (l = 1) : -1 !== n && (l = -1)
                        }
                        return -1 === n || -1 === s || 0 === l || 1 === l && n === s - 1 && n === r + 1 ? "" : e.slice(n, s)
                    },
                    format: g.bind(null, "\\"),
                    parse(e) {
                        u(e, "path");
                        const t = {
                            root: "",
                            dir: "",
                            base: "",
                            ext: "",
                            name: ""
                        };
                        if (0 === e.length) return t;
                        const n = e.length;
                        let r = 0,
                            s = e.charCodeAt(0);
                        if (1 === n) return c(s) ? (t.root = t.dir = e, t) : (t.base = t.name = e, t);
                        if (c(s)) {
                            if (r = 1, c(e.charCodeAt(1))) {
                                let t = 2,
                                    i = t;
                                for (; t < n && !c(e.charCodeAt(t));) t++;
                                if (t < n && t !== i) {
                                    for (i = t; t < n && c(e.charCodeAt(t));) t++;
                                    if (t < n && t !== i) {
                                        for (i = t; t < n && !c(e.charCodeAt(t));) t++;
                                        t === n ? r = t : t !== i && (r = t + 1)
                                    }
                                }
                            }
                        } else if (m(s) && e.charCodeAt(1) === a) {
                            if (n <= 2) return t.root = t.dir = e, t;
                            if (r = 2, c(e.charCodeAt(2))) {
                                if (3 === n) return t.root = t.dir = e, t;
                                r = 3
                            }
                        }
                        r > 0 && (t.root = e.slice(0, r));
                        let o = -1,
                            l = r,
                            h = -1,
                            d = !0,
                            f = e.length - 1,
                            g = 0;
                        for (; f >= r; --f)
                            if (s = e.charCodeAt(f), c(s)) {
                                if (!d) {
                                    l = f + 1;
                                    break
                                }
                            } else -1 === h && (d = !1, h = f + 1), s === i ? -1 === o ? o = f : 1 !== g && (g = 1) : -1 !== o && (g = -1);
                        return -1 !== h && (-1 === o || 0 === g || 1 === g && o === h - 1 && o === l + 1 ? t.base = t.name = e.slice(l, h) : (t.name = e.slice(l, o), t.base = e.slice(l, h), t.ext = e.slice(o, h))), t.dir = l > 0 && l !== r ? e.slice(0, l - 1) : t.root, t
                    },
                    sep: "\\",
                    delimiter: ";",
                    win32: null,
                    posix: null
                },
                _ = (() => {
                    if (h) {
                        const e = /\\/g;
                        return () => {
                            const t = (0, r.Vj)().replace(e, "/");
                            return t.slice(t.indexOf("/"))
                        }
                    }
                    return () => (0, r.Vj)()
                })(),
                C = {
                    resolve(...e) {
                        let t = "",
                            n = !1;
                        for (let r = e.length - 1; r >= -1 && !n; r--) {
                            const i = r >= 0 ? e[r] : _();
                            u(i, "path"), 0 !== i.length && (t = `${i}/${t}`, n = i.charCodeAt(0) === s)
                        }
                        return t = f(t, !n, "/", d), n ? `/${t}` : t.length > 0 ? t : "."
                    },
                    normalize(e) {
                        if (u(e, "path"), 0 === e.length) return ".";
                        const t = e.charCodeAt(0) === s,
                            n = e.charCodeAt(e.length - 1) === s;
                        return 0 === (e = f(e, !t, "/", d)).length ? t ? "/" : n ? "./" : "." : (n && (e += "/"), t ? `/${e}` : e)
                    },
                    isAbsolute: e => (u(e, "path"), e.length > 0 && e.charCodeAt(0) === s),
                    join(...e) {
                        if (0 === e.length) return ".";
                        let t;
                        for (let n = 0; n < e.length; ++n) {
                            const r = e[n];
                            u(r, "path"), r.length > 0 && (void 0 === t ? t = r : t += `/${r}`)
                        }
                        return void 0 === t ? "." : C.normalize(t)
                    },
                    relative(e, t) {
                        if (u(e, "from"), u(t, "to"), e === t) return "";
                        if ((e = C.resolve(e)) === (t = C.resolve(t))) return "";
                        const n = e.length,
                            r = n - 1,
                            i = t.length - 1,
                            o = r < i ? r : i;
                        let a = -1,
                            l = 0;
                        for (; l < o; l++) {
                            const n = e.charCodeAt(1 + l);
                            if (n !== t.charCodeAt(1 + l)) break;
                            n === s && (a = l)
                        }
                        if (l === o)
                            if (i > o) {
                                if (t.charCodeAt(1 + l) === s) return t.slice(1 + l + 1);
                                if (0 === l) return t.slice(1 + l)
                            } else r > o && (e.charCodeAt(1 + l) === s ? a = l : 0 === l && (a = 0));
                        let h = "";
                        for (l = 1 + a + 1; l <= n; ++l) l !== n && e.charCodeAt(l) !== s || (h += 0 === h.length ? ".." : "/..");
                        return `${h}${t.slice(1+a)}`
                    },
                    toNamespacedPath: e => e,
                    dirname(e) {
                        if (u(e, "path"), 0 === e.length) return ".";
                        const t = e.charCodeAt(0) === s;
                        let n = -1,
                            r = !0;
                        for (let t = e.length - 1; t >= 1; --t)
                            if (e.charCodeAt(t) === s) {
                                if (!r) {
                                    n = t;
                                    break
                                }
                            } else r = !1;
                        return -1 === n ? t ? "/" : "." : t && 1 === n ? "//" : e.slice(0, n)
                    },
                    basename(e, t) {
                        void 0 !== t && u(t, "ext"), u(e, "path");
                        let n, r = 0,
                            i = -1,
                            o = !0;
                        if (void 0 !== t && t.length > 0 && t.length <= e.length) {
                            if (t === e) return "";
                            let a = t.length - 1,
                                l = -1;
                            for (n = e.length - 1; n >= 0; --n) {
                                const u = e.charCodeAt(n);
                                if (u === s) {
                                    if (!o) {
                                        r = n + 1;
                                        break
                                    }
                                } else -1 === l && (o = !1, l = n + 1), a >= 0 && (u === t.charCodeAt(a) ? -1 == --a && (i = n) : (a = -1, i = l))
                            }
                            return r === i ? i = l : -1 === i && (i = e.length), e.slice(r, i)
                        }
                        for (n = e.length - 1; n >= 0; --n)
                            if (e.charCodeAt(n) === s) {
                                if (!o) {
                                    r = n + 1;
                                    break
                                }
                            } else -1 === i && (o = !1, i = n + 1);
                        return -1 === i ? "" : e.slice(r, i)
                    },
                    extname(e) {
                        u(e, "path");
                        let t = -1,
                            n = 0,
                            r = -1,
                            o = !0,
                            a = 0;
                        for (let l = e.length - 1; l >= 0; --l) {
                            const u = e.charCodeAt(l);
                            if (u !== s) - 1 === r && (o = !1, r = l + 1), u === i ? -1 === t ? t = l : 1 !== a && (a = 1) : -1 !== t && (a = -1);
                            else if (!o) {
                                n = l + 1;
                                break
                            }
                        }
                        return -1 === t || -1 === r || 0 === a || 1 === a && t === r - 1 && t === n + 1 ? "" : e.slice(t, r)
                    },
                    format: g.bind(null, "/"),
                    parse(e) {
                        u(e, "path");
                        const t = {
                            root: "",
                            dir: "",
                            base: "",
                            ext: "",
                            name: ""
                        };
                        if (0 === e.length) return t;
                        const n = e.charCodeAt(0) === s;
                        let r;
                        n ? (t.root = "/", r = 1) : r = 0;
                        let o = -1,
                            a = 0,
                            l = -1,
                            h = !0,
                            c = e.length - 1,
                            d = 0;
                        for (; c >= r; --c) {
                            const t = e.charCodeAt(c);
                            if (t !== s) - 1 === l && (h = !1, l = c + 1), t === i ? -1 === o ? o = c : 1 !== d && (d = 1) : -1 !== o && (d = -1);
                            else if (!h) {
                                a = c + 1;
                                break
                            }
                        }
                        if (-1 !== l) {
                            const r = 0 === a && n ? 1 : a; - 1 === o || 0 === d || 1 === d && o === l - 1 && o === a + 1 ? t.base = t.name = e.slice(r, l) : (t.name = e.slice(r, o), t.base = e.slice(r, l), t.ext = e.slice(o, l))
                        }
                        return a > 0 ? t.dir = e.slice(0, a - 1) : n && (t.dir = "/"), t
                    },
                    sep: "/",
                    delimiter: ":",
                    win32: null,
                    posix: null
                };
            C.win32 = p.win32 = p, C.posix = p.posix = C, h ? p.normalize : C.normalize, h ? p.isAbsolute : C.isAbsolute, h ? p.join : C.join, h ? p.resolve : C.resolve, h ? p.relative : C.relative, h ? p.dirname : C.dirname, h ? p.basename : C.basename, h ? p.extname : C.extname, h ? p.parse : C.parse, h ? p.sep : C.sep, h ? p.delimiter : C.delimiter
        },
        pLPy: (e, t, n) => {
            n.d(t, {
                ED: () => L,
                dz: () => b
            });
            var r = n("yFKF"),
                i = n("8oxB"),
                s = n("ziTh");
            const o = "en";
            let a, l, u = !1,
                h = !1,
                c = !1,
                d = !1,
                m = !1,
                f = !1,
                g = !1,
                p = !1,
                _ = !1,
                C = o,
                y = null,
                A = null;
            const E = globalThis;
            let S;
            void 0 !== E.vscode && void 0 !== E.vscode.process ? S = E.vscode.process : void 0 !== i && "string" == typeof i ? .versions ? .node && (S = i);
            const w = "string" == typeof S ? .versions ? .electron && "renderer" === S ? .type;
            if ("object" == typeof S) {
                u = "win32" === S.platform, h = "darwin" === S.platform, c = "linux" === S.platform, d = c && !!S.env.SNAP && !!S.env.SNAP_REVISION, p = !!S.env.CI || !!S.env.BUILD_ARTIFACTSTAGINGDIRECTORY, a = o, C = o;
                const e = S.env.VSCODE_NLS_CONFIG;
                if (e) try {
                    const t = JSON.parse(e),
                        n = t.availableLanguages["*"];
                    a = t.locale, y = t.osLocale, C = n || o, A = t._translationsConfigFile
                } catch (e) {}
                m = !0
            } else "object" != typeof navigator || w ? s.error("Unable to resolve platform.") : (l = navigator.userAgent, u = l.indexOf("Windows") >= 0, h = l.indexOf("Macintosh") >= 0, g = (l.indexOf("Macintosh") >= 0 || l.indexOf("iPad") >= 0 || l.indexOf("iPhone") >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0, c = l.indexOf("Linux") >= 0, _ = l ? .indexOf("Mobi") >= 0, f = !0, a = (0, r.aj)() || o, C = a, y = navigator.language);
            var N;
            ! function(e) {
                e[e.Web = 0] = "Web", e[e.Mac = 1] = "Mac", e[e.Linux = 2] = "Linux", e[e.Windows = 3] = "Windows"
            }(N || (N = {}));
            let v = N.Web;
            h ? v = N.Mac : u ? v = N.Windows : c && (v = N.Linux);
            const L = u,
                b = h,
                M = (f && "function" == typeof E.importScripts && E.origin, l),
                K = C;
            var F;
            ! function(e) {
                e.value = function() {
                    return K
                }, e.isDefaultVariant = function() {
                    return 2 === K.length ? "en" === K : K.length >= 3 && "e" === K[0] && "n" === K[1] && "-" === K[2]
                }, e.isDefault = function() {
                    return "en" === K
                }
            }(F || (F = {}));
            const k = "function" == typeof E.postMessage && !E.importScripts;
            var T;
            (() => {
                if (k) {
                    const e = [];
                    E.addEventListener("message", (t => {
                        if (t.data && t.data.vscodeScheduleAsyncWork)
                            for (let n = 0, r = e.length; n < r; n++) {
                                const r = e[n];
                                if (r.id === t.data.vscodeScheduleAsyncWork) return e.splice(n, 1), void r.callback()
                            }
                    }));
                    let t = 0
                }
            })(),
            function(e) {
                e[e.Windows = 1] = "Windows", e[e.Macintosh = 2] = "Macintosh", e[e.Linux = 3] = "Linux"
            }(T || (T = {})), h || g ? T.Macintosh : u ? T.Windows : T.Linux;
            const R = !!(M && M.indexOf("Chrome") >= 0);
            M && M.indexOf("Firefox"), !R && M && M.indexOf("Safari"), M && M.indexOf("Edg/"), M && M.indexOf("Android")
        },
        "67cB": (e, t, n) => {
            n.d(t, {
                Jv: () => u,
                OB: () => l,
                Vj: () => a
            });
            var r = n("pLPy"),
                i = n("8oxB");
            let s;
            const o = globalThis.vscode;
            if (void 0 !== o && void 0 !== o.process) {
                const e = o.process;
                s = {
                    get platform() {
                        return e.platform
                    },
                    get arch() {
                        return e.arch
                    },
                    get env() {
                        return e.env
                    },
                    cwd: () => e.cwd()
                }
            } else s = void 0 !== i && "string" == typeof i ? .versions ? .node ? {
                get platform() {
                    return i.platform
                },
                get arch() {
                    return i.arch
                },
                get env() {
                    return {
                        NODE_ENV: "production",
                        DEPLOYMENT_NODE: void 0,
                        INTERNAL_PRIVATE: void 0,
                        PROD_LOCAL_BUILD: void 0,
                        HOT_RELOAD: !1,
                        BACKEND_ENDPOINT: "http://localhost:8090/",
                        CDN: "https://hrcdn.net/fcore/assets"
                    }
                },
                cwd: () => ({
                    NODE_ENV: "production",
                    DEPLOYMENT_NODE: void 0,
                    INTERNAL_PRIVATE: void 0,
                    PROD_LOCAL_BUILD: void 0,
                    HOT_RELOAD: !1,
                    BACKEND_ENDPOINT: "http://localhost:8090/",
                    CDN: "https://hrcdn.net/fcore/assets"
                }.VSCODE_CWD || i.cwd())
            } : {
                get platform() {
                    return r.ED ? "win32" : r.dz ? "darwin" : "linux"
                },
                get arch() {},
                get env() {
                    return {}
                },
                cwd: () => "/"
            };
            const a = s.cwd,
                l = s.env,
                u = s.platform;
            s.arch
        },
        p044: (e, t, n) => {
            n.d(t, {
                $i: () => f,
                LC: () => l,
                ZG: () => c,
                ZH: () => d,
                ZK: () => C,
                df: () => h,
                ec: () => o,
                ow: () => u,
                uq: () => a,
                vU: () => y
            });
            var r = n("wqGW"),
                i = n("U7Xe"),
                s = n("8HR7");

            function o(e) {
                return e.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g, "\\$&")
            }

            function a(e) {
                return e.split(/\r\n|\r|\n/)
            }

            function l(e) {
                for (let t = 0, n = e.length; t < n; t++) {
                    const n = e.charCodeAt(t);
                    if (n !== i.m.Space && n !== i.m.Tab) return t
                }
                return -1
            }

            function u(e, t = e.length - 1) {
                for (let n = t; n >= 0; n--) {
                    const t = e.charCodeAt(n);
                    if (t !== i.m.Space && t !== i.m.Tab) return n
                }
                return -1
            }

            function h(e) {
                return e >= i.m.A && e <= i.m.Z
            }

            function c(e) {
                return 55296 <= e && e <= 56319
            }

            function d(e, t, n) {
                const r = e.charCodeAt(n);
                if (c(r) && n + 1 < t) {
                    const t = e.charCodeAt(n + 1);
                    if (function(e) {
                            return 56320 <= e && e <= 57343
                        }(t)) return t - 56320 + (r - 55296 << 10) + 65536
                }
                return r
            }
            n("MM2S");
            const m = /^[\t\n\r\x20-\x7E]*$/;

            function f(e) {
                return m.test(e)
            }
            var g, p;
            String.fromCharCode(i.m.UTF8_BOM),
                function(e) {
                    e[e.Other = 0] = "Other", e[e.Prepend = 1] = "Prepend", e[e.CR = 2] = "CR", e[e.LF = 3] = "LF", e[e.Control = 4] = "Control", e[e.Extend = 5] = "Extend", e[e.Regional_Indicator = 6] = "Regional_Indicator", e[e.SpacingMark = 7] = "SpacingMark", e[e.L = 8] = "L", e[e.V = 9] = "V", e[e.T = 10] = "T", e[e.LV = 11] = "LV", e[e.LVT = 12] = "LVT", e[e.ZWJ = 13] = "ZWJ", e[e.Extended_Pictographic = 14] = "Extended_Pictographic"
                }(g || (g = {}));
            class _ {
                static {
                    this._INSTANCE = null
                }
                static getInstance() {
                    return _._INSTANCE || (_._INSTANCE = new _), _._INSTANCE
                }
                constructor() {
                    this._data = JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")
                }
                getGraphemeBreakType(e) {
                    if (e < 32) return e === CharCode.LineFeed ? g.LF : e === CharCode.CarriageReturn ? g.CR : g.Control;
                    if (e < 127) return g.Other;
                    const t = this._data,
                        n = t.length / 3;
                    for (; 1 <= n;)
                        if (e < t[3]);
                        else if (!(e > t[4])) return t[5];
                    return g.Other
                }
            }! function(e) {
                e[e.zwj = 8205] = "zwj", e[e.emojiVariantSelector = 65039] = "emojiVariantSelector", e[e.enclosingKeyCap = 8419] = "enclosingKeyCap"
            }(p || (p = {}));
            class C {
                static {
                    this.ambiguousCharacterData = new s.o((() => JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}')))
                }
                static {
                    this.cache = new r.t2({
                        getCacheKey: JSON.stringify
                    }, (e => {
                        function t(e) {
                            const t = new Map;
                            for (let n = 0; n < e.length; n += 2) t.set(e[n], e[n + 1]);
                            return t
                        }

                        function n(e, t) {
                            if (!e) return t;
                            const n = new Map;
                            for (const [r, i] of e) t.has(r) && n.set(r, i);
                            return n
                        }
                        const r = this.ambiguousCharacterData.value;
                        let i, s = e.filter((e => !e.startsWith("_") && e in r));
                        0 === s.length && (s = ["_default"]);
                        for (const e of s) i = n(i, t(r[e]));
                        const o = function(e, t) {
                            const n = new Map(e);
                            for (const [e, r] of t) n.set(e, r);
                            return n
                        }(t(r._common), i);
                        return new C(o)
                    }))
                }
                static getInstance(e) {
                    return C.cache.get(Array.from(e))
                }
                static {
                    this._locales = new s.o((() => Object.keys(C.ambiguousCharacterData.value).filter((e => !e.startsWith("_")))))
                }
                static getLocales() {
                    return C._locales.value
                }
                constructor(e) {
                    this.confusableDictionary = e
                }
                isAmbiguous(e) {
                    return this.confusableDictionary.has(e)
                }
                containsAmbiguousCharacter(e) {
                    for (let t = 0; t < e.length; t++) {
                        const n = e.codePointAt(t);
                        if ("number" == typeof n && this.isAmbiguous(n)) return !0
                    }
                    return !1
                }
                getPrimaryConfusable(e) {
                    return this.confusableDictionary.get(e)
                }
                getConfusableCodePoints() {
                    return new Set(this.confusableDictionary.keys())
                }
            }
            class y {
                static getRawData() {
                    return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")
                }
                static {
                    this._data = void 0
                }
                static getData() {
                    return this._data || (this._data = new Set(y.getRawData())), this._data
                }
                static isInvisibleCharacter(e) {
                    return y.getData().has(e)
                }
                static containsInvisibleCharacter(e) {
                    for (let t = 0; t < e.length; t++) {
                        const n = e.codePointAt(t);
                        if ("number" == typeof n && y.isInvisibleCharacter(n)) return !0
                    }
                    return !1
                }
                static get codePoints() {
                    return y.getData()
                }
            }
        },
        K30K: (e, t, n) => {
            function r(e) {
                return "string" == typeof e
            }
            n.d(t, {
                HD: () => r
            }), Object.prototype.hasOwnProperty
        },
        naIR: (e, t, n) => {
            n.d(t, {
                ov: () => m
            });
            var r = n("U7Xe"),
                i = n("9HFd"),
                s = n("RRaN"),
                o = n("pLPy");
            const a = /^\w[\w\d+.-]*$/,
                l = /^\//,
                u = /^\/\//,
                h = "",
                c = "/",
                d = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
            class m {
                static isUri(e) {
                    return e instanceof m || !!e && "string" == typeof e.authority && "string" == typeof e.fragment && "string" == typeof e.path && "string" == typeof e.query && "string" == typeof e.scheme && "string" == typeof e.fsPath && "function" == typeof e.with && "function" == typeof e.toString
                }
                constructor(e, t, n, r, i, s = !1) {
                    "object" == typeof e ? (this.scheme = e.scheme || h, this.authority = e.authority || h, this.path = e.path || h, this.query = e.query || h, this.fragment = e.fragment || h) : (this.scheme = function(e, t) {
                        return e || t ? e : "file"
                    }(e, s), this.authority = t || h, this.path = function(e, t) {
                        switch (e) {
                            case "https":
                            case "http":
                            case "file":
                                t ? t[0] !== c && (t = c + t) : t = c
                        }
                        return t
                    }(this.scheme, n || h), this.query = r || h, this.fragment = i || h, function(e, t) {
                        if (!e.scheme && t) throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`);
                        if (e.scheme && !a.test(e.scheme)) throw new Error("[UriError]: Scheme contains illegal characters.");
                        if (e.path)
                            if (e.authority) {
                                if (!l.test(e.path)) throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')
                            } else if (u.test(e.path)) throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')
                    }(this, s))
                }
                get fsPath() {
                    return y(this, !1)
                }
                with(e) {
                    if (!e) return this;
                    let {
                        scheme: t,
                        authority: n,
                        path: r,
                        query: i,
                        fragment: s
                    } = e;
                    return void 0 === t ? t = this.scheme : null === t && (t = h), void 0 === n ? n = this.authority : null === n && (n = h), void 0 === r ? r = this.path : null === r && (r = h), void 0 === i ? i = this.query : null === i && (i = h), void 0 === s ? s = this.fragment : null === s && (s = h), t === this.scheme && n === this.authority && r === this.path && i === this.query && s === this.fragment ? this : new g(t, n, r, i, s)
                }
                static parse(e, t = !1) {
                    const n = d.exec(e);
                    return n ? new g(n[2] || h, w(n[4] || h), w(n[5] || h), w(n[7] || h), w(n[9] || h), t) : new g(h, h, h, h, h)
                }
                static file(e) {
                    let t = h;
                    if (o.ED && (e = e.replace(/\\/g, c)), e[0] === c && e[1] === c) {
                        const n = e.indexOf(c, 2); - 1 === n ? (t = e.substring(2), e = c) : (t = e.substring(2, n), e = e.substring(n) || c)
                    }
                    return new g("file", t, e, h, h)
                }
                static from(e, t) {
                    return new g(e.scheme, e.authority, e.path, e.query, e.fragment, t)
                }
                static joinPath(e, ...t) {
                    if (!e.path) throw new Error("[UriError]: cannot call joinPath on URI without path");
                    let n;
                    return n = o.ED && "file" === e.scheme ? m.file(s.Ku.join(y(e, !0), ...t)).path : s.KR.join(e.path, ...t), e.with({
                        path: n
                    })
                }
                toString(e = !1) {
                    return A(this, e)
                }
                toJSON() {
                    return this
                }
                static revive(e) {
                    if (e) {
                        if (e instanceof m) return e; {
                            const t = new g(e);
                            return t._formatted = e.external ? ? null, t._fsPath = e._sep === f ? e.fsPath ? ? null : null, t
                        }
                    }
                    return e
                }
            }
            const f = o.ED ? 1 : void 0;
            class g extends m {
                constructor() {
                    super(...arguments), this._formatted = null, this._fsPath = null
                }
                get fsPath() {
                    return this._fsPath || (this._fsPath = y(this, !1)), this._fsPath
                }
                toString(e = !1) {
                    return e ? A(this, !0) : (this._formatted || (this._formatted = A(this, !1)), this._formatted)
                }
                toJSON() {
                    const e = {
                        $mid: i.m.Uri
                    };
                    return this._fsPath && (e.fsPath = this._fsPath, e._sep = f), this._formatted && (e.external = this._formatted), this.path && (e.path = this.path), this.scheme && (e.scheme = this.scheme), this.authority && (e.authority = this.authority), this.query && (e.query = this.query), this.fragment && (e.fragment = this.fragment), e
                }
            }
            const p = {
                [r.m.Colon]: "%3A",
                [r.m.Slash]: "%2F",
                [r.m.QuestionMark]: "%3F",
                [r.m.Hash]: "%23",
                [r.m.OpenSquareBracket]: "%5B",
                [r.m.CloseSquareBracket]: "%5D",
                [r.m.AtSign]: "%40",
                [r.m.ExclamationMark]: "%21",
                [r.m.DollarSign]: "%24",
                [r.m.Ampersand]: "%26",
                [r.m.SingleQuote]: "%27",
                [r.m.OpenParen]: "%28",
                [r.m.CloseParen]: "%29",
                [r.m.Asterisk]: "%2A",
                [r.m.Plus]: "%2B",
                [r.m.Comma]: "%2C",
                [r.m.Semicolon]: "%3B",
                [r.m.Equals]: "%3D",
                [r.m.Space]: "%20"
            };

            function _(e, t, n) {
                let i, s = -1;
                for (let o = 0; o < e.length; o++) {
                    const a = e.charCodeAt(o);
                    if (a >= r.m.a && a <= r.m.z || a >= r.m.A && a <= r.m.Z || a >= r.m.Digit0 && a <= r.m.Digit9 || a === r.m.Dash || a === r.m.Period || a === r.m.Underline || a === r.m.Tilde || t && a === r.m.Slash || n && a === r.m.OpenSquareBracket || n && a === r.m.CloseSquareBracket || n && a === r.m.Colon) - 1 !== s && (i += encodeURIComponent(e.substring(s, o)), s = -1), void 0 !== i && (i += e.charAt(o));
                    else {
                        void 0 === i && (i = e.substr(0, o));
                        const t = p[a];
                        void 0 !== t ? (-1 !== s && (i += encodeURIComponent(e.substring(s, o)), s = -1), i += t) : -1 === s && (s = o)
                    }
                }
                return -1 !== s && (i += encodeURIComponent(e.substring(s))), void 0 !== i ? i : e
            }

            function C(e) {
                let t;
                for (let n = 0; n < e.length; n++) {
                    const i = e.charCodeAt(n);
                    i === r.m.Hash || i === r.m.QuestionMark ? (void 0 === t && (t = e.substr(0, n)), t += p[i]) : void 0 !== t && (t += e[n])
                }
                return void 0 !== t ? t : e
            }

            function y(e, t) {
                let n;
                return n = e.authority && e.path.length > 1 && "file" === e.scheme ? `//${e.authority}${e.path}` : e.path.charCodeAt(0) === r.m.Slash && (e.path.charCodeAt(1) >= r.m.A && e.path.charCodeAt(1) <= r.m.Z || e.path.charCodeAt(1) >= r.m.a && e.path.charCodeAt(1) <= r.m.z) && e.path.charCodeAt(2) === r.m.Colon ? t ? e.path.substr(1) : e.path[1].toLowerCase() + e.path.substr(2) : e.path, o.ED && (n = n.replace(/\//g, "\\")), n
            }

            function A(e, t) {
                const n = t ? C : _;
                let i = "",
                    {
                        scheme: s,
                        authority: o,
                        path: a,
                        query: l,
                        fragment: u
                    } = e;
                if (s && (i += s, i += ":"), (o || "file" === s) && (i += c, i += c), o) {
                    let e = o.indexOf("@");
                    if (-1 !== e) {
                        const t = o.substr(0, e);
                        o = o.substr(e + 1), e = t.lastIndexOf(":"), -1 === e ? i += n(t, !1, !1) : (i += n(t.substr(0, e), !1, !1), i += ":", i += n(t.substr(e + 1), !1, !0)), i += "@"
                    }
                    o = o.toLowerCase(), e = o.lastIndexOf(":"), -1 === e ? i += n(o, !1, !0) : (i += n(o.substr(0, e), !1, !0), i += o.substr(e))
                }
                if (a) {
                    if (a.length >= 3 && a.charCodeAt(0) === r.m.Slash && a.charCodeAt(2) === r.m.Colon) {
                        const e = a.charCodeAt(1);
                        e >= r.m.A && e <= r.m.Z && (a = `/${String.fromCharCode(e+32)}:${a.substr(3)}`)
                    } else if (a.length >= 2 && a.charCodeAt(1) === r.m.Colon) {
                        const e = a.charCodeAt(0);
                        e >= r.m.A && e <= r.m.Z && (a = `${String.fromCharCode(e+32)}:${a.substr(2)}`)
                    }
                    i += n(a, !0, !1)
                }
                return l && (i += "?", i += n(l, !1, !1)), u && (i += "#", i += t ? u : _(u, !1, !1)), i
            }

            function E(e) {
                try {
                    return decodeURIComponent(e)
                } catch {
                    return e.length > 3 ? e.substr(0, 3) + E(e.substr(3)) : e
                }
            }
            const S = /(%[0-9A-Za-z][0-9A-Za-z])+/g;

            function w(e) {
                return e.match(S) ? e.replace(S, (e => E(e))) : e
            }
        },
        YICr: (e, t, n) => {
            n.d(t, {
                _i: () => _
            });
            var r = n("PUdK"),
                i = n("7icl"),
                s = (n("RVdl"), n("7eUP")),
                o = (n("pLPy"), n("p044")),
                a = n("ziTh");
            var l;
            ! function(e) {
                e[e.Request = 0] = "Request", e[e.Reply = 1] = "Reply", e[e.SubscribeEvent = 2] = "SubscribeEvent", e[e.Event = 3] = "Event", e[e.UnsubscribeEvent = 4] = "UnsubscribeEvent"
            }(l || (l = {}));
            class u {
                constructor(e, t, n, r) {
                    this.vsWorker = e, this.req = t, this.method = n, this.args = r, this.type = l.Request
                }
            }
            class h {
                constructor(e, t, n, r) {
                    this.vsWorker = e, this.seq = t, this.res = n, this.err = r, this.type = l.Reply
                }
            }
            class c {
                constructor(e, t, n, r) {
                    this.vsWorker = e, this.req = t, this.eventName = n, this.arg = r, this.type = l.SubscribeEvent
                }
            }
            class d {
                constructor(e, t, n) {
                    this.vsWorker = e, this.req = t, this.event = n, this.type = l.Event
                }
            }
            class m {
                constructor(e, t) {
                    this.vsWorker = e, this.req = t, this.type = l.UnsubscribeEvent
                }
            }
            class f {
                constructor(e) {
                    this._workerId = -1, this._handler = e, this._lastSentReq = 0, this._pendingReplies = Object.create(null), this._pendingEmitters = new Map, this._pendingEvents = new Map
                }
                setWorkerId(e) {
                    this._workerId = e
                }
                sendMessage(e, t) {
                    const n = String(++this._lastSentReq);
                    return new Promise(((r, i) => {
                        this._pendingReplies[n] = {
                            resolve: r,
                            reject: i
                        }, this._send(new u(this._workerId, n, e, t))
                    }))
                }
                listen(e, t) {
                    let n = null;
                    const r = new i.Q5({
                        onWillAddFirstListener: () => {
                            n = String(++this._lastSentReq), this._pendingEmitters.set(n, r), this._send(new c(this._workerId, n, e, t))
                        },
                        onDidRemoveLastListener: () => {
                            this._pendingEmitters.delete(n), this._send(new m(this._workerId, n)), n = null
                        }
                    });
                    return r.event
                }
                handleMessage(e) {
                    e && e.vsWorker && (-1 !== this._workerId && e.vsWorker !== this._workerId || this._handleMessage(e))
                }
                _handleMessage(e) {
                    switch (e.type) {
                        case l.Reply:
                            return this._handleReplyMessage(e);
                        case l.Request:
                            return this._handleRequestMessage(e);
                        case l.SubscribeEvent:
                            return this._handleSubscribeEventMessage(e);
                        case l.Event:
                            return this._handleEventMessage(e);
                        case l.UnsubscribeEvent:
                            return this._handleUnsubscribeEventMessage(e)
                    }
                }
                _handleReplyMessage(e) {
                    if (!this._pendingReplies[e.seq]) return void a.warn("Got reply to unknown seq");
                    const t = this._pendingReplies[e.seq];
                    if (delete this._pendingReplies[e.seq], e.err) {
                        let n = e.err;
                        return e.err.$isError && (n = new Error, n.name = e.err.name, n.message = e.err.message, n.stack = e.err.stack), void t.reject(n)
                    }
                    t.resolve(e.res)
                }
                _handleRequestMessage(e) {
                    const t = e.req;
                    this._handler.handleMessage(e.method, e.args).then((e => {
                        this._send(new h(this._workerId, t, e, void 0))
                    }), (e => {
                        e.detail instanceof Error && (e.detail = (0, r.ri)(e.detail)), this._send(new h(this._workerId, t, void 0, (0, r.ri)(e)))
                    }))
                }
                _handleSubscribeEventMessage(e) {
                    const t = e.req,
                        n = this._handler.handleEvent(e.eventName, e.arg)((e => {
                            this._send(new d(this._workerId, t, e))
                        }));
                    this._pendingEvents.set(t, n)
                }
                _handleEventMessage(e) {
                    this._pendingEmitters.has(e.req) ? this._pendingEmitters.get(e.req).fire(e.event) : a.warn("Got event for unknown req")
                }
                _handleUnsubscribeEventMessage(e) {
                    this._pendingEvents.has(e.req) ? (this._pendingEvents.get(e.req).dispose(), this._pendingEvents.delete(e.req)) : a.warn("Got unsubscribe for unknown req")
                }
                _send(e) {
                    const t = [];
                    if (e.type === l.Request)
                        for (let n = 0; n < e.args.length; n++) e.args[n] instanceof ArrayBuffer && t.push(e.args[n]);
                    else e.type === l.Reply && e.res instanceof ArrayBuffer && t.push(e.res);
                    this._handler.sendMessage(e, t)
                }
            }

            function g(e) {
                return "o" === e[0] && "n" === e[1] && (0, o.df)(e.charCodeAt(2))
            }

            function p(e) {
                return /^onDynamic/.test(e) && (0, o.df)(e.charCodeAt(9))
            }
            class _ {
                constructor(e, t) {
                    this._requestHandlerFactory = t, this._requestHandler = null, this._protocol = new f({
                        sendMessage: (t, n) => {
                            e(t, n)
                        },
                        handleMessage: (e, t) => this._handleMessage(e, t),
                        handleEvent: (e, t) => this._handleEvent(e, t)
                    })
                }
                onmessage(e) {
                    this._protocol.handleMessage(e)
                }
                _handleMessage(e, t) {
                    if ("$initialize" === e) return this.initialize(t[0], t[1], t[2], t[3]);
                    if (!this._requestHandler || "function" != typeof this._requestHandler[e]) return Promise.reject(new Error("Missing requestHandler or method: " + e));
                    try {
                        return Promise.resolve(this._requestHandler[e].apply(this._requestHandler, t))
                    } catch (e) {
                        return Promise.reject(e)
                    }
                }
                _handleEvent(e, t) {
                    if (!this._requestHandler) throw new Error("Missing requestHandler");
                    if (p(e)) {
                        const n = this._requestHandler[e].call(this._requestHandler, t);
                        if ("function" != typeof n) throw new Error(`Missing dynamic event ${e} on request handler.`);
                        return n
                    }
                    if (g(e)) {
                        const t = this._requestHandler[e];
                        if ("function" != typeof t) throw new Error(`Missing event ${e} on request handler.`);
                        return t
                    }
                    throw new Error(`Malformed event name ${e}`)
                }
                initialize(e, t, n, r) {
                    this._protocol.setWorkerId(e);
                    const i = function(e, t, n) {
                        const r = e => function() {
                                const n = Array.prototype.slice.call(arguments, 0);
                                return t(e, n)
                            },
                            i = e => function(t) {
                                return n(e, t)
                            },
                            s = {};
                        for (const t of e) p(t) ? s[t] = i(t) : g(t) ? s[t] = n(t, void 0) : s[t] = r(t);
                        return s
                    }(r, ((e, t) => this._protocol.sendMessage(e, t)), ((e, t) => this._protocol.listen(e, t)));
                    return this._requestHandlerFactory ? (this._requestHandler = this._requestHandlerFactory(i), Promise.resolve((0, s.$E)(this._requestHandler))) : (t && (void 0 !== t.baseUrl && delete t.baseUrl, void 0 !== t.paths && void 0 !== t.paths.vs && delete t.paths.vs, void 0 !== t.trustedTypesPolicy && delete t.trustedTypesPolicy, t.catchError = !0, globalThis.require.config(t)), new Promise(((e, t) => {
                        (void 0)([n], (n => {
                            this._requestHandler = n.create(i), this._requestHandler ? e((0, s.$E)(this._requestHandler)) : t(new Error("No RequestHandler!"))
                        }), t)
                    })))
                }
            }
        },
        j4W2: (e, t, n) => {
            n.d(t, {
                q: () => i
            });
            var r = n("PUdK");
            class i {
                static addRange(e, t) {
                    let n = 0;
                    for (; n < t.length && t[n].endExclusive < e.start;) n++;
                    let r = n;
                    for (; r < t.length && t[r].start <= e.endExclusive;) r++;
                    if (n === r) t.splice(n, 0, e);
                    else {
                        const s = Math.min(e.start, t[n].start),
                            o = Math.max(e.endExclusive, t[r - 1].endExclusive);
                        t.splice(n, r - n, new i(s, o))
                    }
                }
                static tryCreate(e, t) {
                    if (!(e > t)) return new i(e, t)
                }
                static ofLength(e) {
                    return new i(0, e)
                }
                static ofStartAndLength(e, t) {
                    return new i(e, e + t)
                }
                constructor(e, t) {
                    if (this.start = e, this.endExclusive = t, e > t) throw new r.he(`Invalid range: ${this.toString()}`)
                }
                get isEmpty() {
                    return this.start === this.endExclusive
                }
                delta(e) {
                    return new i(this.start + e, this.endExclusive + e)
                }
                deltaStart(e) {
                    return new i(this.start + e, this.endExclusive)
                }
                deltaEnd(e) {
                    return new i(this.start, this.endExclusive + e)
                }
                get length() {
                    return this.endExclusive - this.start
                }
                toString() {
                    return `[${this.start}, ${this.endExclusive})`
                }
                equals(e) {
                    return this.start === e.start && this.endExclusive === e.endExclusive
                }
                containsRange(e) {
                    return this.start <= e.start && e.endExclusive <= this.endExclusive
                }
                contains(e) {
                    return this.start <= e && e < this.endExclusive
                }
                join(e) {
                    return new i(Math.min(this.start, e.start), Math.max(this.endExclusive, e.endExclusive))
                }
                intersect(e) {
                    const t = Math.max(this.start, e.start),
                        n = Math.min(this.endExclusive, e.endExclusive);
                    if (t <= n) return new i(t, n)
                }
                intersects(e) {
                    return Math.max(this.start, e.start) < Math.min(this.endExclusive, e.endExclusive)
                }
                intersectsOrTouches(e) {
                    return Math.max(this.start, e.start) <= Math.min(this.endExclusive, e.endExclusive)
                }
                isBefore(e) {
                    return this.endExclusive <= e.start
                }
                isAfter(e) {
                    return this.start >= e.endExclusive
                }
                slice(e) {
                    return e.slice(this.start, this.endExclusive)
                }
                substring(e) {
                    return e.substring(this.start, this.endExclusive)
                }
                clip(e) {
                    if (this.isEmpty) throw new r.he(`Invalid clipping range: ${this.toString()}`);
                    return Math.max(this.start, Math.min(this.endExclusive - 1, e))
                }
                clipCyclic(e) {
                    if (this.isEmpty) throw new r.he(`Invalid clipping range: ${this.toString()}`);
                    return e < this.start ? this.endExclusive - (this.start - e) % this.length : e >= this.endExclusive ? this.start + (e - this.start) % this.length : e
                }
                map(e) {
                    const t = [];
                    for (let n = this.start; n < this.endExclusive; n++) t.push(e(n));
                    return t
                }
                forEach(e) {
                    for (let t = this.start; t < this.endExclusive; t++) e(t)
                }
            }
        },
        spkp: (e, t, n) => {
            n.d(t, {
                At: () => r
            }), n("/hu5"), n("PUdK"), n("j4W2");
            class r {
                constructor(e, t) {
                    this.range = e, this.text = t
                }
                get isEmpty() {
                    return this.range.isEmpty() && 0 === this.text.length
                }
                static equals(e, t) {
                    return e.range.equalsRange(t.range) && e.text === t.text
                }
                toSingleEditOperation() {
                    return {
                        range: this.range,
                        text: this.text
                    }
                }
            }
        },
        cqg2: (e, t, n) => {
            n.d(t, {
                PW: () => r
            }), n("U7Xe");
            var r, i = n("Ef4y");
            n("0aW4"),
                function(e) {
                    e[e.Regular = 0] = "Regular", e[e.Whitespace = 1] = "Whitespace", e[e.WordSeparator = 2] = "WordSeparator"
                }(r || (r = {})), new i.z6(10)
        },
        "5G63": (e, t, n) => {
            n.d(t, {
                Af: () => s,
                eq: () => o,
                t2: () => l
            });
            var r = n("wBFb"),
                i = (n("RVdl"), n("U+Fb"));
            const s = function(e = "") {
                let t = "(-?\\d*\\.\\d\\w*)|([^";
                for (const n of "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?") e.indexOf(n) >= 0 || (t += "\\" + n);
                return t += "\\s]+)", new RegExp(t, "g")
            }();

            function o(e) {
                let t = s;
                if (e && e instanceof RegExp)
                    if (e.global) t = e;
                    else {
                        let n = "g";
                        e.ignoreCase && (n += "i"), e.multiline && (n += "m"), e.unicode && (n += "u"), t = new RegExp(e.source, n)
                    }
                return t.lastIndex = 0, t
            }
            const a = new i.S;

            function l(e, t, n, i, s) {
                if (t = o(t), s || (s = r.$.first(a)), n.length > s.maxLen) {
                    let r = e - s.maxLen / 2;
                    return r < 0 ? r = 0 : i += r, l(e, t, n = n.substring(r, e + s.maxLen / 2), i, s)
                }
                const h = Date.now(),
                    c = e - 1 - i;
                let d = -1,
                    m = null;
                for (let e = 1; !(Date.now() - h >= s.timeBudget); e++) {
                    const r = c - s.windowSize * e;
                    t.lastIndex = Math.max(0, r);
                    const i = u(t, n, c, d);
                    if (!i && m) break;
                    if (m = i, r <= 0) break;
                    d = r
                }
                if (m) {
                    const e = {
                        word: m[0],
                        startColumn: i + 1 + m.index,
                        endColumn: i + 1 + m.index + m[0].length
                    };
                    return t.lastIndex = 0, e
                }
                return null
            }

            function u(e, t, n, r) {
                let i;
                for (; i = e.exec(t);) {
                    const t = i.index || 0;
                    if (t <= n && e.lastIndex >= n) return i;
                    if (r > 0 && t > r) return null
                }
                return null
            }
            a.unshift({
                maxLen: 1e3,
                windowSize: 15,
                timeBudget: 150
            })
        },
        "6ksn": (e, t, n) => {
            var r, i, s, o, a;
            n.d(t, {
                    $: () => s
                }),
                function(e) {
                    e[e.Null = 0] = "Null", e[e.PlainText = 1] = "PlainText"
                }(r || (r = {})),
                function(e) {
                    e[e.NotSet = -1] = "NotSet", e[e.None = 0] = "None", e[e.Italic = 1] = "Italic", e[e.Bold = 2] = "Bold", e[e.Underline = 4] = "Underline", e[e.Strikethrough = 8] = "Strikethrough"
                }(i || (i = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.DefaultForeground = 1] = "DefaultForeground", e[e.DefaultBackground = 2] = "DefaultBackground"
                }(s || (s = {})),
                function(e) {
                    e[e.Other = 0] = "Other", e[e.Comment = 1] = "Comment", e[e.String = 2] = "String", e[e.RegEx = 3] = "RegEx"
                }(o || (o = {})),
                function(e) {
                    e[e.LANGUAGEID_MASK = 255] = "LANGUAGEID_MASK", e[e.TOKEN_TYPE_MASK = 768] = "TOKEN_TYPE_MASK", e[e.BALANCED_BRACKETS_MASK = 1024] = "BALANCED_BRACKETS_MASK", e[e.FONT_STYLE_MASK = 30720] = "FONT_STYLE_MASK", e[e.FOREGROUND_MASK = 16744448] = "FOREGROUND_MASK", e[e.BACKGROUND_MASK = 4278190080] = "BACKGROUND_MASK", e[e.ITALIC_MASK = 2048] = "ITALIC_MASK", e[e.BOLD_MASK = 4096] = "BOLD_MASK", e[e.UNDERLINE_MASK = 8192] = "UNDERLINE_MASK", e[e.STRIKETHROUGH_MASK = 16384] = "STRIKETHROUGH_MASK", e[e.SEMANTIC_USE_ITALIC = 1] = "SEMANTIC_USE_ITALIC", e[e.SEMANTIC_USE_BOLD = 2] = "SEMANTIC_USE_BOLD", e[e.SEMANTIC_USE_UNDERLINE = 4] = "SEMANTIC_USE_UNDERLINE", e[e.SEMANTIC_USE_STRIKETHROUGH = 8] = "SEMANTIC_USE_STRIKETHROUGH", e[e.SEMANTIC_USE_FOREGROUND = 16] = "SEMANTIC_USE_FOREGROUND", e[e.SEMANTIC_USE_BACKGROUND = 32] = "SEMANTIC_USE_BACKGROUND", e[e.LANGUAGEID_OFFSET = 0] = "LANGUAGEID_OFFSET", e[e.TOKEN_TYPE_OFFSET = 8] = "TOKEN_TYPE_OFFSET", e[e.BALANCED_BRACKETS_OFFSET = 10] = "BALANCED_BRACKETS_OFFSET", e[e.FONT_STYLE_OFFSET = 11] = "FONT_STYLE_OFFSET", e[e.FOREGROUND_OFFSET = 15] = "FOREGROUND_OFFSET", e[e.BACKGROUND_OFFSET = 24] = "BACKGROUND_OFFSET"
                }(a || (a = {}))
        },
        Oe9y: (e, t, n) => {
            n.d(t, {
                WU: () => l
            });
            var r = n("iEs1"),
                i = (n("naIR"), n("GLUD")),
                s = n("yFKF"),
                o = n("ziTh");
            const a = "vs/editor/common/languages";
            class l {
                constructor(e, t, n) {
                    this.offset = e, this.type = t, this.language = n, this._tokenBrand = void 0
                }
                toString() {
                    return "(" + this.offset + ", " + this.type + ")"
                }
            }
            var u, h, c, d, m, f, g, p, _, C, y, A, E, S, w, N, v, L, b, M, K, F, k, T, R;
            ! function(e) {
                e[e.Increase = 0] = "Increase", e[e.Decrease = 1] = "Decrease"
            }(u || (u = {})),
            function(e) {
                e[e.Method = 0] = "Method", e[e.Function = 1] = "Function", e[e.Constructor = 2] = "Constructor", e[e.Field = 3] = "Field", e[e.Variable = 4] = "Variable", e[e.Class = 5] = "Class", e[e.Struct = 6] = "Struct", e[e.Interface = 7] = "Interface", e[e.Module = 8] = "Module", e[e.Property = 9] = "Property", e[e.Event = 10] = "Event", e[e.Operator = 11] = "Operator", e[e.Unit = 12] = "Unit", e[e.Value = 13] = "Value", e[e.Constant = 14] = "Constant", e[e.Enum = 15] = "Enum", e[e.EnumMember = 16] = "EnumMember", e[e.Keyword = 17] = "Keyword", e[e.Text = 18] = "Text", e[e.Color = 19] = "Color", e[e.File = 20] = "File", e[e.Reference = 21] = "Reference", e[e.Customcolor = 22] = "Customcolor", e[e.Folder = 23] = "Folder", e[e.TypeParameter = 24] = "TypeParameter", e[e.User = 25] = "User", e[e.Issue = 26] = "Issue", e[e.Snippet = 27] = "Snippet"
            }(h || (h = {})),
            function(e) {
                const t = new Map;
                t.set(h.Method, r.lA.symbolMethod), t.set(h.Function, r.lA.symbolFunction), t.set(h.Constructor, r.lA.symbolConstructor), t.set(h.Field, r.lA.symbolField), t.set(h.Variable, r.lA.symbolVariable), t.set(h.Class, r.lA.symbolClass), t.set(h.Struct, r.lA.symbolStruct), t.set(h.Interface, r.lA.symbolInterface), t.set(h.Module, r.lA.symbolModule), t.set(h.Property, r.lA.symbolProperty), t.set(h.Event, r.lA.symbolEvent), t.set(h.Operator, r.lA.symbolOperator), t.set(h.Unit, r.lA.symbolUnit), t.set(h.Value, r.lA.symbolValue), t.set(h.Enum, r.lA.symbolEnum), t.set(h.Constant, r.lA.symbolConstant), t.set(h.Enum, r.lA.symbolEnum), t.set(h.EnumMember, r.lA.symbolEnumMember), t.set(h.Keyword, r.lA.symbolKeyword), t.set(h.Snippet, r.lA.symbolSnippet), t.set(h.Text, r.lA.symbolText), t.set(h.Color, r.lA.symbolColor), t.set(h.File, r.lA.symbolFile), t.set(h.Reference, r.lA.symbolReference), t.set(h.Customcolor, r.lA.symbolCustomColor), t.set(h.Folder, r.lA.symbolFolder), t.set(h.TypeParameter, r.lA.symbolTypeParameter), t.set(h.User, r.lA.account), t.set(h.Issue, r.lA.issues), e.toIcon = function(e) {
                    let n = t.get(e);
                    return n || (o.info("No codicon found for CompletionItemKind " + e), n = r.lA.symbolProperty), n
                };
                const n = new Map;
                n.set("method", h.Method), n.set("function", h.Function), n.set("constructor", h.Constructor), n.set("field", h.Field), n.set("variable", h.Variable), n.set("class", h.Class), n.set("struct", h.Struct), n.set("interface", h.Interface), n.set("module", h.Module), n.set("property", h.Property), n.set("event", h.Event), n.set("operator", h.Operator), n.set("unit", h.Unit), n.set("value", h.Value), n.set("constant", h.Constant), n.set("enum", h.Enum), n.set("enum-member", h.EnumMember), n.set("enumMember", h.EnumMember), n.set("keyword", h.Keyword), n.set("snippet", h.Snippet), n.set("text", h.Text), n.set("color", h.Color), n.set("file", h.File), n.set("reference", h.Reference), n.set("customcolor", h.Customcolor), n.set("folder", h.Folder), n.set("type-parameter", h.TypeParameter), n.set("typeParameter", h.TypeParameter), n.set("account", h.User), n.set("issue", h.Issue), e.fromString = function(e, t) {
                    let r = n.get(e);
                    return void 0 !== r || t || (r = h.Property), r
                }
            }(c || (c = {})),
            function(e) {
                e[e.Deprecated = 1] = "Deprecated"
            }(d || (d = {})),
            function(e) {
                e[e.None = 0] = "None", e[e.KeepWhitespace = 1] = "KeepWhitespace", e[e.InsertAsSnippet = 4] = "InsertAsSnippet"
            }(m || (m = {})),
            function(e) {
                e[e.Word = 0] = "Word", e[e.Line = 1] = "Line", e[e.Suggest = 2] = "Suggest"
            }(f || (f = {})),
            function(e) {
                e[e.Invoke = 0] = "Invoke", e[e.TriggerCharacter = 1] = "TriggerCharacter", e[e.TriggerForIncompleteCompletions = 2] = "TriggerForIncompleteCompletions"
            }(g || (g = {})),
            function(e) {
                e[e.Automatic = 0] = "Automatic", e[e.Explicit = 1] = "Explicit"
            }(p || (p = {})),
            function(e) {
                e[e.Invoke = 1] = "Invoke", e[e.Auto = 2] = "Auto"
            }(_ || (_ = {})),
            function(e) {
                e[e.Automatic = 0] = "Automatic", e[e.PasteAs = 1] = "PasteAs"
            }(C || (C = {})),
            function(e) {
                e[e.Invoke = 1] = "Invoke", e[e.TriggerCharacter = 2] = "TriggerCharacter", e[e.ContentChange = 3] = "ContentChange"
            }(y || (y = {})),
            function(e) {
                e[e.Text = 0] = "Text", e[e.Read = 1] = "Read", e[e.Write = 2] = "Write"
            }(A || (A = {})),
            function(e) {
                e[e.File = 0] = "File", e[e.Module = 1] = "Module", e[e.Namespace = 2] = "Namespace", e[e.Package = 3] = "Package", e[e.Class = 4] = "Class", e[e.Method = 5] = "Method", e[e.Property = 6] = "Property", e[e.Field = 7] = "Field", e[e.Constructor = 8] = "Constructor", e[e.Enum = 9] = "Enum", e[e.Interface = 10] = "Interface", e[e.Function = 11] = "Function", e[e.Variable = 12] = "Variable", e[e.Constant = 13] = "Constant", e[e.String = 14] = "String", e[e.Number = 15] = "Number", e[e.Boolean = 16] = "Boolean", e[e.Array = 17] = "Array", e[e.Object = 18] = "Object", e[e.Key = 19] = "Key", e[e.Null = 20] = "Null", e[e.EnumMember = 21] = "EnumMember", e[e.Struct = 22] = "Struct", e[e.Event = 23] = "Event", e[e.Operator = 24] = "Operator", e[e.TypeParameter = 25] = "TypeParameter"
            }(E || (E = {})), E.Array, (0, s.C$)(a, 0, "array"), E.Boolean, (0, s.C$)(a, 1, "boolean"), E.Class, (0, s.C$)(a, 2, "class"), E.Constant, (0, s.C$)(a, 3, "constant"), E.Constructor, (0, s.C$)(a, 4, "constructor"), E.Enum, (0, s.C$)(a, 5, "enumeration"), E.EnumMember, (0, s.C$)(a, 6, "enumeration member"), E.Event, (0, s.C$)(a, 7, "event"), E.Field, (0, s.C$)(a, 8, "field"), E.File, (0, s.C$)(a, 9, "file"), E.Function, (0, s.C$)(a, 10, "function"), E.Interface, (0, s.C$)(a, 11, "interface"), E.Key, (0, s.C$)(a, 12, "key"), E.Method, (0, s.C$)(a, 13, "method"), E.Module, (0, s.C$)(a, 14, "module"), E.Namespace, (0, s.C$)(a, 15, "namespace"), E.Null, (0, s.C$)(a, 16, "null"), E.Number, (0, s.C$)(a, 17, "number"), E.Object, (0, s.C$)(a, 18, "object"), E.Operator, (0, s.C$)(a, 19, "operator"), E.Package, (0, s.C$)(a, 20, "package"), E.Property, (0, s.C$)(a, 21, "property"), E.String, (0, s.C$)(a, 22, "string"), E.Struct, (0, s.C$)(a, 23, "struct"), E.TypeParameter, (0, s.C$)(a, 24, "type parameter"), E.Variable, (0, s.C$)(a, 25, "variable"),
                function(e) {
                    e[e.Deprecated = 1] = "Deprecated"
                }(S || (S = {})),
                function(e) {
                    const t = new Map;
                    t.set(E.File, r.lA.symbolFile), t.set(E.Module, r.lA.symbolModule), t.set(E.Namespace, r.lA.symbolNamespace), t.set(E.Package, r.lA.symbolPackage), t.set(E.Class, r.lA.symbolClass), t.set(E.Method, r.lA.symbolMethod), t.set(E.Property, r.lA.symbolProperty), t.set(E.Field, r.lA.symbolField), t.set(E.Constructor, r.lA.symbolConstructor), t.set(E.Enum, r.lA.symbolEnum), t.set(E.Interface, r.lA.symbolInterface), t.set(E.Function, r.lA.symbolFunction), t.set(E.Variable, r.lA.symbolVariable), t.set(E.Constant, r.lA.symbolConstant), t.set(E.String, r.lA.symbolString), t.set(E.Number, r.lA.symbolNumber), t.set(E.Boolean, r.lA.symbolBoolean), t.set(E.Array, r.lA.symbolArray), t.set(E.Object, r.lA.symbolObject), t.set(E.Key, r.lA.symbolKey), t.set(E.Null, r.lA.symbolNull), t.set(E.EnumMember, r.lA.symbolEnumMember), t.set(E.Struct, r.lA.symbolStruct), t.set(E.Event, r.lA.symbolEvent), t.set(E.Operator, r.lA.symbolOperator), t.set(E.TypeParameter, r.lA.symbolTypeParameter), e.toIcon = function(e) {
                        let n = t.get(e);
                        return n || (o.info("No codicon found for SymbolKind " + e), n = r.lA.symbolProperty), n
                    }
                }(w || (w = {}));
            class D {
                static {
                    this.Comment = new D("comment")
                }
                static {
                    this.Imports = new D("imports")
                }
                static {
                    this.Region = new D("region")
                }
                static fromValue(e) {
                    switch (e) {
                        case "comment":
                            return D.Comment;
                        case "imports":
                            return D.Imports;
                        case "region":
                            return D.Region
                    }
                    return new D(e)
                }
                constructor(e) {
                    this.value = e
                }
            }! function(e) {
                e[e.AIGenerated = 1] = "AIGenerated"
            }(N || (N = {})),
            function(e) {
                e[e.Invoke = 0] = "Invoke", e[e.Automatic = 1] = "Automatic"
            }(v || (v = {})),
            function(e) {
                e.is = function(e) {
                    return !(!e || "object" != typeof e) && "string" == typeof e.id && "string" == typeof e.title
                }
            }(L || (L = {})),
            function(e) {
                e[e.Collapsed = 0] = "Collapsed", e[e.Expanded = 1] = "Expanded"
            }(b || (b = {})),
            function(e) {
                e[e.Unresolved = 0] = "Unresolved", e[e.Resolved = 1] = "Resolved"
            }(M || (M = {})),
            function(e) {
                e[e.Current = 0] = "Current", e[e.Outdated = 1] = "Outdated"
            }(K || (K = {})),
            function(e) {
                e[e.Editing = 0] = "Editing", e[e.Preview = 1] = "Preview"
            }(F || (F = {})),
            function(e) {
                e[e.Type = 1] = "Type", e[e.Parameter = 2] = "Parameter"
            }(k || (k = {})), new i.R,
                function(e) {
                    e[e.None = 0] = "None", e[e.Option = 1] = "Option", e[e.Default = 2] = "Default", e[e.Preferred = 3] = "Preferred"
                }(T || (T = {})),
                function(e) {
                    e[e.Invoke = 0] = "Invoke", e[e.Automatic = 1] = "Automatic"
                }(R || (R = {}))
        },
        "5hxU": (e, t, n) => {
            n.d(t, {
                E: () => d
            });
            var r, i = n("U7Xe"),
                s = n("0aW4");
            ! function(e) {
                e[e.Invalid = 0] = "Invalid", e[e.Start = 1] = "Start", e[e.H = 2] = "H", e[e.HT = 3] = "HT", e[e.HTT = 4] = "HTT", e[e.HTTP = 5] = "HTTP", e[e.F = 6] = "F", e[e.FI = 7] = "FI", e[e.FIL = 8] = "FIL", e[e.BeforeColon = 9] = "BeforeColon", e[e.AfterColon = 10] = "AfterColon", e[e.AlmostThere = 11] = "AlmostThere", e[e.End = 12] = "End", e[e.Accept = 13] = "Accept", e[e.LastKnownState = 14] = "LastKnownState"
            }(r || (r = {}));
            class o {
                constructor(e, t, n) {
                    const r = new Uint8Array(e * t);
                    for (let i = 0, s = e * t; i < s; i++) r[i] = n;
                    this._data = r, this.rows = e, this.cols = t
                }
                get(e, t) {
                    return this._data[e * this.cols + t]
                }
                set(e, t, n) {
                    this._data[e * this.cols + t] = n
                }
            }
            class a {
                constructor(e) {
                    let t = 0,
                        n = r.Invalid;
                    for (let r = 0, i = e.length; r < i; r++) {
                        const [i, s, o] = e[r];
                        s > t && (t = s), i > n && (n = i), o > n && (n = o)
                    }
                    t++, n++;
                    const i = new o(n, t, r.Invalid);
                    for (let t = 0, n = e.length; t < n; t++) {
                        const [n, r, s] = e[t];
                        i.set(n, r, s)
                    }
                    this._states = i, this._maxCharCode = t
                }
                nextState(e, t) {
                    return t < 0 || t >= this._maxCharCode ? r.Invalid : this._states.get(e, t)
                }
            }
            let l = null;
            var u;
            ! function(e) {
                e[e.None = 0] = "None", e[e.ForceTermination = 1] = "ForceTermination", e[e.CannotEndIn = 2] = "CannotEndIn"
            }(u || (u = {}));
            let h = null;
            class c {
                static _createLink(e, t, n, r, s) {
                    let o = s - 1;
                    do {
                        const n = t.charCodeAt(o);
                        if (e.get(n) !== u.CannotEndIn) break;
                        o--
                    } while (o > r);
                    if (r > 0) {
                        const e = t.charCodeAt(r - 1),
                            n = t.charCodeAt(o);
                        (e === i.m.OpenParen && n === i.m.CloseParen || e === i.m.OpenSquareBracket && n === i.m.CloseSquareBracket || e === i.m.OpenCurlyBrace && n === i.m.CloseCurlyBrace) && o--
                    }
                    return {
                        range: {
                            startLineNumber: n,
                            startColumn: r + 1,
                            endLineNumber: n,
                            endColumn: o + 2
                        },
                        url: t.substring(r, o + 1)
                    }
                }
                static computeLinks(e, t = function() {
                    return null === l && (l = new a([
                        [r.Start, i.m.h, r.H],
                        [r.Start, i.m.H, r.H],
                        [r.Start, i.m.f, r.F],
                        [r.Start, i.m.F, r.F],
                        [r.H, i.m.t, r.HT],
                        [r.H, i.m.T, r.HT],
                        [r.HT, i.m.t, r.HTT],
                        [r.HT, i.m.T, r.HTT],
                        [r.HTT, i.m.p, r.HTTP],
                        [r.HTT, i.m.P, r.HTTP],
                        [r.HTTP, i.m.s, r.BeforeColon],
                        [r.HTTP, i.m.S, r.BeforeColon],
                        [r.HTTP, i.m.Colon, r.AfterColon],
                        [r.F, i.m.i, r.FI],
                        [r.F, i.m.I, r.FI],
                        [r.FI, i.m.l, r.FIL],
                        [r.FI, i.m.L, r.FIL],
                        [r.FIL, i.m.e, r.BeforeColon],
                        [r.FIL, i.m.E, r.BeforeColon],
                        [r.BeforeColon, i.m.Colon, r.AfterColon],
                        [r.AfterColon, i.m.Slash, r.AlmostThere],
                        [r.AlmostThere, i.m.Slash, r.End]
                    ])), l
                }()) {
                    const n = function() {
                            if (null === h) {
                                h = new s.N(u.None);
                                const e = " \t<>'\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…";
                                for (let t = 0; t < e.length; t++) h.set(e.charCodeAt(t), u.ForceTermination);
                                const t = ".,;:";
                                for (let e = 0; e < t.length; e++) h.set(t.charCodeAt(e), u.CannotEndIn)
                            }
                            return h
                        }(),
                        o = [];
                    for (let s = 1, a = e.getLineCount(); s <= a; s++) {
                        const a = e.getLineContent(s),
                            l = a.length;
                        let h = 0,
                            d = 0,
                            m = 0,
                            f = r.Start,
                            g = !1,
                            p = !1,
                            _ = !1,
                            C = !1;
                        for (; h < l;) {
                            let e = !1;
                            const l = a.charCodeAt(h);
                            if (f === r.Accept) {
                                let t;
                                switch (l) {
                                    case i.m.OpenParen:
                                        g = !0, t = u.None;
                                        break;
                                    case i.m.CloseParen:
                                        t = g ? u.None : u.ForceTermination;
                                        break;
                                    case i.m.OpenSquareBracket:
                                        _ = !0, p = !0, t = u.None;
                                        break;
                                    case i.m.CloseSquareBracket:
                                        _ = !1, t = p ? u.None : u.ForceTermination;
                                        break;
                                    case i.m.OpenCurlyBrace:
                                        C = !0, t = u.None;
                                        break;
                                    case i.m.CloseCurlyBrace:
                                        t = C ? u.None : u.ForceTermination;
                                        break;
                                    case i.m.SingleQuote:
                                    case i.m.DoubleQuote:
                                    case i.m.BackTick:
                                        t = m === l ? u.ForceTermination : m === i.m.SingleQuote || m === i.m.DoubleQuote || m === i.m.BackTick ? u.None : u.ForceTermination;
                                        break;
                                    case i.m.Asterisk:
                                        t = m === i.m.Asterisk ? u.ForceTermination : u.None;
                                        break;
                                    case i.m.Pipe:
                                        t = m === i.m.Pipe ? u.ForceTermination : u.None;
                                        break;
                                    case i.m.Space:
                                        t = _ ? u.None : u.ForceTermination;
                                        break;
                                    default:
                                        t = n.get(l)
                                }
                                t === u.ForceTermination && (o.push(c._createLink(n, a, s, d, h)), e = !0)
                            } else if (f === r.End) {
                                let t;
                                l === i.m.OpenSquareBracket ? (p = !0, t = u.None) : t = n.get(l), t === u.ForceTermination ? e = !0 : f = r.Accept
                            } else f = t.nextState(f, l), f === r.Invalid && (e = !0);
                            e && (f = r.Start, g = !1, p = !1, C = !1, d = h + 1, m = l), h++
                        }
                        f === r.Accept && o.push(c._createLink(n, a, s, d, l))
                    }
                    return o
                }
            }

            function d(e) {
                return e && "function" == typeof e.getLineCount && "function" == typeof e.getLineContent ? c.computeLinks(e) : []
            }
        },
        PLiU: (e, t, n) => {
            var r, i, s, o, a, l, u, h, c, d, m;
            n("7eUP"),
                function(e) {
                    e[e.Left = 1] = "Left", e[e.Center = 2] = "Center", e[e.Right = 4] = "Right", e[e.Full = 7] = "Full"
                }(r || (r = {})),
                function(e) {
                    e[e.Left = 1] = "Left", e[e.Center = 2] = "Center", e[e.Right = 3] = "Right"
                }(i || (i = {})),
                function(e) {
                    e[e.Inline = 1] = "Inline", e[e.Gutter = 2] = "Gutter"
                }(s || (s = {})),
                function(e) {
                    e[e.Normal = 1] = "Normal", e[e.Underlined = 2] = "Underlined"
                }(o || (o = {})),
                function(e) {
                    e[e.Both = 0] = "Both", e[e.Right = 1] = "Right", e[e.Left = 2] = "Left", e[e.None = 3] = "None"
                }(a || (a = {})),
                function(e) {
                    e[e.TextDefined = 0] = "TextDefined", e[e.LF = 1] = "LF", e[e.CRLF = 2] = "CRLF"
                }(l || (l = {})),
                function(e) {
                    e[e.LF = 1] = "LF", e[e.CRLF = 2] = "CRLF"
                }(u || (u = {})),
                function(e) {
                    e[e.LF = 0] = "LF", e[e.CRLF = 1] = "CRLF"
                }(h || (h = {})),
                function(e) {
                    e[e.AlwaysGrowsWhenTypingAtEdges = 0] = "AlwaysGrowsWhenTypingAtEdges", e[e.NeverGrowsWhenTypingAtEdges = 1] = "NeverGrowsWhenTypingAtEdges", e[e.GrowsOnlyWhenTypingBefore = 2] = "GrowsOnlyWhenTypingBefore", e[e.GrowsOnlyWhenTypingAfter = 3] = "GrowsOnlyWhenTypingAfter"
                }(c || (c = {})),
                function(e) {
                    e[e.Left = 0] = "Left", e[e.Right = 1] = "Right", e[e.None = 2] = "None", e[e.LeftOfInjectedText = 3] = "LeftOfInjectedText", e[e.RightOfInjectedText = 4] = "RightOfInjectedText"
                }(d || (d = {})),
                function(e) {
                    e[e.FIRST_LINE_DETECTION_LENGTH_LIMIT = 1e3] = "FIRST_LINE_DETECTION_LENGTH_LIMIT"
                }(m || (m = {}))
        },
        KZ22: (e, t, n) => {
            n.d(t, {
                sz: () => a
            });
            var r = n("U7Xe"),
                i = n("p044"),
                s = n("cqg2");

            function o(e, t, n, i, o) {
                return function(e, t, n, i, o) {
                    if (0 === i) return !0;
                    const a = t.charCodeAt(i - 1);
                    if (e.get(a) !== s.PW.Regular) return !0;
                    if (a === r.m.CarriageReturn || a === r.m.LineFeed) return !0;
                    if (o > 0) {
                        const n = t.charCodeAt(i);
                        if (e.get(n) !== s.PW.Regular) return !0
                    }
                    return !1
                }(e, t, 0, i, o) && function(e, t, n, i, o) {
                    if (i + o === n) return !0;
                    const a = t.charCodeAt(i + o);
                    if (e.get(a) !== s.PW.Regular) return !0;
                    if (a === r.m.CarriageReturn || a === r.m.LineFeed) return !0;
                    if (o > 0) {
                        const n = t.charCodeAt(i + o - 1);
                        if (e.get(n) !== s.PW.Regular) return !0
                    }
                    return !1
                }(e, t, n, i, o)
            }
            n("PLiU");
            class a {
                constructor(e, t) {
                    this._wordSeparators = e, this._searchRegex = t, this._prevMatchStartIndex = -1, this._prevMatchLength = 0
                }
                reset(e) {
                    this._searchRegex.lastIndex = e, this._prevMatchStartIndex = -1, this._prevMatchLength = 0
                }
                next(e) {
                    const t = e.length;
                    let n;
                    do {
                        if (this._prevMatchStartIndex + this._prevMatchLength === t) return null;
                        if (n = this._searchRegex.exec(e), !n) return null;
                        const r = n.index,
                            s = n[0].length;
                        if (r === this._prevMatchStartIndex && s === this._prevMatchLength) {
                            if (0 === s) {
                                (0, i.ZH)(e, t, this._searchRegex.lastIndex) > 65535 ? this._searchRegex.lastIndex += 2 : this._searchRegex.lastIndex += 1;
                                continue
                            }
                            return null
                        }
                        if (this._prevMatchStartIndex = r, this._prevMatchLength = s, !this._wordSeparators || o(this._wordSeparators, e, t, r, s)) return n
                    } while (n);
                    return null
                }
            }
        },
        nUoo: (e, t, n) => {
            n.d(t, {
                a: () => h
            });
            var r, i, s = n("Aw1u"),
                o = n("KZ22"),
                a = n("p044"),
                l = n("/hu5"),
                u = n("5G63");
            class h {
                static computeUnicodeHighlights(e, t, n) {
                    const r = n ? n.startLineNumber : 1,
                        h = n ? n.endLineNumber : e.getLineCount(),
                        d = new c(t),
                        m = d.getCandidateCodePoints();
                    let f;
                    var g;
                    f = "allNonBasicAscii" === m ? new RegExp("[^\\t\\n\\r\\x20-\\x7E]", "g") : new RegExp((g = Array.from(m), `[${(0,a.ec)(g.map((e=>String.fromCodePoint(e))).join(""))}]`), "g");
                    const p = new o.sz(null, f),
                        _ = [];
                    let C, y = !1,
                        A = 0,
                        E = 0,
                        S = 0;
                    e: for (let t = r, n = h; t <= n; t++) {
                        const n = e.getLineContent(t),
                            r = n.length;
                        p.reset(0);
                        do {
                            if (C = p.next(n), C) {
                                let e = C.index,
                                    o = C.index + C[0].length;
                                if (e > 0) {
                                    const t = n.charCodeAt(e - 1);
                                    (0, a.ZG)(t) && e--
                                }
                                if (o + 1 < r) {
                                    const e = n.charCodeAt(o - 1);
                                    (0, a.ZG)(e) && o++
                                }
                                const h = n.substring(e, o);
                                let c = (0, u.t2)(e + 1, u.Af, n, 0);
                                c && c.endColumn <= e + 1 && (c = null);
                                const m = d.shouldHighlightNonBasicASCII(h, c ? c.word : null);
                                if (m !== i.None) {
                                    m === i.Ambiguous ? A++ : m === i.Invisible ? E++ : m === i.NonBasicASCII ? S++ : (0, l.vE)();
                                    const n = 1e3;
                                    if (_.length >= n) {
                                        y = !0;
                                        break e
                                    }
                                    _.push(new s.e(t, e + 1, t, o + 1))
                                }
                            }
                        } while (C)
                    }
                    return {
                        ranges: _,
                        hasMore: y,
                        ambiguousCharacterCount: A,
                        invisibleCharacterCount: E,
                        nonBasicAsciiCharacterCount: S
                    }
                }
                static computeUnicodeHighlightReason(e, t) {
                    const n = new c(t);
                    switch (n.shouldHighlightNonBasicASCII(e, null)) {
                        case i.None:
                            return null;
                        case i.Invisible:
                            return {
                                kind: r.Invisible
                            };
                        case i.Ambiguous:
                            {
                                const i = e.codePointAt(0),
                                    s = n.ambiguousCharacters.getPrimaryConfusable(i),
                                    o = a.ZK.getLocales().filter((e => !a.ZK.getInstance(new Set([...t.allowedLocales, e])).isAmbiguous(i)));
                                return {
                                    kind: r.Ambiguous,
                                    confusableWith: String.fromCodePoint(s),
                                    notAmbiguousInLocales: o
                                }
                            }
                        case i.NonBasicASCII:
                            return {
                                kind: r.NonBasicAscii
                            }
                    }
                }
            }! function(e) {
                e[e.Ambiguous = 0] = "Ambiguous", e[e.Invisible = 1] = "Invisible", e[e.NonBasicAscii = 2] = "NonBasicAscii"
            }(r || (r = {}));
            class c {
                constructor(e) {
                    this.options = e, this.allowedCodePoints = new Set(e.allowedCodePoints), this.ambiguousCharacters = a.ZK.getInstance(new Set(e.allowedLocales))
                }
                getCandidateCodePoints() {
                    if (this.options.nonBasicASCII) return "allNonBasicAscii";
                    const e = new Set;
                    if (this.options.invisibleCharacters)
                        for (const t of a.vU.codePoints) d(String.fromCodePoint(t)) || e.add(t);
                    if (this.options.ambiguousCharacters)
                        for (const t of this.ambiguousCharacters.getConfusableCodePoints()) e.add(t);
                    for (const t of this.allowedCodePoints) e.delete(t);
                    return e
                }
                shouldHighlightNonBasicASCII(e, t) {
                    const n = e.codePointAt(0);
                    if (this.allowedCodePoints.has(n)) return i.None;
                    if (this.options.nonBasicASCII) return i.NonBasicASCII;
                    let r = !1,
                        s = !1;
                    if (t)
                        for (const e of t) {
                            const t = e.codePointAt(0),
                                n = (0, a.$i)(e);
                            r = r || n, n || this.ambiguousCharacters.isAmbiguous(t) || a.vU.isInvisibleCharacter(t) || (s = !0)
                        }
                    return !r && s ? i.None : this.options.invisibleCharacters && !d(e) && a.vU.isInvisibleCharacter(n) ? i.Invisible : this.options.ambiguousCharacters && this.ambiguousCharacters.isAmbiguous(n) ? i.Ambiguous : i.None
                }
            }

            function d(e) {
                return " " === e || "\n" === e || "\t" === e
            }! function(e) {
                e[e.None = 0] = "None", e[e.NonBasicASCII = 1] = "NonBasicASCII", e[e.Invisible = 2] = "Invisible", e[e.Ambiguous = 3] = "Ambiguous"
            }(i || (i = {}))
        },
        "B6+6": (e, t, n) => {
            var r, i, s, o, a, l, u, h, c, d, m, f, g, p, _, C, y, A, E, S, w, N, v, L, b, M, K, F, k, T, R, D, O, I, P, U, B, x, V, H, W, q, $, G, z, j;
            n.d(t, {
                    VD: () => N,
                    ZL: () => v,
                    a$: () => x,
                    eB: () => L
                }),
                function(e) {
                    e[e.Unknown = 0] = "Unknown", e[e.Disabled = 1] = "Disabled", e[e.Enabled = 2] = "Enabled"
                }(r || (r = {})),
                function(e) {
                    e[e.Invoke = 1] = "Invoke", e[e.Auto = 2] = "Auto"
                }(i || (i = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.KeepWhitespace = 1] = "KeepWhitespace", e[e.InsertAsSnippet = 4] = "InsertAsSnippet"
                }(s || (s = {})),
                function(e) {
                    e[e.Method = 0] = "Method", e[e.Function = 1] = "Function", e[e.Constructor = 2] = "Constructor", e[e.Field = 3] = "Field", e[e.Variable = 4] = "Variable", e[e.Class = 5] = "Class", e[e.Struct = 6] = "Struct", e[e.Interface = 7] = "Interface", e[e.Module = 8] = "Module", e[e.Property = 9] = "Property", e[e.Event = 10] = "Event", e[e.Operator = 11] = "Operator", e[e.Unit = 12] = "Unit", e[e.Value = 13] = "Value", e[e.Constant = 14] = "Constant", e[e.Enum = 15] = "Enum", e[e.EnumMember = 16] = "EnumMember", e[e.Keyword = 17] = "Keyword", e[e.Text = 18] = "Text", e[e.Color = 19] = "Color", e[e.File = 20] = "File", e[e.Reference = 21] = "Reference", e[e.Customcolor = 22] = "Customcolor", e[e.Folder = 23] = "Folder", e[e.TypeParameter = 24] = "TypeParameter", e[e.User = 25] = "User", e[e.Issue = 26] = "Issue", e[e.Snippet = 27] = "Snippet"
                }(o || (o = {})),
                function(e) {
                    e[e.Deprecated = 1] = "Deprecated"
                }(a || (a = {})),
                function(e) {
                    e[e.Invoke = 0] = "Invoke", e[e.TriggerCharacter = 1] = "TriggerCharacter", e[e.TriggerForIncompleteCompletions = 2] = "TriggerForIncompleteCompletions"
                }(l || (l = {})),
                function(e) {
                    e[e.EXACT = 0] = "EXACT", e[e.ABOVE = 1] = "ABOVE", e[e.BELOW = 2] = "BELOW"
                }(u || (u = {})),
                function(e) {
                    e[e.NotSet = 0] = "NotSet", e[e.ContentFlush = 1] = "ContentFlush", e[e.RecoverFromMarkers = 2] = "RecoverFromMarkers", e[e.Explicit = 3] = "Explicit", e[e.Paste = 4] = "Paste", e[e.Undo = 5] = "Undo", e[e.Redo = 6] = "Redo"
                }(h || (h = {})),
                function(e) {
                    e[e.LF = 1] = "LF", e[e.CRLF = 2] = "CRLF"
                }(c || (c = {})),
                function(e) {
                    e[e.Text = 0] = "Text", e[e.Read = 1] = "Read", e[e.Write = 2] = "Write"
                }(d || (d = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.Keep = 1] = "Keep", e[e.Brackets = 2] = "Brackets", e[e.Advanced = 3] = "Advanced", e[e.Full = 4] = "Full"
                }(m || (m = {})),
                function(e) {
                    e[e.acceptSuggestionOnCommitCharacter = 0] = "acceptSuggestionOnCommitCharacter", e[e.acceptSuggestionOnEnter = 1] = "acceptSuggestionOnEnter", e[e.accessibilitySupport = 2] = "accessibilitySupport", e[e.accessibilityPageSize = 3] = "accessibilityPageSize", e[e.ariaLabel = 4] = "ariaLabel", e[e.ariaRequired = 5] = "ariaRequired", e[e.autoClosingBrackets = 6] = "autoClosingBrackets", e[e.autoClosingComments = 7] = "autoClosingComments", e[e.screenReaderAnnounceInlineSuggestion = 8] = "screenReaderAnnounceInlineSuggestion", e[e.autoClosingDelete = 9] = "autoClosingDelete", e[e.autoClosingOvertype = 10] = "autoClosingOvertype", e[e.autoClosingQuotes = 11] = "autoClosingQuotes", e[e.autoIndent = 12] = "autoIndent", e[e.automaticLayout = 13] = "automaticLayout", e[e.autoSurround = 14] = "autoSurround", e[e.bracketPairColorization = 15] = "bracketPairColorization", e[e.guides = 16] = "guides", e[e.codeLens = 17] = "codeLens", e[e.codeLensFontFamily = 18] = "codeLensFontFamily", e[e.codeLensFontSize = 19] = "codeLensFontSize", e[e.colorDecorators = 20] = "colorDecorators", e[e.colorDecoratorsLimit = 21] = "colorDecoratorsLimit", e[e.columnSelection = 22] = "columnSelection", e[e.comments = 23] = "comments", e[e.contextmenu = 24] = "contextmenu", e[e.copyWithSyntaxHighlighting = 25] = "copyWithSyntaxHighlighting", e[e.cursorBlinking = 26] = "cursorBlinking", e[e.cursorSmoothCaretAnimation = 27] = "cursorSmoothCaretAnimation", e[e.cursorStyle = 28] = "cursorStyle", e[e.cursorSurroundingLines = 29] = "cursorSurroundingLines", e[e.cursorSurroundingLinesStyle = 30] = "cursorSurroundingLinesStyle", e[e.cursorWidth = 31] = "cursorWidth", e[e.disableLayerHinting = 32] = "disableLayerHinting", e[e.disableMonospaceOptimizations = 33] = "disableMonospaceOptimizations", e[e.domReadOnly = 34] = "domReadOnly", e[e.dragAndDrop = 35] = "dragAndDrop", e[e.dropIntoEditor = 36] = "dropIntoEditor", e[e.emptySelectionClipboard = 37] = "emptySelectionClipboard", e[e.experimentalWhitespaceRendering = 38] = "experimentalWhitespaceRendering", e[e.extraEditorClassName = 39] = "extraEditorClassName", e[e.fastScrollSensitivity = 40] = "fastScrollSensitivity", e[e.find = 41] = "find", e[e.fixedOverflowWidgets = 42] = "fixedOverflowWidgets", e[e.folding = 43] = "folding", e[e.foldingStrategy = 44] = "foldingStrategy", e[e.foldingHighlight = 45] = "foldingHighlight", e[e.foldingImportsByDefault = 46] = "foldingImportsByDefault", e[e.foldingMaximumRegions = 47] = "foldingMaximumRegions", e[e.unfoldOnClickAfterEndOfLine = 48] = "unfoldOnClickAfterEndOfLine", e[e.fontFamily = 49] = "fontFamily", e[e.fontInfo = 50] = "fontInfo", e[e.fontLigatures = 51] = "fontLigatures", e[e.fontSize = 52] = "fontSize", e[e.fontWeight = 53] = "fontWeight", e[e.fontVariations = 54] = "fontVariations", e[e.formatOnPaste = 55] = "formatOnPaste", e[e.formatOnType = 56] = "formatOnType", e[e.glyphMargin = 57] = "glyphMargin", e[e.gotoLocation = 58] = "gotoLocation", e[e.hideCursorInOverviewRuler = 59] = "hideCursorInOverviewRuler", e[e.hover = 60] = "hover", e[e.inDiffEditor = 61] = "inDiffEditor", e[e.inlineSuggest = 62] = "inlineSuggest", e[e.inlineEdit = 63] = "inlineEdit", e[e.letterSpacing = 64] = "letterSpacing", e[e.lightbulb = 65] = "lightbulb", e[e.lineDecorationsWidth = 66] = "lineDecorationsWidth", e[e.lineHeight = 67] = "lineHeight", e[e.lineNumbers = 68] = "lineNumbers", e[e.lineNumbersMinChars = 69] = "lineNumbersMinChars", e[e.linkedEditing = 70] = "linkedEditing", e[e.links = 71] = "links", e[e.matchBrackets = 72] = "matchBrackets", e[e.minimap = 73] = "minimap", e[e.mouseStyle = 74] = "mouseStyle", e[e.mouseWheelScrollSensitivity = 75] = "mouseWheelScrollSensitivity", e[e.mouseWheelZoom = 76] = "mouseWheelZoom", e[e.multiCursorMergeOverlapping = 77] = "multiCursorMergeOverlapping", e[e.multiCursorModifier = 78] = "multiCursorModifier", e[e.multiCursorPaste = 79] = "multiCursorPaste", e[e.multiCursorLimit = 80] = "multiCursorLimit", e[e.occurrencesHighlight = 81] = "occurrencesHighlight", e[e.overviewRulerBorder = 82] = "overviewRulerBorder", e[e.overviewRulerLanes = 83] = "overviewRulerLanes", e[e.padding = 84] = "padding", e[e.pasteAs = 85] = "pasteAs", e[e.parameterHints = 86] = "parameterHints", e[e.peekWidgetDefaultFocus = 87] = "peekWidgetDefaultFocus", e[e.placeholder = 88] = "placeholder", e[e.definitionLinkOpensInPeek = 89] = "definitionLinkOpensInPeek", e[e.quickSuggestions = 90] = "quickSuggestions", e[e.quickSuggestionsDelay = 91] = "quickSuggestionsDelay", e[e.readOnly = 92] = "readOnly", e[e.readOnlyMessage = 93] = "readOnlyMessage", e[e.renameOnType = 94] = "renameOnType", e[e.renderControlCharacters = 95] = "renderControlCharacters", e[e.renderFinalNewline = 96] = "renderFinalNewline", e[e.renderLineHighlight = 97] = "renderLineHighlight", e[e.renderLineHighlightOnlyWhenFocus = 98] = "renderLineHighlightOnlyWhenFocus", e[e.renderValidationDecorations = 99] = "renderValidationDecorations", e[e.renderWhitespace = 100] = "renderWhitespace", e[e.revealHorizontalRightPadding = 101] = "revealHorizontalRightPadding", e[e.roundedSelection = 102] = "roundedSelection", e[e.rulers = 103] = "rulers", e[e.scrollbar = 104] = "scrollbar", e[e.scrollBeyondLastColumn = 105] = "scrollBeyondLastColumn", e[e.scrollBeyondLastLine = 106] = "scrollBeyondLastLine", e[e.scrollPredominantAxis = 107] = "scrollPredominantAxis", e[e.selectionClipboard = 108] = "selectionClipboard", e[e.selectionHighlight = 109] = "selectionHighlight", e[e.selectOnLineNumbers = 110] = "selectOnLineNumbers", e[e.showFoldingControls = 111] = "showFoldingControls", e[e.showUnused = 112] = "showUnused", e[e.snippetSuggestions = 113] = "snippetSuggestions", e[e.smartSelect = 114] = "smartSelect", e[e.smoothScrolling = 115] = "smoothScrolling", e[e.stickyScroll = 116] = "stickyScroll", e[e.stickyTabStops = 117] = "stickyTabStops", e[e.stopRenderingLineAfter = 118] = "stopRenderingLineAfter", e[e.suggest = 119] = "suggest", e[e.suggestFontSize = 120] = "suggestFontSize", e[e.suggestLineHeight = 121] = "suggestLineHeight", e[e.suggestOnTriggerCharacters = 122] = "suggestOnTriggerCharacters", e[e.suggestSelection = 123] = "suggestSelection", e[e.tabCompletion = 124] = "tabCompletion", e[e.tabIndex = 125] = "tabIndex", e[e.unicodeHighlighting = 126] = "unicodeHighlighting", e[e.unusualLineTerminators = 127] = "unusualLineTerminators", e[e.useShadowDOM = 128] = "useShadowDOM", e[e.useTabStops = 129] = "useTabStops", e[e.wordBreak = 130] = "wordBreak", e[e.wordSegmenterLocales = 131] = "wordSegmenterLocales", e[e.wordSeparators = 132] = "wordSeparators", e[e.wordWrap = 133] = "wordWrap", e[e.wordWrapBreakAfterCharacters = 134] = "wordWrapBreakAfterCharacters", e[e.wordWrapBreakBeforeCharacters = 135] = "wordWrapBreakBeforeCharacters", e[e.wordWrapColumn = 136] = "wordWrapColumn", e[e.wordWrapOverride1 = 137] = "wordWrapOverride1", e[e.wordWrapOverride2 = 138] = "wordWrapOverride2", e[e.wrappingIndent = 139] = "wrappingIndent", e[e.wrappingStrategy = 140] = "wrappingStrategy", e[e.showDeprecated = 141] = "showDeprecated", e[e.inlayHints = 142] = "inlayHints", e[e.editorClassName = 143] = "editorClassName", e[e.pixelRatio = 144] = "pixelRatio", e[e.tabFocusMode = 145] = "tabFocusMode", e[e.layoutInfo = 146] = "layoutInfo", e[e.wrappingInfo = 147] = "wrappingInfo", e[e.defaultColorDecorators = 148] = "defaultColorDecorators", e[e.colorDecoratorsActivatedOn = 149] = "colorDecoratorsActivatedOn", e[e.inlineCompletionsAccessibilityVerbose = 150] = "inlineCompletionsAccessibilityVerbose"
                }(f || (f = {})),
                function(e) {
                    e[e.TextDefined = 0] = "TextDefined", e[e.LF = 1] = "LF", e[e.CRLF = 2] = "CRLF"
                }(g || (g = {})),
                function(e) {
                    e[e.LF = 0] = "LF", e[e.CRLF = 1] = "CRLF"
                }(p || (p = {})),
                function(e) {
                    e[e.Left = 1] = "Left", e[e.Center = 2] = "Center", e[e.Right = 3] = "Right"
                }(_ || (_ = {})),
                function(e) {
                    e[e.Increase = 0] = "Increase", e[e.Decrease = 1] = "Decrease"
                }(C || (C = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.Indent = 1] = "Indent", e[e.IndentOutdent = 2] = "IndentOutdent", e[e.Outdent = 3] = "Outdent"
                }(y || (y = {})),
                function(e) {
                    e[e.Both = 0] = "Both", e[e.Right = 1] = "Right", e[e.Left = 2] = "Left", e[e.None = 3] = "None"
                }(A || (A = {})),
                function(e) {
                    e[e.Type = 1] = "Type", e[e.Parameter = 2] = "Parameter"
                }(E || (E = {})),
                function(e) {
                    e[e.Automatic = 0] = "Automatic", e[e.Explicit = 1] = "Explicit"
                }(S || (S = {})),
                function(e) {
                    e[e.Invoke = 0] = "Invoke", e[e.Automatic = 1] = "Automatic"
                }(w || (w = {})),
                function(e) {
                    e[e.DependsOnKbLayout = -1] = "DependsOnKbLayout", e[e.Unknown = 0] = "Unknown", e[e.Backspace = 1] = "Backspace", e[e.Tab = 2] = "Tab", e[e.Enter = 3] = "Enter", e[e.Shift = 4] = "Shift", e[e.Ctrl = 5] = "Ctrl", e[e.Alt = 6] = "Alt", e[e.PauseBreak = 7] = "PauseBreak", e[e.CapsLock = 8] = "CapsLock", e[e.Escape = 9] = "Escape", e[e.Space = 10] = "Space", e[e.PageUp = 11] = "PageUp", e[e.PageDown = 12] = "PageDown", e[e.End = 13] = "End", e[e.Home = 14] = "Home", e[e.LeftArrow = 15] = "LeftArrow", e[e.UpArrow = 16] = "UpArrow", e[e.RightArrow = 17] = "RightArrow", e[e.DownArrow = 18] = "DownArrow", e[e.Insert = 19] = "Insert", e[e.Delete = 20] = "Delete", e[e.Digit0 = 21] = "Digit0", e[e.Digit1 = 22] = "Digit1", e[e.Digit2 = 23] = "Digit2", e[e.Digit3 = 24] = "Digit3", e[e.Digit4 = 25] = "Digit4", e[e.Digit5 = 26] = "Digit5", e[e.Digit6 = 27] = "Digit6", e[e.Digit7 = 28] = "Digit7", e[e.Digit8 = 29] = "Digit8", e[e.Digit9 = 30] = "Digit9", e[e.KeyA = 31] = "KeyA", e[e.KeyB = 32] = "KeyB", e[e.KeyC = 33] = "KeyC", e[e.KeyD = 34] = "KeyD", e[e.KeyE = 35] = "KeyE", e[e.KeyF = 36] = "KeyF", e[e.KeyG = 37] = "KeyG", e[e.KeyH = 38] = "KeyH", e[e.KeyI = 39] = "KeyI", e[e.KeyJ = 40] = "KeyJ", e[e.KeyK = 41] = "KeyK", e[e.KeyL = 42] = "KeyL", e[e.KeyM = 43] = "KeyM", e[e.KeyN = 44] = "KeyN", e[e.KeyO = 45] = "KeyO", e[e.KeyP = 46] = "KeyP", e[e.KeyQ = 47] = "KeyQ", e[e.KeyR = 48] = "KeyR", e[e.KeyS = 49] = "KeyS", e[e.KeyT = 50] = "KeyT", e[e.KeyU = 51] = "KeyU", e[e.KeyV = 52] = "KeyV", e[e.KeyW = 53] = "KeyW", e[e.KeyX = 54] = "KeyX", e[e.KeyY = 55] = "KeyY", e[e.KeyZ = 56] = "KeyZ", e[e.Meta = 57] = "Meta", e[e.ContextMenu = 58] = "ContextMenu", e[e.F1 = 59] = "F1", e[e.F2 = 60] = "F2", e[e.F3 = 61] = "F3", e[e.F4 = 62] = "F4", e[e.F5 = 63] = "F5", e[e.F6 = 64] = "F6", e[e.F7 = 65] = "F7", e[e.F8 = 66] = "F8", e[e.F9 = 67] = "F9", e[e.F10 = 68] = "F10", e[e.F11 = 69] = "F11", e[e.F12 = 70] = "F12", e[e.F13 = 71] = "F13", e[e.F14 = 72] = "F14", e[e.F15 = 73] = "F15", e[e.F16 = 74] = "F16", e[e.F17 = 75] = "F17", e[e.F18 = 76] = "F18", e[e.F19 = 77] = "F19", e[e.F20 = 78] = "F20", e[e.F21 = 79] = "F21", e[e.F22 = 80] = "F22", e[e.F23 = 81] = "F23", e[e.F24 = 82] = "F24", e[e.NumLock = 83] = "NumLock", e[e.ScrollLock = 84] = "ScrollLock", e[e.Semicolon = 85] = "Semicolon", e[e.Equal = 86] = "Equal", e[e.Comma = 87] = "Comma", e[e.Minus = 88] = "Minus", e[e.Period = 89] = "Period", e[e.Slash = 90] = "Slash", e[e.Backquote = 91] = "Backquote", e[e.BracketLeft = 92] = "BracketLeft", e[e.Backslash = 93] = "Backslash", e[e.BracketRight = 94] = "BracketRight", e[e.Quote = 95] = "Quote", e[e.OEM_8 = 96] = "OEM_8", e[e.IntlBackslash = 97] = "IntlBackslash", e[e.Numpad0 = 98] = "Numpad0", e[e.Numpad1 = 99] = "Numpad1", e[e.Numpad2 = 100] = "Numpad2", e[e.Numpad3 = 101] = "Numpad3", e[e.Numpad4 = 102] = "Numpad4", e[e.Numpad5 = 103] = "Numpad5", e[e.Numpad6 = 104] = "Numpad6", e[e.Numpad7 = 105] = "Numpad7", e[e.Numpad8 = 106] = "Numpad8", e[e.Numpad9 = 107] = "Numpad9", e[e.NumpadMultiply = 108] = "NumpadMultiply", e[e.NumpadAdd = 109] = "NumpadAdd", e[e.NUMPAD_SEPARATOR = 110] = "NUMPAD_SEPARATOR", e[e.NumpadSubtract = 111] = "NumpadSubtract", e[e.NumpadDecimal = 112] = "NumpadDecimal", e[e.NumpadDivide = 113] = "NumpadDivide", e[e.KEY_IN_COMPOSITION = 114] = "KEY_IN_COMPOSITION", e[e.ABNT_C1 = 115] = "ABNT_C1", e[e.ABNT_C2 = 116] = "ABNT_C2", e[e.AudioVolumeMute = 117] = "AudioVolumeMute", e[e.AudioVolumeUp = 118] = "AudioVolumeUp", e[e.AudioVolumeDown = 119] = "AudioVolumeDown", e[e.BrowserSearch = 120] = "BrowserSearch", e[e.BrowserHome = 121] = "BrowserHome", e[e.BrowserBack = 122] = "BrowserBack", e[e.BrowserForward = 123] = "BrowserForward", e[e.MediaTrackNext = 124] = "MediaTrackNext", e[e.MediaTrackPrevious = 125] = "MediaTrackPrevious", e[e.MediaStop = 126] = "MediaStop", e[e.MediaPlayPause = 127] = "MediaPlayPause", e[e.LaunchMediaPlayer = 128] = "LaunchMediaPlayer", e[e.LaunchMail = 129] = "LaunchMail", e[e.LaunchApp2 = 130] = "LaunchApp2", e[e.Clear = 131] = "Clear", e[e.MAX_VALUE = 132] = "MAX_VALUE"
                }(N || (N = {})),
                function(e) {
                    e[e.Hint = 1] = "Hint", e[e.Info = 2] = "Info", e[e.Warning = 4] = "Warning", e[e.Error = 8] = "Error"
                }(v || (v = {})),
                function(e) {
                    e[e.Unnecessary = 1] = "Unnecessary", e[e.Deprecated = 2] = "Deprecated"
                }(L || (L = {})),
                function(e) {
                    e[e.Inline = 1] = "Inline", e[e.Gutter = 2] = "Gutter"
                }(b || (b = {})),
                function(e) {
                    e[e.Normal = 1] = "Normal", e[e.Underlined = 2] = "Underlined"
                }(M || (M = {})),
                function(e) {
                    e[e.UNKNOWN = 0] = "UNKNOWN", e[e.TEXTAREA = 1] = "TEXTAREA", e[e.GUTTER_GLYPH_MARGIN = 2] = "GUTTER_GLYPH_MARGIN", e[e.GUTTER_LINE_NUMBERS = 3] = "GUTTER_LINE_NUMBERS", e[e.GUTTER_LINE_DECORATIONS = 4] = "GUTTER_LINE_DECORATIONS", e[e.GUTTER_VIEW_ZONE = 5] = "GUTTER_VIEW_ZONE", e[e.CONTENT_TEXT = 6] = "CONTENT_TEXT", e[e.CONTENT_EMPTY = 7] = "CONTENT_EMPTY", e[e.CONTENT_VIEW_ZONE = 8] = "CONTENT_VIEW_ZONE", e[e.CONTENT_WIDGET = 9] = "CONTENT_WIDGET", e[e.OVERVIEW_RULER = 10] = "OVERVIEW_RULER", e[e.SCROLLBAR = 11] = "SCROLLBAR", e[e.OVERLAY_WIDGET = 12] = "OVERLAY_WIDGET", e[e.OUTSIDE_EDITOR = 13] = "OUTSIDE_EDITOR"
                }(K || (K = {})),
                function(e) {
                    e[e.AIGenerated = 1] = "AIGenerated"
                }(F || (F = {})),
                function(e) {
                    e[e.Invoke = 0] = "Invoke", e[e.Automatic = 1] = "Automatic"
                }(k || (k = {})),
                function(e) {
                    e[e.TOP_RIGHT_CORNER = 0] = "TOP_RIGHT_CORNER", e[e.BOTTOM_RIGHT_CORNER = 1] = "BOTTOM_RIGHT_CORNER", e[e.TOP_CENTER = 2] = "TOP_CENTER"
                }(T || (T = {})),
                function(e) {
                    e[e.Left = 1] = "Left", e[e.Center = 2] = "Center", e[e.Right = 4] = "Right", e[e.Full = 7] = "Full"
                }(R || (R = {})),
                function(e) {
                    e[e.Word = 0] = "Word", e[e.Line = 1] = "Line", e[e.Suggest = 2] = "Suggest"
                }(D || (D = {})),
                function(e) {
                    e[e.Left = 0] = "Left", e[e.Right = 1] = "Right", e[e.None = 2] = "None", e[e.LeftOfInjectedText = 3] = "LeftOfInjectedText", e[e.RightOfInjectedText = 4] = "RightOfInjectedText"
                }(O || (O = {})),
                function(e) {
                    e[e.Off = 0] = "Off", e[e.On = 1] = "On", e[e.Relative = 2] = "Relative", e[e.Interval = 3] = "Interval", e[e.Custom = 4] = "Custom"
                }(I || (I = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.Text = 1] = "Text", e[e.Blocks = 2] = "Blocks"
                }(P || (P = {})),
                function(e) {
                    e[e.Smooth = 0] = "Smooth", e[e.Immediate = 1] = "Immediate"
                }(U || (U = {})),
                function(e) {
                    e[e.Auto = 1] = "Auto", e[e.Hidden = 2] = "Hidden", e[e.Visible = 3] = "Visible"
                }(B || (B = {})),
                function(e) {
                    e[e.LTR = 0] = "LTR", e[e.RTL = 1] = "RTL"
                }(x || (x = {})),
                function(e) {
                    e.Off = "off", e.OnCode = "onCode", e.On = "on"
                }(V || (V = {})),
                function(e) {
                    e[e.Invoke = 1] = "Invoke", e[e.TriggerCharacter = 2] = "TriggerCharacter", e[e.ContentChange = 3] = "ContentChange"
                }(H || (H = {})),
                function(e) {
                    e[e.File = 0] = "File", e[e.Module = 1] = "Module", e[e.Namespace = 2] = "Namespace", e[e.Package = 3] = "Package", e[e.Class = 4] = "Class", e[e.Method = 5] = "Method", e[e.Property = 6] = "Property", e[e.Field = 7] = "Field", e[e.Constructor = 8] = "Constructor", e[e.Enum = 9] = "Enum", e[e.Interface = 10] = "Interface", e[e.Function = 11] = "Function", e[e.Variable = 12] = "Variable", e[e.Constant = 13] = "Constant", e[e.String = 14] = "String", e[e.Number = 15] = "Number", e[e.Boolean = 16] = "Boolean", e[e.Array = 17] = "Array", e[e.Object = 18] = "Object", e[e.Key = 19] = "Key", e[e.Null = 20] = "Null", e[e.EnumMember = 21] = "EnumMember", e[e.Struct = 22] = "Struct", e[e.Event = 23] = "Event", e[e.Operator = 24] = "Operator", e[e.TypeParameter = 25] = "TypeParameter"
                }(W || (W = {})),
                function(e) {
                    e[e.Deprecated = 1] = "Deprecated"
                }(q || (q = {})),
                function(e) {
                    e[e.Hidden = 0] = "Hidden", e[e.Blink = 1] = "Blink", e[e.Smooth = 2] = "Smooth", e[e.Phase = 3] = "Phase", e[e.Expand = 4] = "Expand", e[e.Solid = 5] = "Solid"
                }($ || ($ = {})),
                function(e) {
                    e[e.Line = 1] = "Line", e[e.Block = 2] = "Block", e[e.Underline = 3] = "Underline", e[e.LineThin = 4] = "LineThin", e[e.BlockOutline = 5] = "BlockOutline", e[e.UnderlineThin = 6] = "UnderlineThin"
                }(G || (G = {})),
                function(e) {
                    e[e.AlwaysGrowsWhenTypingAtEdges = 0] = "AlwaysGrowsWhenTypingAtEdges", e[e.NeverGrowsWhenTypingAtEdges = 1] = "NeverGrowsWhenTypingAtEdges", e[e.GrowsOnlyWhenTypingBefore = 2] = "GrowsOnlyWhenTypingBefore", e[e.GrowsOnlyWhenTypingAfter = 3] = "GrowsOnlyWhenTypingAfter"
                }(z || (z = {})),
                function(e) {
                    e[e.None = 0] = "None", e[e.Same = 1] = "Same", e[e.Indent = 2] = "Indent", e[e.DeepIndent = 3] = "DeepIndent"
                }(j || (j = {}))
        },
        yFKF: (e, t, n) => {
            n.d(t, {
                C$: () => a,
                aj: () => l
            });
            let r = "undefined" != typeof document && document.location && document.location.hash.indexOf("pseudo=true") >= 0;
            let i, s = !1,
                o = {};

            function a(e, t, n, ...i) {
                s = !0;
                const a = "object" == typeof t ? t.key : t;
                return function(e, t) {
                    let n;
                    return n = 0 === t.length ? e : e.replace(/\{(\d+)\}/g, ((e, n) => {
                        const r = n[0],
                            i = t[r];
                        let s = e;
                        return "string" == typeof i ? s = i : "number" != typeof i && "boolean" != typeof i && null != i || (s = String(i)), s
                    })), r && (n = "［" + n.replace(/[aouei]/g, "$&$&") + "］"), n
                }((o[e] ? ? {})[a] ? ? n, i)
            }

            function l(e) {
                return i
            }
        }
    }
]);
//# sourceMappingURL=https://hrcdn.net/fcore/assets/sourcemaps/defaultVendors-node_modules_vscode_vscode_src_vs_base_common_cancellation_js-node_modules_vsc-370a27-11a12a02.js.map